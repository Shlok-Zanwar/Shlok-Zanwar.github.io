[{"C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\index.js":"1","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\App.js":"2","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\TodoForm.js":"3","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\TodoList.js":"4","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Todo.js":"5","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Doing.js":"6","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Done.js":"7","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\SendDone.js":"8","C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\index.js":"9","C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\App.js":"10","C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\TodoForm.js":"11","C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\TodoList.js":"12","C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\Todo.js":"13","C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\Doing.js":"14","C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\SendDone.js":"15","C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\Done.js":"16"},{"size":197,"mtime":1608372412671,"results":"17","hashOfConfig":"18"},{"size":262,"mtime":1608374981442,"results":"19","hashOfConfig":"18"},{"size":1920,"mtime":1608377246722,"results":"20","hashOfConfig":"18"},{"size":3047,"mtime":1608383603767,"results":"21","hashOfConfig":"18"},{"size":1815,"mtime":1608375222775,"results":"22","hashOfConfig":"18"},{"size":1862,"mtime":1608375238816,"results":"23","hashOfConfig":"18"},{"size":1710,"mtime":1608382308433,"results":"24","hashOfConfig":"18"},{"size":844,"mtime":1608383674893,"results":"25","hashOfConfig":"18"},{"size":197,"mtime":1608404340242,"results":"26","hashOfConfig":"27"},{"size":311,"mtime":1608396790522,"results":"28","hashOfConfig":"27"},{"size":1975,"mtime":1608404087260,"results":"29","hashOfConfig":"27"},{"size":3050,"mtime":1608402603392,"results":"30","hashOfConfig":"27"},{"size":1821,"mtime":1608395128896,"results":"31","hashOfConfig":"27"},{"size":1871,"mtime":1608395106041,"results":"32","hashOfConfig":"27"},{"size":844,"mtime":1608383674893,"results":"33","hashOfConfig":"27"},{"size":1719,"mtime":1608395119033,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1xjvqnr",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"113c1bg",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\index.js",[],["73","74"],"C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\App.js",["75"],"import './App.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <>\n    <div>\n    <h1>To-Do App - Shlok Zanwar</h1>\n      <TodoList />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\TodoForm.js",[],"C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\TodoList.js",["76","77"],"import React, {useState, useEffect} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\nimport Doing from './Doing'\r\nimport Done from './Done'\r\nimport SendDone from './SendDone';\r\n\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState( localStorage.getItem('savedTodos') ? JSON.parse(localStorage.getItem('savedTodos')) : [])\r\n\r\n    const saveToLocalStorage = () => (\r\n        localStorage.setItem('savedTodos', JSON.stringify(todos))\r\n    )\r\n\r\n    useEffect(() => {\r\n        saveToLocalStorage();\r\n        // getNumOfDone();\r\n    }, [todos])\r\n\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos)\r\n    }\r\n    \r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removeArr)\r\n    }\r\n\r\n    const sendToDo = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.todoList = true;\r\n                todo.doing = false;\r\n                todo.done = false;\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    const sendToDoing = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.todoList = false;\r\n                todo.doing = true;\r\n                todo.done = false;\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n    \r\n    const sendToDone = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.todoList = false;\r\n                todo.doing = false;\r\n                todo.done = true;\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    const deleteAllDone = () => {\r\n        let updatedTodos = [...todos].filter(todo => !todo.done)\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"todo-app\">\r\n            <h2>To Do's</h2>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo todos={todos} removeTodo={removeTodo} updateTodo={updateTodo} sendToDo={sendToDo} sendToDoing={sendToDoing} sendToDone={sendToDone} />\r\n        </div>\r\n        <div className=\"todo-app\">\r\n            <h2>Doing ....</h2>\r\n            <Doing todos={todos} removeTodo={removeTodo} updateTodo={updateTodo} sendToDo={sendToDo} sendToDoing={sendToDoing} sendToDone={sendToDone} />\r\n        </div>\r\n        <SendDone todos={todos} deleteAllDone={deleteAllDone} removeTodo={removeTodo} updateTodo={updateTodo} sendToDo={sendToDo} sendToDoing={sendToDoing} sendToDone={sendToDone}  />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoList\r\n","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Todo.js",["78","79"],"import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\n\r\nfunction Todo({todos, removeTodo, updateTodo, sendToDo , sendToDoing, sendToDone}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        todoList: true,\r\n        doing: false,\r\n        done:false,\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            todoList: true,\r\n            doing: false,\r\n            done:false,\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.todoList ? (\r\n            <div className={'todo-row'} key={index} >\r\n                <div key={todo.id}>\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <TiEdit \r\n                        onClick={() => setEdit({ id: todo.id, value: todo.text, todoList:true, doing:false, done:false })}\r\n                        className='edit-icon'\r\n                    />\r\n                    <FiSend\r\n                        onClick={() => sendToDoing(todo.id)}\r\n                    />\r\n                    <MdDoneAll\r\n                        onClick={() => sendToDone(todo.id)}\r\n                    />\r\n                    {/* <RiDeleteBin5Line \r\n                        onClick={() => removeTodo(todo.id)}\r\n                        \r\n                    /> */}\r\n                </div>\r\n            </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Todo\r\n","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Doing.js",["80","81","82"],"import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { MdArrowBack } from 'react-icons/md'\r\n\r\nfunction Doing({todos, removeTodo, updateTodo, sendToDo, sendToDoing, sendToDone}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        todoList: false,\r\n        doing: true,\r\n        done:false,\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            todoList: false,\r\n            doing: true,\r\n            done:false,\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.doing ? (\r\n            <div className={'todo-row'} key={index} >\r\n                <div key={todo.id}>\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <TiEdit \r\n                        onClick={() => setEdit({ id: todo.id, value: todo.text, todoList:false, doing:true, done:false })}\r\n                        className='edit-icon'\r\n                    />\r\n                    <MdArrowBack\r\n                        onClick={() => sendToDo(todo.id)}\r\n                    />\r\n                    <MdDoneAll\r\n                        onClick={() => sendToDone(todo.id)}\r\n                    />\r\n                    {/* <RiDeleteBin5Line \r\n                        onClick={() => removeTodo(todo.id)}\r\n                        \r\n                    /> */}\r\n                </div>\r\n            </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Doing\r\n","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Done.js",["83","84","85"],"import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { MdArrowBack } from 'react-icons/md'\r\n\r\nfunction Done({todos, removeTodo, updateTodo, sendToDo, sendToDoing, sendToDone}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        todoList: false,\r\n        doing: false,\r\n        done: true,\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            todoList: false,\r\n            doing: false,\r\n            done: true,\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.done ? (\r\n            <div className={'todo-row'} key={index} >\r\n                <div key={todo.id}>\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <TiEdit \r\n                        onClick={() => setEdit({ id: todo.id, value: todo.text, todoList:false, doing:false, done:true })}\r\n                        className='edit-icon'\r\n                    />\r\n                    <MdArrowBack\r\n                        onClick={() => sendToDo(todo.id)}\r\n                    />\r\n                    <RiDeleteBin5Line \r\n                        onClick={() => removeTodo(todo.id)}\r\n                    />\r\n                </div>\r\n            </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Done\r\n","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\SendDone.js",[],"C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\index.js",[],"C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\App.js",[],"C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\TodoForm.js",[],"C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\TodoList.js",["86"],"C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\Todo.js",[],"C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\Doing.js",[],"C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\SendDone.js",[],"C:\\Users\\princ\\Documents\\GitHub\\Shlok-Zanwar.github.io\\src\\components\\Done.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"95","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":12},{"ruleId":"96","severity":1,"message":"97","line":19,"column":8,"nodeType":"98","endLine":19,"endColumn":15,"suggestions":"99"},{"ruleId":"91","severity":1,"message":"100","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":16},{"ruleId":"91","severity":1,"message":"101","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":26},{"ruleId":"91","severity":1,"message":"100","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":16},{"ruleId":"91","severity":1,"message":"101","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":26},{"ruleId":"91","severity":1,"message":"102","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":16},{"ruleId":"91","severity":1,"message":"100","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":16},{"ruleId":"91","severity":1,"message":"103","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":19},{"ruleId":"91","severity":1,"message":"102","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":19,"column":8,"nodeType":"98","endLine":19,"endColumn":15,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar","'Done' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveToLocalStorage'. Either include it or remove the dependency array.","ArrayExpression",["107"],"'TodoList' is defined but never used.","'RiDeleteBin5Line' is defined but never used.","'FiSend' is defined but never used.","'MdDoneAll' is defined but never used.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"109","fix":"111"},"Update the dependencies array to be: [saveToLocalStorage, todos]",{"range":"112","text":"113"},{"range":"114","text":"113"},[570,577],"[saveToLocalStorage, todos]",[573,580]]