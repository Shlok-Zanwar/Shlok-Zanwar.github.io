{"version":3,"sources":["BlogTemplates/BlogButton.js","BlogTemplates/BlogImage.js","BlogTemplates/BlogList.js","BlogTemplates/BlogPara.js","BlogTemplates/BlogSubheading.js","BlogTemplates/BlogTitle.js","BlogTemplates/BlogTemplate.js","HomeComponents/HomeCards.js","HomeComponents/Home.js","MyNavbar.js","PasteBinComponents/PasteBinHome.js","firebase.js","PasteBinComponents/PasteBinApp.js","TodoAppComponents/components/TodoForm.js","TodoAppComponents/components/Todo.js","TodoAppComponents/components/Doing.js","TodoAppComponents/components/DeleteButton.js","TodoAppComponents/components/Done.js","TodoAppComponents/components/TodoList.js","TodoAppComponents/TodoApp.js","TreeComponents/Components/Grid.js","TreeComponents/Components/Tree.js","TreeComponents/Components/BST.js","TreeComponents/BSTApp.js","TreeComponents/Components/MaxHeap.js","TreeComponents/MaxHeapApp.js","TreeComponents/Components/MinHeap.js","TreeComponents/MinHeapApp.js","CanvasComponents/CanvasHome.js","CanvasComponents/CanvasApp.js","GREWords/WordDetails.js","GREWords/OneWord.js","GREWords/AddWord.js","GREWords/MapWords.js","GREWords/WordsApp.js","RoutePaths.js","App.js","index.js"],"names":["BlogButton","details","className","onClick","url","click","window","location","href","text","BlogImage","src","alt","BlogList","makeList","list","map","index","BlogPara","BlogSubheading","BlogTitle","BlogTemplate","histoy","useHistory","useState","blogData","setBlogData","enqueueSnackbar","useSnackbar","action","key","Fragment","reload","style","background","border","cursor","color","paddingRight","textDecoration","fontWeight","useEffect","scrollTo","document","title","axios","get","pathname","then","res","JSON","parse","data","blogDetail","catch","err","console","log","request","status","variant","anchorOrigin","vertical","horizontal","push","getRandomNumber","Math","floor","random","blog","type","length","size","HomeCards","require","cards","breakpointCols","default","1600","1250","940","700","columnClassName","card","to","description","date","id","Home","MyNavbar","Navbar","collapseOnSelect","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","Tooltip","placement","arrow","interactive","PasteBinHome","setUrl","localStorage","getItem","recentBins","setRecentBins","inputRef","useRef","history","loadRecentPasteBins","display","pasteBin","removeArr","filter","bin","setItem","stringify","removeRecent","innerWidth","current","focus","Helmet","textAlign","onSubmit","e","preventDefault","path","substring","split","marginBottom","placeholder","value","onChange","target","ref","maxWidth","r","toString","generateNewURL","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","this","db","firestore","doc","set","abc","PasteBinApp","result","setResult","setData","savePath","setSavePath","saved","setSaved","closeSnackbar","dontShowSnackbar","toLowerCase","firebase","getPasteBinData","recentPasteBins","pop","saveRecent","autoHideDuration","undefined","addPasteBinData","position","spellCheck","command","toCopy","temp","createElement","tempMsg","createTextNode","appendChild","body","select","execCommand","removeChild","copyToClipboard","TodoForm","props","edit","input","setInput","availableClasses","colorNames","class","classSelector","setClassSelector","selectColor","setSelectColor","handleChange","colorSelector","classesUsed","indexOf","nextClassColor","onContextMenu","handleRightClick","slice","Todo","todos","updateTodo","sendToDoing","sendToDone","handleDrag","handlePositionChange","allowDrop","setShowDelete","setEdit","todo","draggable","onDragStart","onDragEnd","onDrop","onDragOver","onDoubleClick","Doing","sendToDo","DeleteButton","deleteAllDone","removeTodo","showDelete","dataTransfer","getData","Done","TodoList","setTodos","newTodos","todoType","todoList","doing","todoId","newValue","test","prev","item","a","updatedTodos","onTodo","changeTodo","i","handleToDoDrop","newTodo","handleDoingDrop","handleDoneDrop","App","Grid","grid","loading","setLoading","search","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","makeOneRow","row","rowIndex","cell","cellIndex","leftChild","rightChild","pow","from","zIndex","borderColor","borderWidth","Node","left","right","BinarySearchTree","start","root","traversal","newNode","insertRecursive","node","minValue","deleteRecursive","findInorderSuccessor","bstArray","valueArray","treeHeight","j","rowNode","rowValue","lDepth","rDepth","BST","setGrid","setSearch","showAnimation","setShowAnimation","breathFT","getRootNode","binaryTree","setBinaryTree","makeVisualTree","k","myList","height","noOfZerosInMiddle","tempList","wait","delay","args","Promise","resolve","iForAnimation","createAnimation","compare","checkIfPresent","animation","insertNode","handleSubmit","operation","deleteTree","insertToTree","parseInt","deleteNode","searchInTree","marginLeft","checked","fontSize","BSTApp","MaxHeap","log2","myIndex","newTree","newHead","deleteFromTree","myParent","marginRight","MaxHeapApp","MinHeap","MinHeapApp","CanvasHome","loadRecentCanvas","canvas","CanvasApp","brushSize","setBrushSize","hex","setColor","canvasData","setCanvasData","getCanvasData","recentCanvas","addCanvasData","width","onChangeComplete","undo","clear","getSaveData","hideGrid","immediateLoading","saveData","backgroundColor","brushColor","brushRadius","lazyRadius","canvasWidth","canvasHeight","WordDetails","word","availableColors","synonyms","syn","meanings","meaning","examples","example","paddingBottom","tags","tag","Chip","label","margin","OneWord","isOpen","setIsOpen","overflow","setOverflow","useStyles","makeStyles","theme","backdrop","drawer","AddWord","backdropOpen","setBackdropOpen","classes","setWord","wordDetails","setWordDetails","option","setOption","removeItem","name","newField","values","newDetails","addWord","allWords","newWords","myWord","concat","handleAdd","opt","wrd","borderRadius","Backdrop","open","marginTop","onKeyUpCapture","handleKeyPress","FormControl","minWidth","InputLabel","Select","MenuItem","justifyContent","onDelete","newWord","greSet","greDay","partOfSpeech","definitions","definition","MapWords","words","breakpoints","1900","1320","setValue","renderResults","results","WordsApp","setWords","greWords","RoutePaths","forUseEffect","exact","defaults","baseURL","ReactDOM","render","StrictMode","maxSnack","getElementById"],"mappings":"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","file":"static/js/main.13162b33.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst BlogButton = ({details}) => {\r\n\r\n    const handleClick = (url) => {\r\n        window.location.href = url;\r\n    }\r\n\r\n    return (\r\n        <button className=\"redirect-button\" onClick={() => handleClick(details.click)} >\r\n            {details.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BlogButton\r\n","import React from 'react'\r\n\r\nconst BlogImage = ({details}) => {\r\n    return (\r\n        <div className=\"blog-image-div\" >\r\n            <img src={details.src} className=\"blog-image\" alt={details.alt} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogImage\r\n","import React from 'react'\r\n\r\nconst BlogList = ({details}) => {\r\n\r\n    const makeList = details.list.map(index =>\r\n            <li key={index}>\r\n                {index}\r\n            </li>\r\n    )\r\n\r\n    return (\r\n        <div className=\"blog-list\" >\r\n            <ul className=\"blog-list-ul\">\r\n                {makeList}\r\n            </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogList\r\n","import React from 'react'\r\n\r\nconst BlogPara = ({details}) => {\r\n    return (\r\n        <div className=\"blog-para\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogPara\r\n","import React from 'react'\r\n\r\nconst BlogSubheading = ({details}) => {\r\n    return (\r\n        <div className=\"blog-subheading\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogSubheading\r\n","import React from 'react'\r\n\r\nconst BlogTitle = ({details}) => {\r\n    return (\r\n        <div className=\"blog-title\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTitle\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport BlogButton from './BlogButton'\r\nimport BlogImage from './BlogImage'\r\nimport BlogList from './BlogList'\r\nimport BlogPara from './BlogPara'\r\nimport BlogSubheading from './BlogSubheading'\r\nimport BlogTitle from './BlogTitle'\r\nimport { SemipolarLoading } from 'react-loadingg';\r\nimport { useHistory } from 'react-router'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nfunction BlogTemplate() {\r\n    const histoy = useHistory(); //\r\n    const [blogData, setBlogData] = useState([]);\r\n    const { enqueueSnackbar } = useSnackbar()\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { window.location.reload() }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"rgb(251, 255, 3)\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Reload ?\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        // console.log(blogurl)\r\n        document.title = \"Blogs | Shlok Zanwar\"\r\n        axios.get(window.location.pathname)\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                setBlogData(JSON.parse(res.data.blogDetail))\r\n                document.title = \"Blogs | \" + JSON.parse(res.data.blogDetail)[0].text + \" | Shlok Zanwar\";\r\n                window.scrollTo(0, 0);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                if(err.request.status === 0){\r\n                    enqueueSnackbar(\"Something went wrong !!\", {\r\n                        variant: 'error',\r\n                        anchorOrigin:{\r\n                            vertical:\"top\",\r\n                            horizontal:\"center\"\r\n                        },\r\n                        action\r\n                    })\r\n                }\r\n                else{\r\n                    enqueueSnackbar(\"Blog not found\", {\r\n                        variant: 'error',\r\n                        anchorOrigin:{\r\n                            vertical:\"top\",\r\n                            horizontal:\"center\"\r\n                        }\r\n                    })\r\n                    histoy.push(\"/\")\r\n                }\r\n            })\r\n\r\n        \r\n    }, [])\r\n    \r\n    // if(blogData.length > 0){\r\n    //     document.title = \"Blogs | \" + blogData[0].text + \" | Shlok Zanwar\";\r\n    // }\r\n\r\n    const getRandomNumber = () =>{\r\n        return Math.floor(Math.random() * 100000);\r\n    }\r\n\r\n    const blog = blogData.map(index => {\r\n        if(index.type === \"title\"){\r\n            return <BlogTitle details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"paragraph\"){\r\n            return <BlogPara details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"subheading\"){\r\n            return <BlogSubheading details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"button\"){\r\n            return <BlogButton details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"list\"){\r\n            return <BlogList details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"image\"){\r\n            return <BlogImage details={index} key={getRandomNumber()} />\r\n        }\r\n        else{\r\n            return <div className=\"blog-para\"> ------ Could not render ------ </div>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"main-blog-div\">\r\n            {blogData.length === 0 ? <SemipolarLoading   size=\"large\" color=\"rgb(251, 255, 3)\" /> : blog}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTemplate\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Masonry from 'react-masonry-css'\r\n\r\nfunction HomeCards() {\r\n    const [cards] = useState(require('./CardDetails.json'))\r\n\r\n    // const handleClickCards = (url) =>{\r\n    //     window.location.href = \r\n    // }\r\n\r\n    const cardType = (type) => {\r\n        if(type === \"Blog\"){\r\n            return (\r\n                <div className=\"card-type green-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n        else if(type === \"App\"){\r\n            return (\r\n                <div className=\"card-type blue-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n        else if(type === \"Model\"){\r\n            return (\r\n                <div className=\"card-type yellow-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const breakpoints = {\r\n        default: 5,\r\n        1600: 4,\r\n        1250: 3,\r\n        940: 2,\r\n        700: 1\r\n    };\r\n\r\n    return ( \r\n        <Masonry\r\n            breakpointCols={breakpoints}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n            { cards.map(card =>\r\n            <Link to={card.url} key={card.id}>\r\n                <div key={card.id} className=\"cards-box\">\r\n                    <div className=\"cards-info\">\r\n                        <div className=\"cards-title\">\r\n                            {card.title}\r\n                        </div>\r\n                        <div className=\"cards-description\">\r\n                            {card.description}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-bottom-bar\">\r\n                        <div className=\"card-date \">\r\n                            {card.date}\r\n                        </div>\r\n                        {cardType(card.type)}               \r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            )}\r\n        </Masonry>\r\n    )\r\n}\r\n\r\nexport default HomeCards\r\n","import React, { useEffect } from 'react'\r\nimport HomeCards from './HomeCards'\r\n\r\nfunction Home() {\r\n    \r\n    document.title = \"Home | Shlok Zanwar\"\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <HomeCards />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport {Navbar, Nav} from \"react-bootstrap\"\r\nimport { SiHackerrank, SiGithub, SiInstagram, SiLinkedin, SiGmail, SiCodechef, SiTwitter } from \"react-icons/si\";\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\n\r\nfunction MyNavbar() {\r\n\r\n    return (\r\n        <>\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-color\" variant=\"dark\" sticky=\"top\">\r\n\r\n            <Navbar.Brand href=\"https://shlok-zanwar.github.io/\" >\r\n                Shlok Zanwar\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/todo-app\">\r\n                            To-Do App\r\n                    </Nav.Link>\r\n                    <Nav.Link href=\"https://github.com/Shlok-Zanwar\" >\r\n                            About\r\n                    </Nav.Link>\r\n                </Nav>\r\n                \r\n                <Nav>\r\n                    <Tooltip title='Github' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://github.com/Shlok-Zanwar\" className=\"navbar-icons\">\r\n                                <SiGithub />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Linkedin' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.linkedin.com/in/shlok-zanwar-0124961ba/\" className=\"navbar-icons\">\r\n                                <SiLinkedin />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='shlokzanwar14@gmail.com' placement='bottom' arrow interactive>\r\n                        <Nav.Link href=\"mailto:shlokzanwar14@gmail.com\" className=\"navbar-icons\">\r\n                                <SiGmail />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Hackerrank' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.hackerrank.com/shlok_21910163\" className=\"navbar-icons\">\r\n                                <SiHackerrank />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='CodeChef' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.codechef.com/users/shlok_zanwar\" className=\"navbar-icons\">\r\n                                <SiCodechef />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Instagram' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.instagram.com/shlok__zanwar/\" className=\"navbar-icons\">\r\n                                <SiInstagram />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Twitter' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.twitter.com/zanwar_shlok/\" className=\"navbar-icons\">\r\n                                <SiTwitter />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    \r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyNavbar","import React, { useEffect, useRef, useState } from 'react'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction PasteBinHome() {\r\n    const [url, setUrl] = useState('');\r\n    const [recentBins, setRecentBins] =  useState(localStorage.getItem('recentPasteBins') ? JSON.parse(localStorage.getItem('recentPasteBins')) : []);\r\n    const inputRef = useRef(null);\r\n    let history = useHistory();\r\n    document.title = \"Paste Bin | Shlok Zanwar\"\r\n\r\n    const generateNewURL = () => {\r\n        let r = Math.random().toString(36).substring(4);\r\n        history.push(\"/pastebin/\" + r);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        var path = url;\r\n        if(url[0] === \"/\"){\r\n            path = path.substring(1, path.length);\r\n        }\r\n        path = path.split(\"/\");\r\n        if(path.length === 1){\r\n            if(path[0] !== \"\"){\r\n                history.push(\"/pastebin/\" + path[0]);\r\n            }\r\n        }\r\n        else{\r\n            if(path[0] === \"pastebin\"){\r\n                if(path[1] !== \"\"){\r\n                    history.push(\"/pastebin/\" + path[1]);\r\n                }\r\n            }\r\n        }\r\n        // console.log(path);\r\n\r\n    }\r\n\r\n    \r\n    const removeRecent = (pasteBin) => {\r\n        const removeArr = [...recentBins].filter(bin => bin !== pasteBin);\r\n        setRecentBins(removeArr);\r\n        localStorage.setItem('recentPasteBins', JSON.stringify(removeArr))\r\n    }\r\n\r\n    \r\n    const gotoRecent = (pasteBin) => {\r\n        history.push(\"/pastebin/\" + pasteBin);\r\n    }\r\n\r\n\r\n    const loadRecentPasteBins = recentBins.map(index => {\r\n            return (\r\n                <div style={{display:\"inline-table\"}} >\r\n                    <div className=\"recent-pastebin\">\r\n                        <div style={{cursor:\"pointer\"}} onClick={() => gotoRecent(index)}>\r\n                            {\"/\" + index}\r\n                        </div>\r\n                        <div className=\"icons\">\r\n                            <Tooltip title='Delete' placement='bottom' arrow>\r\n                                <span>\r\n                                    <RiDeleteBin5Line \r\n                                        onClick={() => removeRecent(index)}\r\n                                    />\r\n                                </span>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    })\r\n    \r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n    return ( \r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"main-blog-di\">\r\n                <div className=\"blog-title\">Paste Bin</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>A pastebin for sharing data without any authentication.</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Go to some URl like \"/pastebin/any\"</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Write anything</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Save</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Share the URL with anyone</div>\r\n                <br />\r\n                <form className=\"todo-form\" onSubmit={handleSubmit} style={{marginBottom:\"6px\"}}>\r\n                    <div className=\"edit-form\" >\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Type any url\" \r\n                                value={url}\r\n                                className=\"todo-input\"\r\n                                onChange={e => setUrl(e.target.value)}\r\n                                ref={inputRef}\r\n                                style={{maxWidth:\"275px\"}}\r\n                            />\r\n                            <button className=\"todo-button edit\">Go</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}} >OR</div> \r\n                <div className=\"redirect-button\" style={{maxWidth:\"230px\"}} onClick={() => generateNewURL()} >Generate random URL</div>\r\n                {recentBins.length > 0 ?\r\n                    <>\r\n                        <br />\r\n                        <div className=\"blog-para\" style={{textAlign:\"center\"}}>Recent Paste Bins</div>\r\n                        <div className=\"recent-pastebin-outer\" style={{maxWidth:\"500px\"}}>\r\n                            {loadRecentPasteBins}\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasteBinHome\r\n","import app from \"firebase/app\";\r\n// import 'firebase/database'\r\n// import 'firebase/auth'\r\nimport 'firebase/firebase-firestore'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA3_2rnMA0F-RcBYObb9v5aKhQdB5rMYdU\",\r\n    authDomain: \"shlok-website.firebaseapp.com\",\r\n    projectId: \"shlok-website\",\r\n    storageBucket: \"shlok-website.appspot.com\",\r\n    messagingSenderId: \"993579237604\", \r\n    appId: \"1:993579237604:web:9f13901ca731fed1f82cf1\",\r\n    measurementId: \"G-CNF32VVWZE\"\r\n};\r\n\r\n\r\nclass Firebase {\r\n\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n        // this.auth = app.auth();\r\n        this.db = app.firestore();\r\n    }\r\n    \r\n \r\n    // login(email, password) {\r\n\t// \treturn this.auth.signInWithEmailAndPassword(email, password)\r\n\t// }\r\n\r\n\r\n    // async register(name, email, password) {\r\n\t// \tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n\t// \treturn this.auth.currentUser.updateProfile({\r\n\t// \t\tdisplayName: name\r\n\t// \t})\r\n\t// }\r\n\r\n\r\n    addPasteBinData (url, data) {\r\n        this.db.doc(`pastebin/${url}`).set({\r\n            data\r\n        })\r\n    }\r\n\r\n\r\n    async getPasteBinData (url) {\r\n        const abc = await this.db.doc(`pastebin/${url}`).get();\r\n        return abc.get('data');\r\n    }\r\n\r\n    addCanvasData (url, data) {\r\n        this.db.doc(`canvas/${url}`).set({\r\n            data\r\n        })\r\n    }\r\n\r\n\r\n    async getCanvasData (url) {\r\n        const abc = await this.db.doc(`canvas/${url}`).get();\r\n        return abc.get('data');\r\n    }\r\n\r\n}\r\n\r\nexport default new Firebase()","import React, { useEffect, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport firebase from '../firebase';\r\nimport { useSnackbar } from 'notistack';\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\n\r\nfunction PasteBinApp() {\r\n    const [result, setResult] = useState('');\r\n    const [data, setData] = useState('Write and Share');\r\n    const [savePath, setSavePath] = useState(\"\")\r\n    const [saved, setSaved] = useState(true);\r\n\r\n\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = command;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Paste Bin | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowPastebinSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n\r\n\r\n    const saveRecent = (path) => {\r\n        var recentPasteBins = localStorage.getItem('recentPasteBins') ? JSON.parse(localStorage.getItem('recentPasteBins')) : [];\r\n        recentPasteBins = [...recentPasteBins].filter(pasteBin => pasteBin !== path);\r\n        recentPasteBins = [path, ...recentPasteBins];\r\n        if(recentPasteBins.length > 6){\r\n            recentPasteBins.pop();\r\n        }\r\n        localStorage.setItem('recentPasteBins', JSON.stringify(recentPasteBins));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(window.location.pathname);\r\n        var path = window.location.pathname;\r\n        // console.log(path[path.length - 1]);\r\n\r\n        if(path[path.length - 1] === \"/\"){\r\n            path = path.substring(0, path.length - 1);\r\n            window.location.pathname = path;\r\n        }\r\n        path = path.substring(1, path.length);\r\n        // console.log(path)\r\n        path = path.split(\"/\");\r\n        // console.log(path)\r\n\r\n        if(path.length > 2){\r\n            window.location.pathname = \"/\" + path[0] + \"/\" + path[1];\r\n        }\r\n\r\n        if(path[0].toLowerCase() === \"pastebin\"){\r\n            setSavePath(path[1].toLowerCase());\r\n            firebase.getPasteBinData(path[1].toLowerCase()).then(setResult, saveRecent(path[1]));\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowPastebinSnack\")){\r\n            enqueueSnackbar(\"Paste bin is publically visible.\\nPlease do not share private information.\", {\r\n                variant: 'info',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(result === undefined){\r\n            firebase.addPasteBinData(savePath, \"Write and Share\");\r\n            setData(\"Write and Share\");\r\n        }\r\n        else{\r\n          setData(result);\r\n        }\r\n    }, [result])\r\n\r\n\r\n    const saveData = () => {\r\n        if(!saved){\r\n            firebase.addPasteBinData(savePath, data);\r\n            setSaved(true);\r\n            console.log(\"Saving\");\r\n        }\r\n        enqueueSnackbar(\"Details saved successfully\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{display:\"flex\", position:\"relative\"}}>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <textarea \r\n                className=\"pastebin-text\" \r\n                spellCheck=\"false\" \r\n                value={data} \r\n                onChange={e => {setData(e.target.value); setSaved(false)}}\r\n            >\r\n            </textarea>\r\n            <div className=\"pastebin-controls\"> \r\n                    <button className=\"save-share-pastebin\" onClick={() => saveData()}>\r\n                        &nbsp;&nbsp; Save &nbsp;&nbsp; \r\n                    </button>\r\n                    <Tooltip title='Share' placement='top'>\r\n                        <button className=\"save-share-pastebin\" onClick={() => {copyToClipboard(window.location.href)}}>\r\n                            <FaShare />\r\n                        </button>\r\n                    </Tooltip>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasteBinApp\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n    const availableClasses = [\r\n        \"todo-row blue\", \r\n        \"todo-row orange\", \r\n        \"todo-row pink\", \r\n        \"todo-row purple\",\r\n        \"todo-row red\",\r\n        \"todo-row green\"\r\n    ];\r\n    const colorNames = [\r\n        \"Blue\",\r\n        \"Orange\",\r\n        \"Pink\",\r\n        \"Purple\",\r\n        \"Red\",\r\n        \"Green\"\r\n    ]\r\n    const [classSelector, setClassSelector] = useState(props.edit.class + \" color-select-div\");\r\n    const [selectColor, setSelectColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(props.edit.id){\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: props.edit.list,\r\n                class: classSelector.slice(0, -17)\r\n            });\r\n        }\r\n        else{\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: \"todo\",\r\n                class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n            });\r\n        }\r\n\r\n        setInput('');\r\n\r\n    };\r\n\r\n    \r\n    const handleRightClick = (e) => {\r\n        e.preventDefault();\r\n        setSelectColor(true);\r\n    }\r\n\r\n\r\n    const nextClassColor = e => {\r\n        const classesUsed = e.target.className.split(\" \");\r\n        setClassSelector(availableClasses[(availableClasses.indexOf((classesUsed[0] + \" \" + classesUsed[1])) + 1) % availableClasses.length ] + \" color-select-div\");\r\n    }\r\n\r\n\r\n    var colorSelector = <div className={classSelector} onClick={(e) => nextClassColor(e)} onContextMenu={(e) => handleRightClick(e)}>\r\n                            {colorNames[availableClasses.indexOf(classSelector.slice(0, -17))]}\r\n                        </div>\r\n\r\n\r\n    if(selectColor){\r\n        colorSelector = availableClasses.map((className, index) => {\r\n            return(\r\n                <div className={className + \" color-select-div\"} key={colorNames[index]} onClick={(e) => {setClassSelector(e.target.className); setSelectColor(false)}} >\r\n                    {colorNames[index]}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n        {props.edit.id ? (\r\n            <div onClick={() => {setSelectColor(false);}}>\r\n                <div className=\"edit-form\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Update your todo\" \r\n                        value={input}\r\n                        className=\"todo-input\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className=\"todo-button edit\">Update</button>\r\n                </div>\r\n                {colorSelector}\r\n            </div>\r\n            ) : (\r\n            <>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add a todo\" \r\n                    value={input}\r\n                    className=\"todo-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\">Add Todo</button>\r\n            </>\r\n        )}\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Todo({todos, updateTodo, sendToDoing, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"todo\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"todo\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"todo\" ? (\r\n        <div className={todo.class}\r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Doing' placement='top' arrow>\r\n                    <span>\r\n                        <FiSend\r\n                            onClick={() => sendToDoing(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Doing({todos, updateTodo, sendToDo, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"doing\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"doing\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"doing\" ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Doing\r\n","import React from 'react'\r\n\r\nfunction DeleteButton({todos, deleteAllDone, allowDrop, removeTodo, showDelete}) {\r\n    \r\n    return [...todos].filter(todo => todo.list === \"done\").length > 1 || showDelete ? (\r\n        <button \r\n            className=\"delete-all-button\" \r\n            onClick={deleteAllDone} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDrop={(e) => removeTodo(JSON.parse(e.dataTransfer.getData(\"todo\")).id)} \r\n        >\r\n            Delete Done\r\n        </button>\r\n    ) : null\r\n}\r\n\r\nexport default DeleteButton\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Done({todos, removeTodo, updateTodo, sendToDo, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"done\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"done\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"done\"  ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Delete To-do' placement='top' arrow>\r\n                    <span>\r\n                        <RiDeleteBin5Line \r\n                            onClick={() => removeTodo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Done\r\n","import React, {useState, useEffect} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\nimport Doing from './Doing'\r\nimport DeleteButton from './DeleteButton';\r\nimport Done from './Done';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState( localStorage.getItem('savedTodos') ? JSON.parse(localStorage.getItem('savedTodos')) : []);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        // Saving data to local storage every time Todos are updated\r\n        localStorage.setItem('savedTodos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    // Preventing previously created todos from getting destroyed after update\r\n    useEffect(() => {\r\n        if(localStorage.getItem('update_version') !== \"v1\"){\r\n\r\n            const availableClasses = [\r\n                \"todo-row blue\", \r\n                \"todo-row orange\", \r\n                \"todo-row pink\", \r\n                \"todo-row purple\",\r\n                \"todo-row red\",\r\n                \"todo-row green\"\r\n            ];\r\n            var newTodos = [];\r\n            var todoType = \"\";\r\n\r\n            todos.map(todo => {\r\n                if(todo.todoList){\r\n                    todoType = \"todo\";\r\n                }\r\n                else if (todo.doing){\r\n                    todoType = \"doing\";\r\n                }\r\n                else{\r\n                    todoType = \"done\";\r\n                }\r\n\r\n                var updateTodo = {\r\n                    id: todo.id,\r\n                    text: todo.text,\r\n                    list: todoType,\r\n                    class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n                }\r\n                newTodos.push(updateTodo);\r\n            });\r\n            \r\n            setTodos(newTodos);\r\n            localStorage.setItem(\"update_version\", \"v1\"); \r\n        }\r\n    }, [])\r\n\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos)\r\n    }\r\n    \r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(a => {\r\n            return setTodos(removeArr);\r\n        })\r\n    }\r\n\r\n\r\n    const sendToDo = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"todo\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const sendToDoing = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"doing\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n    \r\n\r\n    const sendToDone = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"done\";\r\n            }\r\n            return todo;\r\n        })\r\n        enqueueSnackbar(\"Yayyy !! You completed a todo. \", {\r\n            variant: 'success',\r\n        });\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const deleteAllDone = () => {\r\n        let updatedTodos = [...todos].filter(todo => todo.list !== \"done\")\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const handleDrag = (e, todo) => {\r\n        e.dataTransfer.setData(\"todo\", todo);\r\n        setShowDelete(true);\r\n    }\r\n\r\n\r\n    const handleToDoDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDo(id);\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoingDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDoing((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoneDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDone((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handlePositionChange = (e, onTodo) => {\r\n        var changeTodo = JSON.parse(e.dataTransfer.getData(\"todo\"));\r\n        changeTodo.list = onTodo.list;\r\n\r\n        const newTodos = [];\r\n        var i;\r\n        for(i = 0; i < todos.length; i ++){\r\n            \r\n            if(todos[i].id !== changeTodo.id){\r\n                newTodos.push(todos[i]);\r\n            }\r\n            if(todos[i].id === onTodo.id){\r\n                newTodos.push(changeTodo);\r\n            }\r\n        }\r\n        setShowDelete(false);\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(prev => {\r\n            return setTodos(newTodos);\r\n        });\r\n    }\r\n    \r\n\r\n    const allowDrop = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"todo-app\" onDrop={(e) => handleToDoDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2>To Do's</h2>\r\n            <TodoForm onSubmit={addTodo} edit={{class: \"todo-row blue\"}} newTodo={true}/>\r\n            <Todo \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDoing={sendToDoing} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app\" onDrop={(e) => handleDoingDrop(e)} onDragOver={(e) => allowDrop(e)} >\r\n            <h2>Doing ....</h2>\r\n            <Doing \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag}\r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app extra-padding\" onDrop={(e) => handleDoneDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2>Done !!!</h2>\r\n            <Done \r\n                todos={todos} \r\n                removeTodo={removeTodo} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n            <DeleteButton \r\n                todos={todos}\r\n                deleteAllDone={deleteAllDone} \r\n                allowDrop={allowDrop} \r\n                removeTodo={removeTodo} \r\n                showDelete={showDelete} \r\n            />\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoList\r\n","import './TodoApp.css';\nimport TodoList from './components/TodoList';\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from 'react';\n\nfunction App() {\n\n  document.title = \"To-Do App | Shlok Zanwar\"\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <>\n    <div className=\"main-outer-todo-div\">\n      <Link to=\"blogs/todo-app\">\n        <h1>To-Do App</h1>\n      </Link>\n      <TodoList />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useEffect } from 'react'\r\nimport LineTo from 'react-lineto'\r\n\r\nfunction Grid({grid, loading, setLoading, search}) {\r\n\r\n\r\n    function debounce(fn, ms) {\r\n        let timer\r\n        return _ => {\r\n            clearTimeout(timer)\r\n            timer = setTimeout(_ => {\r\n                timer = null\r\n                fn.apply(this, arguments)\r\n            }, ms)\r\n        };\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const debouncedHandleResize = debounce(function handleResize() {\r\n            setLoading(true);\r\n        }, 500)\r\n        \r\n        window.addEventListener('resize', debouncedHandleResize)\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setLoading(false), 100);\r\n    }, [loading])\r\n\r\n\r\n    const makeOneRow = (row, rowIndex) => \r\n        row.map((cell, cellIndex) => {\r\n            if(cell !== 0){\r\n                if(cell === search){\r\n\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" searched\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString()} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            else{\r\n                return(\r\n                    <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" transparent\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                        {}\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n\r\n    const makeRows = () => {\r\n        return grid.map((row, rowIndex) => (\r\n            <div className=\"rows\" key={\"r\" + rowIndex.toString()}>\r\n                {makeOneRow(row, rowIndex)}\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    \r\n    var zIndex = -1;\r\n    var makeArrows = () => {\r\n        return(\r\n            grid.map((row, rowIndex) => {\r\n                return(\r\n                    row.map((cell, cellIndex) => {\r\n                        if(cell !== 0 && rowIndex < grid.length - 1){\r\n                            // console.log(\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString() + \"   \" + \"r\"+(rowIndex+1).toString() + \"c\" + cellIndex.toString() );\r\n                            \r\n                            var leftChild = cellIndex;\r\n                            var rightChild = cellIndex + Math.pow(2, grid.length-rowIndex-1);\r\n\r\n                            // console.log(rowIndex, \" \", leftChild, \" \" , rightChild);\r\n\r\n                            if(grid[rowIndex+1][leftChild] !== 0 && grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <>\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()} \r\n                                    />\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()} \r\n                                    />\r\n                                    </>\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][leftChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}\r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"   \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"tree-outer-div\">\r\n            <div className=\"tree-main-div\">\r\n                {makeRows()}\r\n                {loading ? null : makeArrows() }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Grid;\r\n","class Node { \r\n    constructor(data) \r\n    { \r\n        this.data = data; \r\n        this.left = null; \r\n        this.right = null; \r\n    } \r\n} \r\n\r\n\r\nexport class BinarySearchTree { \r\n    constructor(start){ \r\n        this.root = start; \r\n        this.traversal = [];\r\n    } \r\n\r\n\r\n    deleteTree() {\r\n        this.root = null;\r\n    }\r\n\r\n\r\n    getRootNode() { \r\n        return this.root; \r\n    } \r\n\r\n\r\n    insertNode(data){ \r\n        var newNode = new Node(data); \r\n        this.traversal = [];\r\n\r\n        if(this.root === null || this.root === undefined) {\r\n            this.root = newNode; \r\n        }\r\n        else{\r\n            this.insertRecursive(this.root, newNode); \r\n        }\r\n\r\n        this.traversal.push(data);\r\n        return this.traversal;\r\n    } \r\n    \r\n\r\n    insertRecursive(node, newNode) { \r\n        this.traversal.push(node.data);\r\n\r\n        if(newNode.data < node.data) {\r\n            if(node.left === null || node.left === undefined){ \r\n                node.left = newNode; \r\n            }\r\n            else{\r\n                this.insertRecursive(node.left, newNode);  \r\n            }\r\n        } \r\n        else{ \r\n            if(node.right === null || node.left === undefined) {\r\n                node.right = newNode;\r\n            } \r\n            else{\r\n                this.insertRecursive(node.right,newNode); \r\n            }\r\n        } \r\n    } \r\n\r\n\r\n    findInorderSuccessor(node){\r\n        let minValue = node.data;\r\n        while(node.left != null){\r\n            minValue = node.left.data;\r\n            node = node.left;\r\n        }\r\n        return minValue;\r\n    }\r\n\r\n\r\n    deleteNode(data){\r\n        this.root = this.deleteRecursive(this.root, data);\r\n    }\r\n\r\n\r\n    deleteRecursive(node, data){\r\n        if (node === null){\r\n            return node;\r\n        }\r\n        if(data < node.data){\r\n            node.left = this.deleteRecursive(node.left, data);\r\n        }\r\n        else if(data > node.data){\r\n            node.right = this.deleteRecursive(node.right, data);\r\n        }\r\n        else{\r\n            if(node.left === null){\r\n                return node.right;\r\n            }\r\n            else if(node.right === null){\r\n                return node.left;\r\n            }\r\n            else{\r\n                node.data = this.findInorderSuccessor(node.right);\r\n                node.right = this.deleteRecursive(node.right, node.data);\r\n            }\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    breathFT(node){\r\n        if(node === null || node === undefined){\r\n            return [];\r\n        }\r\n\r\n        var bstArray = [[node]];\r\n        var valueArray = [[node.data]];\r\n\r\n        const treeHeight = this.treeHeight(node);\r\n        let i = 0, j = 0;\r\n\r\n        for(i = 0; i < treeHeight; i++){\r\n            var rowNode = [];\r\n            var rowValue = [];\r\n            for(j = 0; j < Math.pow(2, i); j++ ){\r\n                if(bstArray[i][j] === null || bstArray[i][j] === undefined ){\r\n                    rowNode.push(null);\r\n                    rowNode.push(null);\r\n\r\n                    rowValue.push(0);\r\n                    rowValue.push(0);\r\n                }\r\n                else{\r\n                    rowNode.push(bstArray[i][j].left);\r\n                    rowNode.push(bstArray[i][j].right);\r\n\r\n                    rowValue.push(bstArray[i][j].left ? bstArray[i][j].left.data : 0);\r\n                    rowValue.push(bstArray[i][j].right ? bstArray[i][j].right.data : 0);\r\n                }\r\n            }\r\n            bstArray.push(rowNode);\r\n            valueArray.push(rowValue);\r\n        }\r\n        // console.log(\"BFT : \", bstArray);\r\n        // console.log(\"Value BFT : \", valueArray);\r\n        return valueArray;\r\n    }\r\n\r\n\r\n    treeHeight(node){\r\n        if (node == null)\r\n            return -1;\r\n        else\r\n        {\r\n            var lDepth = this.treeHeight(node.left);\r\n            var rDepth = this.treeHeight(node.right);\r\n    \r\n            if (lDepth > rDepth)\r\n                return (lDepth + 1);\r\n            else\r\n                return (rDepth + 1);\r\n        }\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\nimport {BinarySearchTree} from './Tree'\r\n\r\nfunction BST() {\r\n    \r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n    const [showAnimation, setShowAnimation] = useState(true);\r\n    const [BST, setBST] =  useState(new BinarySearchTree( localStorage.getItem(\"BSTRoot\") ? JSON.parse(localStorage.getItem(\"BSTRoot\")) : null ));\r\n    const [binaryTree, setBinaryTree] = useState(BST.breathFT(BST.getRootNode()));\r\n\r\n    useEffect(() => {\r\n        makeVisualTree();\r\n        localStorage.setItem('BSTRoot', JSON.stringify(BST.getRootNode()));\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n        const height = BST.treeHeight(BST.getRootNode()) + 1;\r\n\r\n        for(i = 0; i < height; i ++){\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n    const wait = (delay, ...args) => new Promise(resolve => setTimeout(resolve, delay, ...args));\r\n    var iForAnimation = 0; \r\n    const createAnimation = async(compare) => {\r\n        await wait(700);\r\n        setSearch(compare[iForAnimation]);\r\n        iForAnimation ++;                   \r\n        if (iForAnimation < compare.length) {          \r\n            await createAnimation(compare);             \r\n        }\r\n    }\r\n\r\n\r\n    const checkIfPresent = (data) => {\r\n        var i, j;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    async function insertToTree(data){\r\n        if(checkIfPresent(data)){\r\n            enqueueSnackbar(data +\" is already present !!\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        let animation = BST.insertNode(data);\r\n        animation.push(search);\r\n        setBinaryTree(BST.breathFT(BST.getRootNode()));\r\n        enqueueSnackbar(data + \" added to binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n        if(showAnimation){\r\n            await createAnimation(animation);\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    const deleteFromTree = (data) => {\r\n        if(!checkIfPresent(data)){\r\n            enqueueSnackbar(data + \" not found !!\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n    \r\n        BST.deleteNode(data);\r\n        setBinaryTree(BST.breathFT(BST.getRootNode()));\r\n\r\n        enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        var i, j;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    setSearch(data);\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            BST.deleteTree();\r\n            setBinaryTree(BST.breathFT(BST.getRootNode()));\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        if(operation === \"Insert\"){\r\n            insertToTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Delete\"){\r\n            deleteFromTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            searchInTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Delete\" >Delete</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"80px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                \r\n                <span><Tooltip title='Show Animation' placement='bottom' arrow>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" checked={showAnimation} onChange={() => {setShowAnimation(!showAnimation)}} />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </Tooltip></span>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Binary-Tree-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                \r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BST\r\n","import './TreeCss.css';\r\nimport BST from './Components/BST';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\n\r\nfunction BSTApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"BST Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <BST />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BSTApp;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\n\r\nfunction MaxHeap() {\r\n    const [binaryTree, setBinaryTree] = useState(localStorage.getItem(\"maxHeap\") ? JSON.parse(localStorage.getItem(\"maxHeap\")) : [])\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n\r\n    useEffect(() => {\r\n        makeVisualTree();\r\n        localStorage.setItem(\"maxHeap\", JSON.stringify(binaryTree));\r\n    }, [binaryTree])\r\n\r\n\r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n        const height = parseInt(Math.log2(binaryTree.length)) + 1;\r\n\r\n        for(i = 0; i < height; i ++){\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n\r\n            for(j = 0; j < Math.pow(2, i); j ++){\r\n                var myIndex = Math.pow(2, i) - 1 + j;\r\n                if(myIndex < binaryTree.length){\r\n                    tempList.push(binaryTree[myIndex]);\r\n                }\r\n                else{\r\n                    tempList.push(0)\r\n                }\r\n\r\n                if(j !== Math.pow(2, i) - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        var i = newTree.length, myParent, temp;\r\n        newTree.push(data);\r\n\r\n        while(i !== 0){\r\n            myParent = parseInt((i-1)/2);\r\n            if(newTree[i] > newTree[myParent]){\r\n                temp = newTree[i];\r\n                newTree[i] = newTree[myParent];\r\n                newTree[myParent] = temp;\r\n                i = myParent;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(data + \" added to binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        if(binaryTree.length === 0){\r\n            enqueueSnackbar(\"Nothing to delete\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        var newTree = [...binaryTree];\r\n        var newHead = newTree.pop(), i = 0, temp;\r\n\r\n        if(newTree.length > 0){\r\n            newTree[i] = newHead;\r\n            var leftChild, rightChild\r\n\r\n            while(true){\r\n                leftChild = i*2 + 1;\r\n                rightChild = i*2 + 2;\r\n\r\n                if(leftChild >= newTree.length){\r\n                    break;\r\n                }\r\n                else if(rightChild >= newTree.length){\r\n                    if(newTree[leftChild] > newTree[i]){\r\n                        temp = newTree[i];\r\n                        newTree[i] = newTree[leftChild];\r\n                        newTree[leftChild] = temp;\r\n                    }\r\n                    break;\r\n                }\r\n                else{\r\n                    if(newTree[leftChild] >= newTree[rightChild]){\r\n                        if(newTree[leftChild] > newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[leftChild];\r\n                            newTree[leftChild] = temp;\r\n\r\n                            i = leftChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                    else{\r\n                        if(newTree[rightChild] > newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[rightChild];\r\n                            newTree[rightChild] = temp;\r\n\r\n                            i = rightChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(\"Deleted root node successfully.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        var i;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            if(binaryTree[i] === data){\r\n                setSearch(data);\r\n                enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                    variant: 'success',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            setBinaryTree([]);\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            searchInTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Max Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n                \r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                \r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MaxHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MaxHeap from './Components/MaxHeap';\r\n\r\n\r\nfunction MaxHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Max Heap Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MaxHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MaxHeapApp;","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\n\r\nfunction MinHeap() {\r\n    const [binaryTree, setBinaryTree] = useState(localStorage.getItem(\"minHeap\") ? JSON.parse(localStorage.getItem(\"minHeap\")) : [])\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n\r\n    useEffect(() => {\r\n        makeVisualTree();\r\n        localStorage.setItem(\"minHeap\", JSON.stringify(binaryTree));\r\n    }, [binaryTree])\r\n\r\n\r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n        const height = parseInt(Math.log2(binaryTree.length)) + 1;\r\n\r\n        for(i = 0; i < height; i ++){\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n\r\n            for(j = 0; j < Math.pow(2, i); j ++){\r\n                var myIndex = Math.pow(2, i) - 1 + j;\r\n                if(myIndex < binaryTree.length){\r\n                    tempList.push(binaryTree[myIndex]);\r\n                }\r\n                else{\r\n                    tempList.push(0)\r\n                }\r\n\r\n                if(j !== Math.pow(2, i) - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        var i = newTree.length, myParent, temp;\r\n        newTree.push(data);\r\n\r\n        while(i !== 0){\r\n            myParent = parseInt((i-1)/2);\r\n            if(newTree[i] < newTree[myParent]){\r\n                temp = newTree[i];\r\n                newTree[i] = newTree[myParent];\r\n                newTree[myParent] = temp;\r\n                i = myParent;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(data + \" added to binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        if(binaryTree.length === 0){\r\n            enqueueSnackbar(\"Nothing to delete\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        var newTree = [...binaryTree];\r\n        var newHead = newTree.pop(), i = 0, temp;\r\n\r\n        if(newTree.length > 0){\r\n            newTree[i] = newHead;\r\n            var leftChild, rightChild\r\n\r\n            while(true){\r\n                leftChild = i*2 + 1;\r\n                rightChild = i*2 + 2;\r\n\r\n                if(leftChild >= newTree.length){\r\n                    break;\r\n                }\r\n                else if(rightChild >= newTree.length){\r\n                    if(newTree[leftChild] < newTree[i]){\r\n                        temp = newTree[i];\r\n                        newTree[i] = newTree[leftChild];\r\n                        newTree[leftChild] = temp;\r\n                    }\r\n                    break;\r\n                }\r\n                else{\r\n                    if(newTree[leftChild] <= newTree[rightChild]){\r\n                        if(newTree[leftChild] < newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[leftChild];\r\n                            newTree[leftChild] = temp;\r\n\r\n                            i = leftChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                    else{\r\n                        if(newTree[rightChild] < newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[rightChild];\r\n                            newTree[rightChild] = temp;\r\n\r\n                            i = rightChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(\"Deleted root node successfully.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        var i;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            if(binaryTree[i] === data){\r\n                setSearch(data);\r\n                enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                    variant: 'success',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            setBinaryTree([]);\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            searchInTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Min Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                \r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MinHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MinHeap from './Components/MinHeap';\r\n\r\n\r\nfunction MinHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Min Heap Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MinHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MinHeapApp;","import React, { useEffect, useRef, useState } from 'react'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction CanvasHome() {\r\n    const [url, setUrl] = useState('');\r\n    const [recentBins, setRecentBins] =  useState(localStorage.getItem('recentCanvas') ? JSON.parse(localStorage.getItem('recentCanvas')) : []);\r\n    const inputRef = useRef(null);\r\n    let history = useHistory();\r\n    document.title = \"Canvas | Shlok Zanwar\";\r\n\r\n    const generateNewURL = () => {\r\n        let r = Math.random().toString(36).substring(4);\r\n        history.push(\"/canvas/\" + r);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        var path = url;\r\n        if(url[0] === \"/\"){\r\n            path = path.substring(1, path.length);\r\n        }\r\n        path = path.split(\"/\");\r\n        if(path.length === 1){\r\n            if(path[0] !== \"\"){\r\n                history.push(\"/canvas/\" + path[0]);\r\n            }\r\n        }\r\n        else{\r\n            if(path[0] === \"canvas\"){\r\n                if(path[1] !== \"\"){\r\n                    history.push(\"/canvas/\" + path[1]);\r\n                }\r\n            }\r\n        }\r\n        // console.log(path);\r\n\r\n    }\r\n\r\n    \r\n    const removeRecent = (canvas) => {\r\n        const removeArr = [...recentBins].filter(bin => bin !== canvas);\r\n        setRecentBins(removeArr);\r\n        localStorage.setItem('recentCanvas', JSON.stringify(removeArr))\r\n    }\r\n\r\n    \r\n    const gotoRecent = (canvas) => {\r\n        history.push(\"/canvas/\" + canvas);\r\n    }\r\n\r\n\r\n    const loadRecentCanvas = recentBins.map(index => {\r\n            return (\r\n                <div style={{display:\"inline-table\"}} >\r\n                    <div className=\"recent-pastebin\">\r\n                        <div style={{cursor:\"pointer\"}} onClick={() => gotoRecent(index)}>\r\n                            {\"/\" + index}\r\n                        </div>\r\n                        <div className=\"icons\">\r\n                            <Tooltip title='Delete' placement='bottom' arrow>\r\n                                <span>\r\n                                    <RiDeleteBin5Line \r\n                                        onClick={() => removeRecent(index)}\r\n                                    />\r\n                                </span>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    })\r\n    \r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n    return ( \r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"main-blog-di\">\r\n                <div className=\"blog-title\">Draw Bin</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>A canvas for sharing drawings without any authentication.</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Go to some URl like \"/canvas/any\"</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Draw anything</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Save</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Share the URL with anyone</div>\r\n                <br />\r\n                <form className=\"todo-form\" onSubmit={handleSubmit} style={{marginBottom:\"6px\"}}>\r\n                    <div className=\"edit-form\" >\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Type any url\" \r\n                                value={url}\r\n                                className=\"todo-input\"\r\n                                onChange={e => setUrl(e.target.value)}\r\n                                ref={inputRef}\r\n                                style={{maxWidth:\"275px\"}}\r\n                            />\r\n                            <button className=\"todo-button edit\">Go</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}} >OR</div> \r\n                <div className=\"redirect-button\" style={{maxWidth:\"230px\"}} onClick={() => generateNewURL()} >Generate random URL</div>\r\n                {recentBins.length > 0 ?\r\n                    <>\r\n                        <br />\r\n                        <div className=\"blog-para\" style={{textAlign:\"center\"}}>Recent Paste Bins</div>\r\n                        <div className=\"recent-pastebin-outer\" style={{maxWidth:\"500px\"}}>\r\n                            {loadRecentCanvas}\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasHome\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport firebase from '../firebase';\r\nimport { useSnackbar } from 'notistack';\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport CanvasDraw from 'react-canvas-draw';\r\nimport { SliderPicker } from 'react-color';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction CanvasApp() {\r\n    const canvas = useRef();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Canvas | Shlok Zanwar\";\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowCanvasSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowCanvasSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    const [brushSize, setBrushSize] = useState(3);\r\n    const [savePath, setSavePath] = useState(\"\");\r\n    const [result, setResult] = useState('');\r\n    const [color, setColor] = useState({hex: \"#52BF23\"});\r\n    const [canvasData, setCanvasData] = useState(null);\r\n\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = command;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    \r\n    const handleColorChange = color => setColor(color);\r\n\r\n\r\n    const handleBrushSize = e => {\r\n        if(e.target.value > 10){\r\n            setBrushSize(10);\r\n        }\r\n        else{\r\n            setBrushSize(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n    const saveRecent = (path) => {\r\n        var recentCanvas = localStorage.getItem('recentCanvas') ? JSON.parse(localStorage.getItem('recentCanvas')) : [];\r\n        recentCanvas = [...recentCanvas].filter(canvas => canvas !== path);\r\n        recentCanvas = [path, ...recentCanvas];\r\n        if(recentCanvas.length > 6){\r\n            recentCanvas.pop();\r\n        }\r\n        localStorage.setItem('recentCanvas', JSON.stringify(recentCanvas));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(window.location.pathname);\r\n        var path = window.location.pathname;\r\n        // console.log(path[path.length - 1]);\r\n\r\n        if(path[path.length - 1] === \"/\"){\r\n            path = path.substring(0, path.length - 1);\r\n            window.location.pathname = path;\r\n        }\r\n        path = path.substring(1, path.length);\r\n        // console.log(path)\r\n        path = path.split(\"/\");\r\n        // console.log(path)\r\n\r\n        if(path.length > 2){\r\n            window.location.pathname = \"/\" + path[0] + \"/\" + path[1];\r\n        }\r\n\r\n        if(path[0].toLowerCase() === \"canvas\"){\r\n            setSavePath(path[1].toLowerCase());\r\n            firebase.getCanvasData(path[1].toLowerCase()).then(setResult, saveRecent(path[1]));\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(result === undefined){\r\n            firebase.addCanvasData(savePath, {\"lines\":[],\"width\":\"100%\",\"height\":\"100%\"});\r\n            setCanvasData({\"lines\":[],\"width\":\"100%\",\"height\":\"100%\"});\r\n        }\r\n        else{\r\n          setCanvasData(result);\r\n        //   console.log(result);\r\n        }\r\n    }, [result])\r\n\r\n\r\n    const saveCanvas = e => {\r\n        firebase.addCanvasData(savePath, canvas.current.getSaveData());\r\n        console.log(\"Saving\");\r\n        enqueueSnackbar(\"Details saved successfully\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"canvas-controls\">\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Size\" \r\n                    value={brushSize}\r\n                    className=\"canvas-brush-size\"\r\n                    onChange={handleBrushSize}\r\n                />\r\n\r\n                <div style={{width:\"210px\", paddingRight:\"10px\"}}>\r\n                    <SliderPicker color={color} onChangeComplete={handleColorChange} />\r\n                </div>\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={() => {canvas.current.undo()}}\r\n                >\r\n                    &nbsp;&nbsp; Undo &nbsp;&nbsp; \r\n                </button>\r\n\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={() => {canvas.current.clear()}}\r\n                >\r\n                    &nbsp;&nbsp; Clear &nbsp;&nbsp; \r\n                </button>\r\n\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={saveCanvas}\r\n                >\r\n                    &nbsp;&nbsp; Save &nbsp;&nbsp; \r\n                </button>\r\n                <Tooltip title='Share' placement='bottom' arrow>\r\n                    <button className=\"save-share-pastebin\" onClick={() => {copyToClipboard(window.location.href)}} >\r\n                        <FaShare />\r\n                    </button>\r\n                </Tooltip>\r\n            </div >\r\n            <div className=\"canvas-div\">\r\n            {canvasData ? \r\n                <CanvasDraw\r\n                    ref={canvas}\r\n                    hideGrid\r\n                    immediateLoading={true}\r\n                    saveData={canvasData}\r\n                    backgroundColor={\"transparent\"}\r\n                    brushColor={color.hex}\r\n                    brushRadius={brushSize}\r\n                    lazyRadius={0}\r\n                    canvasWidth={\"1500px\"}\r\n                    canvasHeight={\"790px\"}\r\n                /> : <div style={{color: \"rgb(82, 192, 31)\"}}>Loading ...</div> \r\n            }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasApp\r\n\r\n","import React from 'react'\r\nimport { Chip } from '@material-ui/core';\r\n\r\nexport default function WordDetails({word, index, availableColors}) {\r\n    return (\r\n        <>\r\n            <div className=\"word-meaning\">\r\n                <div style={{fontWeight: 'bolder'}} className={availableColors[index%6] + \"-color\" }>\r\n                    Synonyms\r\n                </div>\r\n                <ul style={{position: 'relative'}}>\r\n                {\r\n                    (word.synonyms).map(syn => (\r\n                        <li style={{position: 'relative'}}>\r\n                            {syn}\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"word-meaning\">\r\n                <div style={{fontWeight: 'bolder'}} className={availableColors[index%6] + \"-color\" }>\r\n                    Meanings\r\n                </div>\r\n                <ul style={{position: 'relative'}}>\r\n                {\r\n                    (word.meanings).map(meaning => (\r\n                        <li style={{position: 'relative'}}>\r\n                            {meaning}\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"word-meaning\">\r\n                <div style={{fontWeight: 'bolder'}} className={availableColors[index%6] + \"-color\" }>\r\n                    Examples\r\n                </div>\r\n                <ul style={{position: 'relative'}}>\r\n                {\r\n                    (word.examples).map(example => (\r\n                        <li style={{position: 'relative'}}>\r\n                            {example}\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ul>\r\n            </div>\r\n            \r\n            <div className=\"word-meaning\" style={{paddingBottom: '10px'}}>\r\n                <div style={{fontWeight: 'bolder'}} className={availableColors[index%6] + \"-color\" }>\r\n                    Tags\r\n                </div>\r\n                {\r\n                    (word.tags).map(tag => (\r\n                        <Chip \r\n                            color=\"secondary\"\r\n                            label={tag}\r\n                            style={{cursor: 'pointer', margin: '5px'}}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react'\r\nimport { GrFormDown, GrFormUp } from \"react-icons/gr\";\r\nimport WordDetails from './WordDetails';\r\n\r\nexport default function OneWord({word, index}) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [overflow, setOverflow] = useState(\"auto\");\r\n\r\n    const availableColors = [\r\n        \"blue\", \r\n        \"orange\", \r\n        \"pink\", \r\n        \"purple\",\r\n        \"red\",\r\n        \"green\"\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if(!isOpen){\r\n            setOverflow(\"hidden\");\r\n            return;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setOverflow( isOpen ? \"auto\" : \"hidden\" )\r\n        }, 500);\r\n    }, [isOpen])\r\n\r\n    return (\r\n        <div className=\"accordion-outer\">\r\n            <div \r\n                className={isOpen ? \"accordion-heading \" + availableColors[index%6] : \"accordion-heading accordion-closed \" + availableColors[index%6]} \r\n                onClick={() => {setIsOpen(!isOpen)}}\r\n            >\r\n                <div>\r\n                    {word.word}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    {   \r\n                        isOpen ? (\r\n                            <GrFormUp className='edit-icon' style={{color: '#fff'}}/> \r\n                            ) : ( \r\n                            <GrFormDown className='edit-icon'/>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div  \r\n                className={isOpen ? \"accordion-data full-height \" + availableColors[index%6] + \"-border-accordion\" : \"accordion-data \" } \r\n                style={{overflow: overflow}}\r\n            >\r\n                <WordDetails \r\n                    word={word} \r\n                    index={index} \r\n                    availableColors={availableColors} \r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport WordDetails from './WordDetails';\r\nimport { Chip } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: \"#fff\",\r\n        background: 'transparent'\r\n    },\r\n}));\r\n\r\nexport default function AddWord() {\r\n    const [backdropOpen, setBackdropOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const [word, setWord] = useState(\"\");\r\n    const [wordDetails, setWordDetails] = useState({\r\n        \"synonyms\": [],\r\n        \"meanings\": [],\r\n        \"examples\": [],\r\n        \"tags\": []\r\n    });\r\n    const [option, setOption] = useState(\"synonyms\");\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleOptionChange = e => {\r\n        setOption(e.target.value)\r\n    }\r\n\r\n    const removeItem = (name, value) => {\r\n        var newField = [...wordDetails[name]].filter(values => values !== value);\r\n        var newDetails = {...wordDetails};\r\n        newDetails[name] = newField;\r\n        setWordDetails(newDetails);\r\n    }\r\n\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = command;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    const addWord = () => {\r\n        var allWords = JSON.parse(localStorage.getItem(\"greWords\"));\r\n        var newWords = [];\r\n\r\n        // for(let word of wordDetails.synonyms){\r\n            var myWord = {\r\n                \"word\": wordDetails.synonyms[0],\r\n                \"synonyms\": [...wordDetails.synonyms].filter(syn => syn !== wordDetails.synonyms[0]),\r\n                \"meanings\": wordDetails.meanings,\r\n                \"examples\": wordDetails.examples,\r\n                \"tags\": wordDetails.tags\r\n            }\r\n            newWords.push(myWord);\r\n        // }\r\n        setWordDetails({\r\n            \"synonyms\": [],\r\n            \"meanings\": [],\r\n            \"examples\": [],\r\n            \"tags\": []\r\n        })\r\n\r\n        // copyToClipboard(JSON.stringify(allWords.concat(newWords)));\r\n        localStorage.setItem(\"greWords\", JSON.stringify(allWords.concat(newWords)));\r\n    }\r\n\r\n    const handleAdd = (opt, wrd) => {\r\n        var newDetails = {...wordDetails};\r\n        // console.log(newDetails);\r\n        newDetails[opt].push(wrd);\r\n        setWordDetails(newDetails); \r\n        setWord(\"\");\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if(e.key === \"[\"){\r\n            // console.log(\"hiiii\");\r\n            setWord(word.slice(0, -1));\r\n            handleAdd(\"synonyms\", word.slice(0, -1) );\r\n        }\r\n        if(e.key === \"]\"){\r\n            // console.log(\"hiiii\");\r\n            handleAdd(\"meanings\", word.slice(0, -1));\r\n            setWord(\"\");\r\n        }\r\n        if(e.key === \"{\"){\r\n            // console.log(\"hiiii\");\r\n            handleAdd(\"examples\", word.slice(0, -1));\r\n            setWord(\"\");\r\n        }\r\n        if(e.key === \"}\"){\r\n            // console.log(\"hiiii\");\r\n            handleAdd(\"tags\", word.slice(0, -1) );\r\n            setWord(\"\");\r\n        }\r\n        // console.log(e.key);\r\n        if(e.key === \"End\"){\r\n            // handleAdd(\"tags\", word.slice(0, -1) );\r\n            addWord();\r\n            setWord(\"\");\r\n        }\r\n    }\r\n\r\n    const wordSuggestions = () => {\r\n        axios.get(\"https://api.dictionaryapi.dev/api/v2/entries/en_US/\" + word)\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                var newWord = {\r\n                    \"synonyms\": [word],\r\n                    \"meanings\": [],\r\n                    \"examples\": [],\r\n                    \"tags\": [\"Set \" + localStorage.greSet, \"Day \" + localStorage.greDay]\r\n                };\r\n                for(var meaning of (res.data[0].meanings)){\r\n                    if(meaning.partOfSpeech === \"noun\" || meaning.partOfSpeech === \"adjective\" || meaning.partOfSpeech === \"verb\" ){\r\n                        for(let definition of meaning.definitions){\r\n                            newWord.meanings.push(definition.definition)\r\n                            newWord.examples.push(definition.example)\r\n                            newWord.synonyms = newWord.synonyms.concat(definition.synonyms)\r\n                            newWord.tags.push(meaning.partOfSpeech)\r\n                    \r\n                        }\r\n                    }\r\n                }\r\n                // console.log(newWord);\r\n                setWordDetails(newWord);\r\n                enqueueSnackbar(\"Got new words\", {\r\n                    variant: 'success',\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                enqueueSnackbar(\"Error\", {\r\n                    variant: 'error',\r\n                })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                className=\"todo-button\"\r\n                style={{\r\n                    borderRadius: \"8px\",\r\n                }}\r\n                onClick={() => {\r\n                    setBackdropOpen(true);\r\n                }}\r\n            >\r\n                Add Word\r\n            </button>\r\n            <Backdrop\r\n                className={classes.backdrop}\r\n                open={backdropOpen}\r\n            >\r\n                <div className=\"add-words-div\">\r\n                    <div style={{display: 'inline-flex', marginTop: \"10px\", width: \"100%\" }}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Filter\"\r\n                            value={word}\r\n                            className=\"word-text-input\"\r\n                            style={{display: 'inline-flex', marginRight: '10px'}}\r\n                            onChange={e => {\r\n                                setWord(e.target.value);\r\n                            }}\r\n                            onKeyUpCapture={(e) => {handleKeyPress(e)}}\r\n                        />\r\n                        <FormControl variant=\"outlined\" style={{display: 'inline-flex', minWidth: '120px', marginRight: '10px'}}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Type</InputLabel>\r\n                            <Select\r\n                                value={option}\r\n                                onChange={handleOptionChange}\r\n                                label=\"Option\"\r\n                                style={{ color: \"#fff\" }}\r\n                                className={classes.root}\r\n                            >\r\n                                <MenuItem value={\"synonyms\"}>Synonym</MenuItem>\r\n                                <MenuItem value={\"meanings\"}>Meaning</MenuItem>\r\n                                <MenuItem value={\"examples\"}>Example</MenuItem>\r\n                                <MenuItem value={\"tags\"}>Tag</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <button\r\n                            className=\"todo-button\"\r\n                            style={{\r\n                                borderRadius: \"8px\",\r\n                            }}\r\n                            onClick={() => {handleAdd(option, word)}}\r\n                        >\r\n                            Add\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"add-word-details\">\r\n                        <div className=\"word-meaning\">\r\n                            <div style={{fontWeight: 'bolder'}} className={\"pink-color\" }>\r\n                                Synonyms\r\n                            </div>\r\n                            <ul style={{position: 'relative'}}>\r\n                            {\r\n                                (wordDetails.synonyms).map(syn => (\r\n                                    <li style={{position: 'relative', display: 'flex', margin: 'auto', justifyContent: 'space-between'}}>\r\n                                        <div>{syn}</div>\r\n                                        <div \r\n                                            onClick={() => {removeItem(\"synonyms\", syn)}}\r\n                                            style={{cursor: 'pointer'}}\r\n                                        >\r\n                                            X\r\n                                        </div>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"word-meaning\">\r\n                            <div style={{fontWeight: 'bolder'}} className={ \"pink-color\" }>\r\n                                Meanings\r\n                            </div>\r\n                            <ul style={{position: 'relative'}}>\r\n                            {\r\n                                (wordDetails.meanings).map(meaning => (\r\n                                    <li style={{position: 'relative', display: 'flex', margin: 'auto', justifyContent: 'space-between'}}>\r\n                                        <div>{meaning}</div>\r\n                                        <div \r\n                                            onClick={() => {removeItem(\"meanings\", meaning)}}\r\n                                            style={{cursor: 'pointer'}}\r\n                                        >\r\n                                            X\r\n                                        </div>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"word-meaning\">\r\n                            <div style={{fontWeight: 'bolder'}} className={\"pink-color\" }>\r\n                                Examples\r\n                            </div>\r\n                            <ul style={{position: 'relative'}}>\r\n                            {\r\n                                (wordDetails.examples).map(example => (\r\n                                    <li style={{position: 'relative', display: 'flex', margin: 'auto', justifyContent: 'space-between'}}>\r\n                                        <div>{example}</div>\r\n                                        <div \r\n                                            onClick={() => {removeItem(\"examples\", example)}}\r\n                                            style={{cursor: 'pointer'}}\r\n                                        >\r\n                                            X\r\n                                        </div>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                            </ul>\r\n                        </div>\r\n                        \r\n                        <div className=\"word-meaning\" style={{paddingBottom: '10px'}}>\r\n                            <div style={{fontWeight: 'bolder'}} className={\"pink-color\" }>\r\n                                Tags\r\n                            </div>\r\n                            {\r\n                                (wordDetails.tags).map(tag => (\r\n                                    <Chip \r\n                                        color=\"secondary\"\r\n                                        label={tag}\r\n                                        style={{cursor: 'pointer', margin: '5px'}}\r\n                                        onDelete={() => {removeItem(\"tags\", tag)}}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <button\r\n                        className=\"todo-button\"\r\n                        style={{borderRadius: \"8px\", margin: '10px'}}\r\n                        onClick={() => {addWord()}}\r\n                    >\r\n                        Add Word\r\n                    </button>\r\n                    <button\r\n                        className=\"todo-button\"\r\n                        style={{borderRadius: \"8px\", margin: '10px'}}\r\n                        onClick={() => {setBackdropOpen(false)}}\r\n                    >\r\n                        Close\r\n                    </button>\r\n                    <button\r\n                        className=\"todo-button\"\r\n                        style={{\r\n                            borderRadius: \"8px\",\r\n                        }}\r\n                        onClick={() => {\r\n                            wordSuggestions();\r\n                        }}\r\n                    >\r\n                        Check Word\r\n                    </button>\r\n                    \r\n                </div>\r\n                \r\n            </Backdrop>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport OneWord from './OneWord';\r\nimport Masonry from 'react-masonry-css'\r\nimport { useState } from 'react';\r\nimport FilterResults from 'react-filter-search';\r\nimport AddWord from './AddWord';\r\n\r\nexport default function MapWords({words}) {\r\n    const breakpoints = {\r\n        default: 3,\r\n        1900: 2,\r\n        1320: 1,\r\n        700: 1\r\n    };\r\n\r\n    const [value, setValue] = useState('');\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValue(input);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{ marginBottom: \"40px\", display: \"inline-flex\" }}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Filter\"\r\n                        value={input}\r\n                        className=\"todo-input\"\r\n                        onChange={e => {\r\n                            setInput(e.target.value);\r\n                        }}\r\n                        style={{ maxWidth: \"400px\" }}\r\n                    />\r\n                    <button className=\"todo-button\">Filter</button>\r\n                </form>\r\n                <AddWord />\r\n            </div>\r\n            {\r\n                <FilterResults\r\n                    value={value}\r\n                    data={words}\r\n                    renderResults={results => (\r\n                        <Masonry\r\n                            key={value}\r\n                            breakpointCols={breakpoints}\r\n                            className=\"my-masonry-grid\"\r\n                            columnClassName=\"my-masonry-grid_column\"\r\n                        >\r\n                            {results.map((word, index) => (\r\n                                <OneWord word={word} index={index} key={index} />\r\n                            ))}\r\n                        </Masonry>\r\n                    )}\r\n                />\r\n            }\r\n        </>\r\n    ); \r\n        \r\n}\r\n\r\n\r\n                // words.map((word, index) => (\r\n                //     <OneWord word={word} index={index} />\r\n                // )) ","import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react'\r\nimport MapWords from './MapWords';\r\nimport './WordsCss.css'\r\n\r\nexport default function WordsApp() {\r\n    // const [words, setWords] = useState(require('./Words.json'));\r\n    const [words, setWords] = useState(localStorage.getItem(\"greWords\") ? JSON.parse(localStorage.getItem(\"greWords\")) : [] );\r\n\r\n    useEffect(() => {\r\n        setWords(JSON.parse(localStorage.getItem(\"greWords\")));\r\n    }, [localStorage.greWords])\r\n\r\n    return (\r\n        <div className=\"words-outer-div\">\r\n            <div className=\"blog-title\">\r\n                Words\r\n            </div>\r\n            <MapWords words={words} />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport BlogTemplate from './BlogTemplates/BlogTemplate';\r\nimport Home from './HomeComponents/Home';\r\nimport MyNavbar from \"./MyNavbar\";\r\nimport PasteBinHome from './PasteBinComponents/PasteBinHome';\r\nimport PasteBinApp from './PasteBinComponents/PasteBinApp';\r\nimport TodoApp from \"./TodoAppComponents/TodoApp\"\r\nimport BSTApp from './TreeComponents/BSTApp';\r\nimport MaxHeapApp from './TreeComponents/MaxHeapApp';\r\nimport MinHeapApp from './TreeComponents/MinHeapApp';\r\nimport CanvasHome from './CanvasComponents/CanvasHome';\r\nimport CanvasApp from './CanvasComponents/CanvasApp';\r\nimport WordsApp from './GREWords/WordsApp';\r\n// import ImageModel from './ModelApps/ImageModel';\r\n\r\n\r\nfunction RoutePaths() {\r\n\r\n    var forUseEffect;\r\n    useEffect(() => {\r\n        localStorage.removeItem(\"redirectTo\");\r\n    }, [forUseEffect])\r\n\r\n    return (\r\n        <Router>\r\n            <MyNavbar />\r\n\r\n            <Switch>\r\n\r\n                <Route path=\"/blogs/\">\r\n                    <BlogTemplate />\r\n                </Route>\r\n\r\n                {/* <Route path=\"/models/10animals\">\r\n                    <ImageModel modelInfo={require(\"./ModelApps/ModelDetails/10Animals.json\")} />\r\n                </Route> */}\r\n\r\n                <Route path=\"/todo-app\">\r\n                    <TodoApp />\r\n                </Route>\r\n\r\n                <Route path=\"/gre-words\">\r\n                    <WordsApp />\r\n                </Route>\r\n\r\n                <Route exact path=\"/pastebin\">\r\n                    <PasteBinHome />\r\n                </Route>\r\n                <Route path=\"/pastebin/\">\r\n                    <PasteBinApp />\r\n                </Route>\r\n\r\n                <Route exact path=\"/canvas\">\r\n                    <CanvasHome />\r\n                </Route>\r\n                <Route path=\"/canvas/\">\r\n                    <CanvasApp />\r\n                </Route>\r\n\r\n                <Route path=\"/bst-visualization\">\r\n                    <BSTApp />\r\n                </Route>\r\n                <Route path=\"/max-heap-visualization\">\r\n                    <MaxHeapApp />\r\n                </Route>\r\n                <Route path=\"/min-heap-visualization\">\r\n                    <MinHeapApp />\r\n                </Route>\r\n\r\n\r\n                <Route path=\"/\">\r\n                    {\r\n                        localStorage.getItem('redirectTo') ? <Redirect to={localStorage.getItem('redirectTo')} /> \r\n                        : null\r\n                        \r\n                    }\r\n                    <Home />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RoutePaths\r\n","import './App.css';\nimport RoutePaths  from './RoutePaths'\n\nfunction App() {\n  return (\n    <div>\n      <RoutePaths />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { SnackbarProvider } from 'notistack';\nimport axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:8000';\naxios.defaults.baseURL = 'https://shlok-m-server.herokuapp.com/';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider\n      maxSnack={2}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={3000}\n    >\n      <App />\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}