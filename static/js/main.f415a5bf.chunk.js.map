{"version":3,"sources":["BlogTemplates/BlogButton.js","BlogTemplates/BlogImage.js","BlogTemplates/BlogList.js","BlogTemplates/BlogPara.js","BlogTemplates/BlogSubheading.js","BlogTemplates/BlogTitle.js","BlogTemplates/BlogTemplate.js","HomeComponents/HomeCards.js","HomeComponents/Home.js","MyNavbar.js","PasteBinComponents/firebase.js","PasteBinComponents/Components/PasteBinHome.js","PasteBinComponents/PasteBinApp.js","TodoAppComponents/components/TodoForm.js","TodoAppComponents/components/Todo.js","TodoAppComponents/components/Doing.js","TodoAppComponents/components/DeleteButton.js","TodoAppComponents/components/Done.js","TodoAppComponents/components/TodoList.js","TodoAppComponents/TodoApp.js","TreeComponents/Components/Grid.js","TreeComponents/Components/BST.js","TreeComponents/BSTApp.js","TreeComponents/Components/MaxHeap.js","TreeComponents/MaxHeapApp.js","TreeComponents/Components/MinHeap.js","TreeComponents/MinHeapApp.js","RoutePaths.js","App.js","index.js"],"names":["BlogButton","details","className","onClick","url","click","window","location","href","text","BlogImage","src","alt","BlogList","makeList","list","map","index","BlogPara","BlogSubheading","BlogTitle","BlogTemplate","blogData","useEffect","scrollTo","document","title","getRandomNumber","Math","floor","random","blog","type","HomeCards","useState","require","cards","breakpointCols","default","1600","1250","940","700","columnClassName","card","to","description","date","id","Home","MyNavbar","Navbar","collapseOnSelect","expand","variant","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","Tooltip","placement","arrow","interactive","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","this","db","firestore","data","doc","set","get","abc","PasteBinHome","setUrl","localStorage","getItem","JSON","parse","recentBins","setRecentBins","inputRef","useRef","loadRecentPasteBins","style","display","cursor","pasteBin","pathname","removeArr","filter","bin","setItem","stringify","removeRecent","innerWidth","current","focus","textAlign","onSubmit","e","preventDefault","path","substring","length","split","marginBottom","placeholder","value","onChange","target","ref","maxWidth","r","toString","generateNewURL","PasteBinApp","showApp","setShowApp","result","setResult","setData","savePath","setSavePath","saved","setSaved","useSnackbar","enqueueSnackbar","closeSnackbar","action","key","Fragment","dontShowSnackbar","background","border","color","paddingRight","textDecoration","fontWeight","toLowerCase","firebase","getData","then","recentPasteBins","pop","saveRecent","autoHideDuration","undefined","addData","Helmet","position","spellCheck","console","log","command","toCopy","temp","createElement","tempMsg","createTextNode","appendChild","body","select","execCommand","removeChild","copyToClipboard","TodoForm","props","edit","input","setInput","availableClasses","colorNames","class","classSelector","setClassSelector","selectColor","setSelectColor","handleChange","colorSelector","classesUsed","indexOf","nextClassColor","onContextMenu","handleRightClick","slice","Todo","todos","updateTodo","sendToDoing","sendToDone","handleDrag","handlePositionChange","allowDrop","setShowDelete","setEdit","todo","draggable","onDragStart","onDragEnd","onDrop","onDragOver","onDoubleClick","Doing","sendToDo","DeleteButton","deleteAllDone","removeTodo","showDelete","dataTransfer","Done","TodoList","setTodos","newTodos","todoType","todoList","doing","push","todoId","newValue","test","prev","item","a","updatedTodos","onTodo","changeTodo","i","handleToDoDrop","newTodo","handleDoingDrop","handleDoneDrop","App","Grid","grid","loading","setLoading","search","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","makeOneRow","row","rowIndex","cell","cellIndex","leftChild","rightChild","pow","from","zIndex","borderColor","borderWidth","BST","binaryTree","setBinaryTree","height","setHeight","setGrid","setSearch","makeVisualTree","j","k","myList","noOfZerosInMiddle","tempList","afterDeletePosi","oldI","oldJ","newI","newJ","newTree","deleteFromTree","parseInt","startI","startJ","handleSubmit","operation","max","insertToTree","searchInTree","marginLeft","fontSize","BSTApp","MaxHeap","myInsertPosition","myRow","myColumn","myParentRow","myParentCol","greaterCol","col","myDeletePosition","marginRight","MaxHeapApp","MinHeap","smallerCol","MinHeapApp","RoutePaths","removeItem","forUseEffect","ReactDOM","render","StrictMode","maxSnack","anchorOrigin","vertical","horizontal","getElementById"],"mappings":"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","file":"static/js/main.f415a5bf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst BlogButton = ({details}) => {\r\n\r\n    const handleClick = (url) => {\r\n        window.location.href = url;\r\n    }\r\n\r\n    return (\r\n        <button className=\"redirect-button\" onClick={() => handleClick(details.click)} >\r\n            {details.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BlogButton\r\n","import React from 'react'\r\n\r\nconst BlogImage = ({details}) => {\r\n    return (\r\n        <div className=\"blog-image-div\" >\r\n            <img src={details.src} className=\"blog-image\" alt={details.alt} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogImage\r\n","import React from 'react'\r\n\r\nconst BlogList = ({details}) => {\r\n\r\n    const makeList = details.list.map(index =>\r\n            <li key={index}>\r\n                {index}\r\n            </li>\r\n    )\r\n\r\n    return (\r\n        <div className=\"blog-list\" >\r\n            <ul className=\"blog-list-ul\">\r\n                {makeList}\r\n            </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogList\r\n","import React from 'react'\r\n\r\nconst BlogPara = ({details}) => {\r\n    return (\r\n        <div className=\"blog-para\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogPara\r\n","import React from 'react'\r\n\r\nconst BlogSubheading = ({details}) => {\r\n    return (\r\n        <div className=\"blog-subheading\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogSubheading\r\n","import React from 'react'\r\n\r\nconst BlogTitle = ({details}) => {\r\n    return (\r\n        <div className=\"blog-title\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTitle\r\n","import React, { useEffect } from 'react'\r\nimport BlogButton from './BlogButton'\r\nimport BlogImage from './BlogImage'\r\nimport BlogList from './BlogList'\r\nimport BlogPara from './BlogPara'\r\nimport BlogSubheading from './BlogSubheading'\r\nimport BlogTitle from './BlogTitle'\r\n\r\nfunction BlogTemplate({blogData}) {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n    document.title = \"Blogs | \" + blogData[0].text + \" | Shlok Zanwar\"\r\n\r\n    const getRandomNumber = () =>{\r\n        return Math.floor(Math.random() * 100000);\r\n    }\r\n\r\n    const blog = blogData.map(index => {\r\n        if(index.type === \"title\"){\r\n            return <BlogTitle details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"paragraph\"){\r\n            return <BlogPara details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"subheading\"){\r\n            return <BlogSubheading details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"button\"){\r\n            return <BlogButton details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"list\"){\r\n            return <BlogList details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"image\"){\r\n            return <BlogImage details={index} key={getRandomNumber()} />\r\n        }\r\n        else{\r\n            return <div className=\"blog-para\"> ------ Could not render ------ </div>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"main-blog-div\">\r\n            {blog}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTemplate\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Masonry from 'react-masonry-css'\r\n\r\nfunction HomeCards() {\r\n    const [cards] = useState(require('./CardDetails.json'))\r\n\r\n    // const handleClickCards = (url) =>{\r\n    //     window.location.href = \r\n    // }\r\n\r\n    const cardType = (type) => {\r\n        if(type === \"Blog\"){\r\n            return (\r\n                <div className=\"card-type green-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n        else if(type === \"App\"){\r\n            return (\r\n                <div className=\"card-type blue-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const breakpoints = {\r\n        default: 5,\r\n        1600: 4,\r\n        1250: 3,\r\n        940: 2,\r\n        700: 1\r\n    };\r\n\r\n    return ( \r\n        <Masonry\r\n            breakpointCols={breakpoints}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n            { cards.map(card =>\r\n            <Link to={card.url} key={card.id}>\r\n                <div key={card.id} className=\"cards-box\">\r\n                    <div className=\"cards-info\">\r\n                        <div className=\"cards-title\">\r\n                            {card.title}\r\n                        </div>\r\n                        <div className=\"cards-description\">\r\n                            {card.description}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-bottom-bar\">\r\n                        <div className=\"card-date \">\r\n                            {card.date}\r\n                        </div>\r\n                        {cardType(card.type)}               \r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            )}\r\n        </Masonry>\r\n    )\r\n}\r\n\r\nexport default HomeCards\r\n","import React, { useEffect } from 'react'\r\nimport HomeCards from './HomeCards'\r\n\r\nfunction Home() {\r\n    \r\n    document.title = \"Home | Shlok Zanwar\"\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <HomeCards />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport {Navbar, Nav} from \"react-bootstrap\"\r\nimport { SiHackerrank, SiGithub, SiInstagram, SiLinkedin, SiGmail } from \"react-icons/si\";\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\n\r\nfunction MyNavbar() {\r\n\r\n    return (\r\n        <>\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-color\" variant=\"dark\" sticky=\"top\">\r\n\r\n            <Navbar.Brand href=\"https://shlok-zanwar.github.io/\" >\r\n                Shlok Zanwar\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/todo-app\">\r\n                            To-Do App\r\n                    </Nav.Link>\r\n                </Nav>\r\n                \r\n                <Nav>\r\n                    <Tooltip title='Github' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://github.com/Shlok-Zanwar\" className=\"navbar-icons\">\r\n                                <SiGithub />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Linkedin' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.linkedin.com/in/shlok-zanwar-0124961ba/\" className=\"navbar-icons\">\r\n                                <SiLinkedin />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='shlokzanwar14@gmail.com' placement='bottom' arrow interactive>\r\n                        <Nav.Link href=\"mailto:shlokzanwar14@gmail.com\" className=\"navbar-icons\">\r\n                                <SiGmail />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Hackerrank' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.hackerrank.com/shlok_21910163\" className=\"navbar-icons\">\r\n                                <SiHackerrank />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Instagram' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.instagram.com/shlok__zanwar/\" className=\"navbar-icons\">\r\n                                <SiInstagram />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    \r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyNavbar","import app from \"firebase/app\";\r\n// import 'firebase/database'\r\n// import 'firebase/auth'\r\nimport 'firebase/firebase-firestore'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA3_2rnMA0F-RcBYObb9v5aKhQdB5rMYdU\",\r\n    authDomain: \"shlok-website.firebaseapp.com\",\r\n    projectId: \"shlok-website\",\r\n    storageBucket: \"shlok-website.appspot.com\",\r\n    messagingSenderId: \"993579237604\", \r\n    appId: \"1:993579237604:web:9f13901ca731fed1f82cf1\",\r\n    measurementId: \"G-CNF32VVWZE\"\r\n};\r\n\r\n\r\nclass Firebase {\r\n\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n        // this.auth = app.auth();\r\n        this.db = app.firestore();\r\n    }\r\n    \r\n \r\n    // login(email, password) {\r\n\t// \treturn this.auth.signInWithEmailAndPassword(email, password)\r\n\t// }\r\n\r\n\r\n    // async register(name, email, password) {\r\n\t// \tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n\t// \treturn this.auth.currentUser.updateProfile({\r\n\t// \t\tdisplayName: name\r\n\t// \t})\r\n\t// }\r\n\r\n\r\n    addData (url, data) {\r\n        this.db.doc(`pastebin/${url}`).set({\r\n            data\r\n        })\r\n    }\r\n\r\n\r\n    async getData (url) {\r\n        const abc = await this.db.doc(`pastebin/${url}`).get();\r\n        return abc.get('data');\r\n    }\r\n\r\n}\r\n\r\nexport default new Firebase()","import React, { useEffect, useRef, useState } from 'react'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction PasteBinHome() {\r\n    const [url, setUrl] = useState('');\r\n    const [recentBins, setRecentBins] =  useState(localStorage.getItem('recentPasteBins') ? JSON.parse(localStorage.getItem('recentPasteBins')) : []);\r\n    const inputRef = useRef(null);\r\n\r\n    const generateNewURL = () => {\r\n        let r = Math.random().toString(36).substring(4);\r\n        window.location.pathname += \"/\" + r;\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        var path = url;\r\n        if(url[0] === \"/\"){\r\n            path = path.substring(1, path.length);\r\n        }\r\n        path = path.split(\"/\");\r\n        if(path.length === 1){\r\n            if(path[0] !== \"\"){\r\n                window.location.pathname += \"/\" + path[0];\r\n            }\r\n        }\r\n        else{\r\n            if(path[0] === \"pastebin\"){\r\n                if(path[1] !== \"\"){\r\n                    window.location.pathname += \"/\" + path[1];\r\n                }\r\n            }\r\n        }\r\n        // console.log(path);\r\n\r\n    }\r\n\r\n    \r\n    const removeRecent = (pasteBin) => {\r\n        const removeArr = [...recentBins].filter(bin => bin !== pasteBin);\r\n        setRecentBins(removeArr);\r\n        localStorage.setItem('recentPasteBins', JSON.stringify(removeArr))\r\n    }\r\n\r\n    \r\n    const gotoRecent = (pasteBin) => {\r\n        window.location.pathname += \"/\" + pasteBin\r\n    }\r\n\r\n\r\n    const loadRecentPasteBins = recentBins.map(index => {\r\n            return (\r\n                <div style={{display:\"inline-table\"}} >\r\n                    <div className=\"recent-pastebin\">\r\n                        <div style={{cursor:\"pointer\"}} onClick={() => gotoRecent(index)}>\r\n                            {\"/\" + index}\r\n                        </div>\r\n                        <div className=\"icons\">\r\n                            <Tooltip title='Delete' placement='bottom' arrow>\r\n                                <span>\r\n                                    <RiDeleteBin5Line \r\n                                        onClick={() => removeRecent(index)}\r\n                                    />\r\n                                </span>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    })\r\n    \r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"main-blog-di\">\r\n            <div className=\"blog-title\">Paste Bin</div>\r\n            <div className=\"blog-para\" style={{textAlign:\"center\"}}>A pastebin for sharing data without any authentication.</div>\r\n            <div className=\"blog-para\" style={{textAlign:\"center\"}}>Go to some URl like \"/pastebin/any\"</div>\r\n            <div className=\"blog-para\" style={{textAlign:\"center\"}}>Write anything</div>\r\n            <div className=\"blog-para\" style={{textAlign:\"center\"}}>Save</div>\r\n            <div className=\"blog-para\" style={{textAlign:\"center\"}}>Share the URL with anyone</div>\r\n            <br />\r\n            <form className=\"todo-form\" onSubmit={handleSubmit} style={{marginBottom:\"6px\"}}>\r\n                <div className=\"edit-form\" >\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Type any url\" \r\n                            value={url}\r\n                            className=\"todo-input\"\r\n                            onChange={e => setUrl(e.target.value)}\r\n                            ref={inputRef}\r\n                            style={{maxWidth:\"275px\"}}\r\n                        />\r\n                        <button className=\"todo-button edit\">Go</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"blog-para\" style={{textAlign:\"center\"}} >OR</div> \r\n            <div className=\"redirect-button\" style={{maxWidth:\"230px\"}} onClick={() => generateNewURL()} >Generate random URL</div>\r\n            {recentBins.length > 0 ?\r\n                <>\r\n                    <br />\r\n                    <div className=\"blog-para\" style={{textAlign:\"center\"}}>Recent Paste Bins</div>\r\n                    <div className=\"recent-pastebin-outer\" style={{maxWidth:\"500px\"}}>\r\n                        {loadRecentPasteBins}\r\n                    </div>\r\n                </>\r\n                : null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasteBinHome\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport firebase from './firebase';\r\nimport { useSnackbar } from 'notistack';\r\nimport PasteBinHome from './Components/PasteBinHome';\r\nimport { FaShare } from \"react-icons/fa\";\r\n\r\n\r\nfunction PasteBinApp() {\r\n    const [showApp, setShowApp] = useState(false);\r\n    const [result, setResult] = useState('');\r\n    const [data, setData] = useState('Write and Share');\r\n    const [savePath, setSavePath] = useState(\"\")\r\n    const [saved, setSaved] = useState(true);\r\n\r\n\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = command;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Paste Bin | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowPastebinSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n\r\n\r\n    const saveRecent = (path) => {\r\n        var recentPasteBins = localStorage.getItem('recentPasteBins') ? JSON.parse(localStorage.getItem('recentPasteBins')) : [];\r\n        recentPasteBins = [...recentPasteBins].filter(pasteBin => pasteBin !== path);\r\n        recentPasteBins = [path, ...recentPasteBins];\r\n        if(recentPasteBins.length > 6){\r\n            recentPasteBins.pop();\r\n        }\r\n        localStorage.setItem('recentPasteBins', JSON.stringify(recentPasteBins));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(window.location.pathname);\r\n        var path = window.location.pathname;\r\n        // console.log(path[path.length - 1]);\r\n\r\n        if(path[path.length - 1] === \"/\"){\r\n            path = path.substring(0, path.length - 1);\r\n            window.location.pathname = path;\r\n        }\r\n        path = path.substring(1, path.length);\r\n        // console.log(path)\r\n        path = path.split(\"/\");\r\n        // console.log(path)\r\n\r\n        if(path.length === 1){\r\n            setShowApp(true)\r\n        }\r\n        else{\r\n            setShowApp(false);\r\n            if(path.length > 2){\r\n                window.location.pathname = \"/\" + path[0] + \"/\" + path[1];\r\n            }\r\n    \r\n            if(path[0].toLowerCase() === \"pastebin\"){\r\n                setSavePath(path[1].toLowerCase());\r\n                firebase.getData(path[1].toLowerCase()).then(setResult, saveRecent(path[1]));\r\n            }\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowPastebinSnack\")){\r\n            enqueueSnackbar(\"Paste bin is publically visible.\\nPlease do not share private information.\", {\r\n                variant: 'info',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(result === undefined){\r\n            firebase.addData(savePath, \"Write and Share\");\r\n            setData(\"Write and Share\");\r\n        }\r\n        else{\r\n          setData(result);\r\n        }\r\n    }, [result])\r\n\r\n\r\n    const saveData = () => {\r\n        if(!saved){\r\n            firebase.addData(savePath, data);\r\n            setSaved(true);\r\n            console.log(\"Saving\");\r\n        }\r\n        enqueueSnackbar(\"Details saved successfully\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    return showApp ?  \r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <PasteBinHome />\r\n        </div>\r\n    : (\r\n        <div style={{display:\"flex\", position:\"relative\"}}>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <textarea \r\n                className=\"pastebin-text\" \r\n                spellCheck=\"false\" \r\n                value={data} \r\n                onChange={e => {setData(e.target.value); setSaved(false)}}\r\n            >\r\n            </textarea>\r\n            <div className=\"pastebin-controls\"> \r\n                    <button className=\"save-share-pastebin\" onClick={() => saveData()}>\r\n                        &nbsp;&nbsp; Save &nbsp;&nbsp; \r\n                    </button>\r\n                    <button className=\"save-share-pastebin\" onClick={() => {copyToClipboard(window.location.href)}}>\r\n                        <FaShare /> \r\n                    </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasteBinApp\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n    const availableClasses = [\r\n        \"todo-row blue\", \r\n        \"todo-row orange\", \r\n        \"todo-row pink\", \r\n        \"todo-row purple\",\r\n        \"todo-row red\",\r\n        \"todo-row green\"\r\n    ];\r\n    const colorNames = [\r\n        \"Blue\",\r\n        \"Orange\",\r\n        \"Pink\",\r\n        \"Purple\",\r\n        \"Red\",\r\n        \"Green\"\r\n    ]\r\n    const [classSelector, setClassSelector] = useState(props.edit.class + \" color-select-div\");\r\n    const [selectColor, setSelectColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(props.edit.id){\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: props.edit.list,\r\n                class: classSelector.slice(0, -17)\r\n            });\r\n        }\r\n        else{\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: \"todo\",\r\n                class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n            });\r\n        }\r\n\r\n        setInput('');\r\n\r\n    };\r\n\r\n    \r\n    const handleRightClick = (e) => {\r\n        e.preventDefault();\r\n        setSelectColor(true);\r\n    }\r\n\r\n\r\n    const nextClassColor = e => {\r\n        const classesUsed = e.target.className.split(\" \");\r\n        setClassSelector(availableClasses[(availableClasses.indexOf((classesUsed[0] + \" \" + classesUsed[1])) + 1) % availableClasses.length ] + \" color-select-div\");\r\n    }\r\n\r\n\r\n    var colorSelector = <div className={classSelector} onClick={(e) => nextClassColor(e)} onContextMenu={(e) => handleRightClick(e)}>\r\n                            {colorNames[availableClasses.indexOf(classSelector.slice(0, -17))]}\r\n                        </div>\r\n\r\n\r\n    if(selectColor){\r\n        colorSelector = availableClasses.map((className, index) => {\r\n            return(\r\n                <div className={className + \" color-select-div\"} key={colorNames[index]} onClick={(e) => {setClassSelector(e.target.className); setSelectColor(false)}} >\r\n                    {colorNames[index]}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n        {props.edit.id ? (\r\n            <div onClick={() => {setSelectColor(false);}}>\r\n                <div className=\"edit-form\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Update your todo\" \r\n                        value={input}\r\n                        className=\"todo-input\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className=\"todo-button edit\">Update</button>\r\n                </div>\r\n                {colorSelector}\r\n            </div>\r\n            ) : (\r\n            <>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add a todo\" \r\n                    value={input}\r\n                    className=\"todo-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\">Add Todo</button>\r\n            </>\r\n        )}\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Todo({todos, updateTodo, sendToDoing, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"todo\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"todo\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"todo\" ? (\r\n        <div className={todo.class}\r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Doing' placement='top' arrow>\r\n                    <span>\r\n                        <FiSend\r\n                            onClick={() => sendToDoing(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Doing({todos, updateTodo, sendToDo, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"doing\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"doing\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"doing\" ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Doing\r\n","import React from 'react'\r\n\r\nfunction DeleteButton({todos, deleteAllDone, allowDrop, removeTodo, showDelete}) {\r\n    \r\n    return [...todos].filter(todo => todo.list === \"done\").length > 1 || showDelete ? (\r\n        <button \r\n            className=\"delete-all-button\" \r\n            onClick={deleteAllDone} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDrop={(e) => removeTodo(JSON.parse(e.dataTransfer.getData(\"todo\")).id)} \r\n        >\r\n            Delete Done\r\n        </button>\r\n    ) : null\r\n}\r\n\r\nexport default DeleteButton\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Done({todos, removeTodo, updateTodo, sendToDo, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"done\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"done\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"done\"  ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Delete To-do' placement='top' arrow>\r\n                    <span>\r\n                        <RiDeleteBin5Line \r\n                            onClick={() => removeTodo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Done\r\n","import React, {useState, useEffect} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\nimport Doing from './Doing'\r\nimport DeleteButton from './DeleteButton';\r\nimport Done from './Done';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState( localStorage.getItem('savedTodos') ? JSON.parse(localStorage.getItem('savedTodos')) : []);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        // Saving data to local storage every time Todos are updated\r\n        localStorage.setItem('savedTodos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    // Preventing previously created todos from getting destroyed after update\r\n    useEffect(() => {\r\n        if(localStorage.getItem('update_version') !== \"v1\"){\r\n\r\n            const availableClasses = [\r\n                \"todo-row blue\", \r\n                \"todo-row orange\", \r\n                \"todo-row pink\", \r\n                \"todo-row purple\",\r\n                \"todo-row red\",\r\n                \"todo-row green\"\r\n            ];\r\n            var newTodos = [];\r\n            var todoType = \"\";\r\n\r\n            todos.map(todo => {\r\n                if(todo.todoList){\r\n                    todoType = \"todo\";\r\n                }\r\n                else if (todo.doing){\r\n                    todoType = \"doing\";\r\n                }\r\n                else{\r\n                    todoType = \"done\";\r\n                }\r\n\r\n                var updateTodo = {\r\n                    id: todo.id,\r\n                    text: todo.text,\r\n                    list: todoType,\r\n                    class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n                }\r\n                newTodos.push(updateTodo);\r\n            });\r\n            \r\n            setTodos(newTodos);\r\n            localStorage.setItem(\"update_version\", \"v1\"); \r\n        }\r\n    }, [])\r\n\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos)\r\n    }\r\n    \r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(a => {\r\n            return setTodos(removeArr);\r\n        })\r\n    }\r\n\r\n\r\n    const sendToDo = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"todo\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const sendToDoing = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"doing\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n    \r\n\r\n    const sendToDone = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"done\";\r\n            }\r\n            return todo;\r\n        })\r\n        enqueueSnackbar(\"Yayyy !! You completed a todo. \", {\r\n            variant: 'success',\r\n        });\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const deleteAllDone = () => {\r\n        let updatedTodos = [...todos].filter(todo => todo.list !== \"done\")\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const handleDrag = (e, todo) => {\r\n        e.dataTransfer.setData(\"todo\", todo);\r\n        setShowDelete(true);\r\n    }\r\n\r\n\r\n    const handleToDoDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDo(id);\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoingDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDoing((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoneDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDone((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handlePositionChange = (e, onTodo) => {\r\n        var changeTodo = JSON.parse(e.dataTransfer.getData(\"todo\"));\r\n        changeTodo.list = onTodo.list;\r\n\r\n        const newTodos = [];\r\n        var i;\r\n        for(i = 0; i < todos.length; i ++){\r\n            \r\n            if(todos[i].id !== changeTodo.id){\r\n                newTodos.push(todos[i]);\r\n            }\r\n            if(todos[i].id === onTodo.id){\r\n                newTodos.push(changeTodo);\r\n            }\r\n        }\r\n        setShowDelete(false);\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(prev => {\r\n            return setTodos(newTodos);\r\n        });\r\n    }\r\n    \r\n\r\n    const allowDrop = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"todo-app\" onDrop={(e) => handleToDoDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2>To Do's</h2>\r\n            <TodoForm onSubmit={addTodo} edit={{class: \"todo-row blue\"}} newTodo={true}/>\r\n            <Todo \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDoing={sendToDoing} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app\" onDrop={(e) => handleDoingDrop(e)} onDragOver={(e) => allowDrop(e)} >\r\n            <h2>Doing ....</h2>\r\n            <Doing \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag}\r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app extra-padding\" onDrop={(e) => handleDoneDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2>Done !!!</h2>\r\n            <Done \r\n                todos={todos} \r\n                removeTodo={removeTodo} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n            <DeleteButton \r\n                todos={todos}\r\n                deleteAllDone={deleteAllDone} \r\n                allowDrop={allowDrop} \r\n                removeTodo={removeTodo} \r\n                showDelete={showDelete} \r\n            />\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoList\r\n","import './TodoApp.css';\nimport TodoList from './components/TodoList';\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from 'react';\n\nfunction App() {\n\n  document.title = \"To-Do App | Shlok Zanwar\"\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <>\n    <div className=\"main-outer-todo-div\">\n      <Link to=\"blogs/todo-app\">\n        <h1>To-Do App</h1>\n      </Link>\n      <TodoList />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useEffect } from 'react'\r\nimport LineTo from 'react-lineto'\r\n\r\nfunction Grid({grid, loading, setLoading, search}) {\r\n\r\n\r\n    function debounce(fn, ms) {\r\n        let timer\r\n        return _ => {\r\n            clearTimeout(timer)\r\n            timer = setTimeout(_ => {\r\n                timer = null\r\n                fn.apply(this, arguments)\r\n            }, ms)\r\n        };\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const debouncedHandleResize = debounce(function handleResize() {\r\n            setLoading(true);\r\n        }, 500)\r\n        \r\n        window.addEventListener('resize', debouncedHandleResize)\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setLoading(false), 100);\r\n    }, [loading])\r\n\r\n\r\n    const makeOneRow = (row, rowIndex) => \r\n        row.map((cell, cellIndex) => {\r\n            if(cell !== 0){\r\n                if(cell === search){\r\n\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" searched\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString()} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            else{\r\n                return(\r\n                    <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" transparent\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                        {}\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n\r\n    const makeRows = () => {\r\n        return grid.map((row, rowIndex) => (\r\n            <div className=\"rows\" key={\"r\" + rowIndex.toString()}>\r\n                {makeOneRow(row, rowIndex)}\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    \r\n    var zIndex = -1;\r\n    var makeArrows = () => {\r\n        return(\r\n            grid.map((row, rowIndex) => {\r\n                return(\r\n                    row.map((cell, cellIndex) => {\r\n                        if(cell !== 0 && rowIndex < grid.length - 1){\r\n                            // console.log(\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString() + \"   \" + \"r\"+(rowIndex+1).toString() + \"c\" + cellIndex.toString() );\r\n                            \r\n                            var leftChild = cellIndex;\r\n                            var rightChild = cellIndex + Math.pow(2, grid.length-rowIndex-1);\r\n\r\n                            // console.log(rowIndex, \" \", leftChild, \" \" , rightChild);\r\n\r\n                            if(grid[rowIndex+1][leftChild] !== 0 && grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <>\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()} \r\n                                    />\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()} \r\n                                    />\r\n                                    </>\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][leftChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}\r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"   \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"tree-outer-div\">\r\n            <div className=\"tree-main-div\">\r\n                {makeRows()}\r\n                {loading ? null : makeArrows() }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Grid;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\nfunction BST() {\r\n    const [binaryTree, setBinaryTree] = useState([\r\n        [0],\r\n        [0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]);\r\n    const [height, setHeight] = useState(0);\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n    \r\n    useEffect(() => {\r\n        makeVisualTree();\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n\r\n        for(i = 0; i < height; i ++){\r\n            // var noOfElements = Math.pow(2, i);\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        const newTree = [...binaryTree];\r\n        if(newTree[0][0] === 0 ){\r\n            newTree[0][0] = parseInt(data);\r\n            setBinaryTree(newTree);\r\n            setHeight(1);\r\n            enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                variant: 'success',\r\n            });\r\n            // console.log(binaryTree, \" \", height);\r\n            return;\r\n        }\r\n        \r\n        var i, j=0;\r\n        for(i = 0; i < height && i < 6; i++){\r\n            if(data < newTree[i][j]){\r\n                if(newTree[i+1][2*j] === 0){\r\n                    newTree[i+1][2*j] = parseInt(data);\r\n                    setBinaryTree(newTree);\r\n                    setHeight(Math.max(height, i + 2));\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    // console.log(binaryTree, \" \", height);\r\n                    return;\r\n                }\r\n                else{\r\n                    j = 2*j;\r\n                }\r\n            }\r\n            else if(data > newTree[i][j]){\r\n                if(newTree[i+1][2*j + 1] === 0){\r\n                    newTree[i+1][2*j + 1] = parseInt(data);\r\n                    setBinaryTree(newTree);\r\n                    setHeight(Math.max(height, i + 2));\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    // console.log(binaryTree, \" \", height);\r\n                    return;\r\n                }\r\n                else{\r\n                    j = j*2 + 1 \r\n                }\r\n            }\r\n            else{\r\n                enqueueSnackbar(data +\" is already present\", {\r\n                    variant: 'error',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(\"Maximum height reaced :(\", {\r\n            variant: 'error',\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const afterDeletePosi = (oldI, oldJ, newI, newJ, newTree) => {\r\n        newTree[newI + 1][newJ*2] = newTree[oldI + 1][oldJ*2]; \r\n        newTree[oldI + 1][oldJ*2] = 0;\r\n        newTree[newI + 1][newJ*2 + 1] = newTree[oldI + 1][oldJ*2 + 1]; \r\n        newTree[oldI + 1][oldJ*2 + 1] = 0;\r\n        if(newTree[newI + 1][newJ*2] !== 0){\r\n            newTree = afterDeletePosi(oldI + 1, oldJ*2, newI+1, newJ*2, newTree);\r\n        }\r\n        if(newTree[newI + 1][newJ*2 + 1] !== 0){\r\n            newTree = afterDeletePosi(oldI + 1, oldJ*2 + 1, newI+1, newJ*2 + 1, newTree);\r\n        }\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const deleteFromTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j, k;\r\n        var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i < 6; i ++){\r\n            for(j = 0; j < newTree[i].length; j ++){\r\n                if(newTree[i][j] === data){\r\n                    // alert(\"Found\");\r\n\r\n                    // For no left and right\r\n                    if(newTree[i + 1][2*j] === 0 && newTree[i + 1][2*j + 1] === 0){\r\n                        newTree[i][j] = 0;\r\n                        setBinaryTree(newTree);\r\n                        for(k = 0; k < newTree[i].length; k++){\r\n                            if(newTree[i][k] !== 0){\r\n                                break;\r\n                            }\r\n                        }\r\n                        if(k === newTree[i].length){\r\n                            setHeight(i);\r\n                        }\r\n                        if(data !== -1){\r\n                            enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                variant: 'success',\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // If right empty\r\n                    else if(newTree[i + 1][2*j + 1] === 0){\r\n                        newTree[i][j] = newTree[i+1][2*j];\r\n                        newTree = afterDeletePosi(i + 1, 2*j, i, j, newTree);\r\n                        setBinaryTree(newTree);\r\n                        if(data !== -1){\r\n                            enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                variant: 'success',\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // If left empty\r\n                    else if(newTree[i + 1][2*j] === 0){\r\n                        newTree[i][j] = newTree[i+1][2*j + 1];\r\n                        newTree = afterDeletePosi(i + 1, 2*j + 1, i, j, newTree);\r\n                        setBinaryTree(newTree);\r\n                        if(data !== -1){\r\n                            enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                variant: 'success',\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // if both full\r\n                    else{\r\n                        var startI = i +1;\r\n                        var startJ = j*2 + 1;\r\n                        while(true){\r\n                            if(newTree[startI + 1][startJ*2] === 0){\r\n                                newTree[i][j] = newTree[startI][startJ];\r\n                                newTree[startI][startJ] = -1;\r\n                                setBinaryTree(newTree);\r\n                                enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                    variant: 'success',\r\n                                });\r\n                                deleteFromTree(-1);\r\n                                return;\r\n                                \r\n                            }\r\n                            else{\r\n                                startI = startI + 1;\r\n                                startJ = startJ*2;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        if(i === 6){\r\n            for(j = 0; j < newTree[i].length; j++){\r\n                if(newTree[i][j] === data){\r\n                    newTree[i][j] = 0;\r\n                    for(k = 0; k < newTree[i].length; k++){\r\n                        if(newTree[i][k] !== 0){\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(k === newTree[i].length){\r\n                        setHeight(i);\r\n                    }\r\n                    setBinaryTree(newTree);\r\n                    enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j;\r\n        // var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i <= 6; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        setSearch(-2);\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const clearTree = () => {\r\n        var newTree = [\r\n            [0],\r\n            [0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        ];\r\n        if(height > 0 || grid.length > 0){\r\n            // console.log(\"doing\");\r\n            setBinaryTree(newTree);\r\n            setGrid([]);\r\n            setHeight(0);\r\n        }\r\n        enqueueSnackbar(\"Binary Tree Cleared.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            clearTree();\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Delete\"){\r\n            deleteFromTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            setSearch(parseInt(input));\r\n            searchInTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Delete\" >Delete</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"80px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Binary-Tree-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BST\r\n","import './TreeCss.css';\r\nimport BST from './Components/BST';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\n\r\nfunction BSTApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"BST Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <BST />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BSTApp;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\nfunction MaxHeap() {\r\n    const [binaryTree, setBinaryTree] = useState([\r\n        [0],\r\n        [0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]);\r\n    const [height, setHeight] = useState(0);\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n    \r\n    useEffect(() => {\r\n        makeVisualTree();\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n\r\n        for(i = 0; i < height; i ++){\r\n            // var noOfElements = Math.pow(2, i);\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const myInsertPosition = (newTree, data, myRow, myColumn) => {\r\n        var temp;\r\n        while (myRow !== 0){\r\n            var myParentRow = myRow - 1, myParentCol = Math.floor(myColumn/2);\r\n            if(newTree[myParentRow][myParentCol] >= data ){\r\n                break;\r\n            }\r\n\r\n            temp = newTree[myParentRow][myParentCol];\r\n            newTree[myParentRow][myParentCol] = newTree[myRow][myColumn];\r\n            newTree[myRow][myColumn] = temp;\r\n\r\n            myRow = myParentRow;\r\n            myColumn = myParentCol;\r\n        }\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        data = parseInt(data);\r\n\r\n        var i, j=0;\r\n        for(i = 0; i <= height && i <= 6; i++){\r\n            for(j = 0; j < newTree[i].length; j++){\r\n\r\n                if(newTree[i][j] === 0){\r\n                    newTree[i][j] = data;\r\n                    newTree = myInsertPosition(newTree, data, i, j);\r\n\r\n                    setBinaryTree(newTree);\r\n                    setHeight(i + 1);\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(\"Maximum height reaced :(\", {\r\n            variant: 'error',\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    const myDeletePosition = (newTree) => {\r\n        var row = 0, col = 0, greaterCol, temp;\r\n        while(true){\r\n            if(newTree[row + 1][col*2 ] >= newTree[row + 1][col*2 + 1] ){\r\n                greaterCol = col * 2;\r\n            }\r\n            else{\r\n                greaterCol = (col * 2) + 1;\r\n            }\r\n\r\n            if(newTree[row][col] < newTree[row + 1][greaterCol] ){\r\n                temp = newTree[row][col];\r\n                newTree[row][col] = newTree[row + 1][greaterCol];\r\n                newTree[row + 1][greaterCol] = temp;\r\n\r\n                row = row + 1;\r\n                col = greaterCol;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n\r\n        }\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        var i, j;\r\n        var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i < 6; i ++){\r\n            if(newTree[i][0] === 0){\r\n                break;\r\n            }\r\n        }\r\n        i = i - 1;\r\n       \r\n        if(i !== -1){\r\n            for(j = 0; j < newTree[i].length; j ++){\r\n                if(newTree[i][j] === 0){\r\n                    break;\r\n                }\r\n            }\r\n\r\n            j = j - 1;\r\n            newTree[0][0] = newTree[i][j];\r\n            newTree[i][j] = 0;\r\n\r\n            newTree = myDeletePosition(newTree);\r\n            setBinaryTree(newTree);\r\n            enqueueSnackbar(\"Deleted root node successfully.\", {\r\n                variant: 'success',\r\n            });\r\n            return;\r\n        }\r\n\r\n        enqueueSnackbar(\"Nothing to delete\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j;\r\n        // var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i <= 6; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        setSearch(-2);\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const clearTree = () => {\r\n        var newTree = [\r\n            [0],\r\n            [0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        ];\r\n        if(height > 0 || grid.length > 0){\r\n            // console.log(\"doing\");\r\n            setBinaryTree(newTree);\r\n            setGrid([]);\r\n            setHeight(0);\r\n        }\r\n        enqueueSnackbar(\"Binary Tree Cleared.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            clearTree();\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            setSearch(parseInt(input));\r\n            searchInTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Max Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n                \r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MaxHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MaxHeap from './Components/MaxHeap';\r\n\r\n\r\nfunction MaxHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Max Heap Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MaxHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MaxHeapApp;","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\nfunction MinHeap() {\r\n    const [binaryTree, setBinaryTree] = useState([\r\n        [0],\r\n        [0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]);\r\n    const [height, setHeight] = useState(0);\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n    \r\n    useEffect(() => {\r\n        makeVisualTree();\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n\r\n        for(i = 0; i < height; i ++){\r\n            // var noOfElements = Math.pow(2, i);\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const myInsertPosition = (newTree, data, myRow, myColumn) => {\r\n        var temp;\r\n        while (myRow !== 0){\r\n            var myParentRow = myRow - 1, myParentCol = Math.floor(myColumn/2);\r\n            if(newTree[myParentRow][myParentCol] <= data ){\r\n                break;\r\n            }\r\n\r\n            temp = newTree[myParentRow][myParentCol];\r\n            newTree[myParentRow][myParentCol] = newTree[myRow][myColumn];\r\n            newTree[myRow][myColumn] = temp;\r\n\r\n            myRow = myParentRow;\r\n            myColumn = myParentCol;\r\n        }\r\n\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        data = parseInt(data);\r\n\r\n        var i, j=0;\r\n        for(i = 0; i <= height && i <= 6; i++){\r\n            for(j = 0; j < newTree[i].length; j++){\r\n\r\n                if(newTree[i][j] === 0){\r\n                    newTree[i][j] = data;\r\n                    newTree = myInsertPosition(newTree, data, i, j);\r\n\r\n                    setBinaryTree(newTree);\r\n                    setHeight(i + 1);\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(\"Maximum height reaced :(\", {\r\n            variant: 'error',\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    const myDeletePosition = (newTree) => {\r\n        var row = 0, col = 0, smallerCol, temp;\r\n        while(true){\r\n            if(newTree[row + 1][col*2 ] === 0 && newTree[row + 1][col*2 + 1] === 0 ){\r\n                break;\r\n            }\r\n            else if(newTree[row + 1][col*2 ] === 0){\r\n                smallerCol = (col * 2) + 1;\r\n            }\r\n            else if(newTree[row + 1][col*2 + 1] === 0){\r\n                smallerCol = (col * 2);\r\n            }\r\n            else{\r\n                if(newTree[row + 1][col*2 ] <= newTree[row + 1][col*2 + 1] ){\r\n                    smallerCol = col * 2;\r\n                }\r\n                else{\r\n                    smallerCol = (col * 2) + 1;\r\n                }\r\n            }\r\n\r\n            if(newTree[row][col] > newTree[row + 1][smallerCol] ){\r\n                temp = newTree[row][col];\r\n                newTree[row][col] = newTree[row + 1][smallerCol];\r\n                newTree[row + 1][smallerCol] = temp;\r\n\r\n                row = row + 1;\r\n                col = smallerCol;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n\r\n        return newTree\r\n\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        var i, j;\r\n        var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i < 6; i ++){\r\n            if(newTree[i][0] === 0){\r\n                break;\r\n            }\r\n        }\r\n        i = i - 1;\r\n       \r\n        if(i !== -1){\r\n            for(j = 0; j < newTree[i].length; j ++){\r\n                if(newTree[i][j] === 0){\r\n                    break;\r\n                }\r\n            }\r\n\r\n            j = j - 1;\r\n            newTree[0][0] = newTree[i][j];\r\n            newTree[i][j] = 0;\r\n\r\n            newTree = myDeletePosition(newTree);\r\n            setBinaryTree(newTree);\r\n            enqueueSnackbar(\"Deleted root node successfully.\", {\r\n                variant: 'success',\r\n            });\r\n            return;\r\n        }\r\n\r\n        enqueueSnackbar(\"Nothing to delete\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j;\r\n        // var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i <= 6; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        setSearch(-2);\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const clearTree = () => {\r\n        var newTree = [\r\n            [0],\r\n            [0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        ];\r\n        if(height > 0 || grid.length > 0){\r\n            setBinaryTree(newTree);\r\n            setGrid([]);\r\n            setHeight(0);\r\n        }\r\n        enqueueSnackbar(\"Binary Tree Cleared.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            clearTree();\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            setSearch(parseInt(input));\r\n            searchInTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Min Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MinHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MinHeap from './Components/MinHeap';\r\n\r\n\r\nfunction MinHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Min Heap Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MinHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MinHeapApp;","import React, { useEffect } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport BlogTemplate from './BlogTemplates/BlogTemplate';\r\nimport Home from './HomeComponents/Home';\r\nimport MyNavbar from \"./MyNavbar\";\r\nimport PasteBinApp from './PasteBinComponents/PasteBinApp';\r\nimport TodoApp from \"./TodoAppComponents/TodoApp\"\r\nimport BSTApp from './TreeComponents/BSTApp';\r\nimport MaxHeapApp from './TreeComponents/MaxHeapApp';\r\nimport MinHeapApp from './TreeComponents/MinHeapApp';\r\n\r\n\r\nfunction RoutePaths() {\r\n\r\n    var forUseEffect;\r\n    useEffect(() => {\r\n        localStorage.removeItem(\"redirectTo\");\r\n    }, [forUseEffect])\r\n\r\n    return (\r\n        <Router>\r\n            <MyNavbar />\r\n\r\n            <Switch>\r\n            \r\n                <Route path=\"/blogs/toxicbot\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/ToxicbotBlog.json\")} />\r\n                </Route>\r\n                <Route path=\"/blogs/todo-app\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/TodoBlog.json\")} />\r\n                </Route>\r\n                <Route path=\"/blogs/dock-forms\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/DockFormsBlog.json\")} />\r\n                </Route>\r\n                <Route path=\"/blogs/hotel-managment\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/HotelManagmentBlog.json\")} />\r\n                </Route>\r\n\r\n                <Route path=\"/todo-app\">\r\n                    <TodoApp />\r\n                </Route>\r\n\r\n                <Route path=\"/pastebin\">\r\n                    <PasteBinApp />\r\n                </Route>\r\n\r\n                <Route path=\"/bst-visualization\">\r\n                    <BSTApp />\r\n                </Route>\r\n                <Route path=\"/max-heap-visualization\">\r\n                    <MaxHeapApp />\r\n                </Route>\r\n                <Route path=\"/min-heap-visualization\">\r\n                    <MinHeapApp />\r\n                </Route>\r\n\r\n\r\n                <Route path=\"/\">\r\n                    {\r\n                        localStorage.getItem('redirectTo') ? <Redirect to={localStorage.getItem('redirectTo')} /> \r\n                        : null\r\n                        \r\n                    }\r\n                    <Home />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RoutePaths\r\n","import './App.css';\nimport RoutePaths  from './RoutePaths'\n\nfunction App() {\n  return (\n    <div>\n      <RoutePaths />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { SnackbarProvider } from 'notistack';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider\n      maxSnack={2}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={3000}\n    >\n      <App />\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}