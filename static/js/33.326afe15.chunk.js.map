{"version":3,"sources":["TodoApp/components/TodoForm.js","TodoApp/components/Todo.js","TodoApp/components/Doing.js","TodoApp/components/DeleteButton.js","TodoApp/components/Done.js","TodoApp/components/TodoList.js","TodoApp/TodoApp.js"],"names":["TextArea","Input","TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","availableClasses","colorNames","class","classSelector","setClassSelector","selectColor","setSelectColor","useEffect","window","innerWidth","current","focus","handleChange","e","target","colorSelector","className","onClick","classesUsed","split","indexOf","length","nextClassColor","onContextMenu","preventDefault","handleRightClick","slice","map","index","style","display","paddingRight","paddingLeft","onSubmit","id","Math","floor","random","text","list","width","autoSize","type","placeholder","onChange","ref","padding","borderRadius","border","outline","background","color","flex","minWidth","Todo","todos","updateTodo","sendToDoing","sendToDone","handleDrag","handlePositionChange","allowDrop","setShowDelete","setEdit","todo","draggable","onDragStart","JSON","stringify","onDragEnd","onDrop","onDragOver","onDoubleClick","data-aos","data-aos-delay","data-aos-anchor-placement","title","placement","arrow","Doing","sendToDo","DeleteButton","deleteAllDone","removeTodo","showDelete","filter","parse","dataTransfer","getData","Done","TodoList","localStorage","getItem","setTodos","enqueueSnackbar","useSnackbar","setItem","newTodos","todoType","todoList","doing","push","todoId","newValue","test","prev","item","removeArr","a","updatedTodos","variant","setData","onTodo","changeTodo","i","handleToDoDrop","newTodo","handleDoingDrop","handleDoneDrop","TodoApp","document","scrollTo","currentMeta","getElementsByTagName","content","to"],"mappings":"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","file":"static/js/33.326afe15.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n    const inputRef = useRef(null);\r\n    const availableClasses = [\r\n        \"todo-row blue\",\r\n        \"todo-row orange\",\r\n        \"todo-row pink\",\r\n        \"todo-row purple\",\r\n        \"todo-row red\",\r\n        \"todo-row green\",\r\n    ];\r\n    const colorNames = [\"Blue\", \"Orange\", \"Pink\", \"Purple\", \"Red\", \"Green\"];\r\n    const [classSelector, setClassSelector] = useState(props.edit.class + \" color-select-div\");\r\n    const [selectColor, setSelectColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth >= 1350) {\r\n            inputRef.current.focus();\r\n        }\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (props.edit.id) {\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: props.edit.list,\r\n                class: classSelector.slice(0, -17),\r\n            });\r\n        } else {\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: \"todo\",\r\n                class: availableClasses[Math.floor(Math.random() * availableClasses.length)],\r\n            });\r\n        }\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    const handleRightClick = e => {\r\n        e.preventDefault();\r\n        setSelectColor(true);\r\n    };\r\n\r\n    const nextClassColor = e => {\r\n        const classesUsed = e.target.className.split(\" \");\r\n        setClassSelector(\r\n            availableClasses[(availableClasses.indexOf(classesUsed[0] + \" \" + classesUsed[1]) + 1) % availableClasses.length] +\r\n                \" color-select-div\"\r\n        );\r\n    };\r\n\r\n    var colorSelector = (\r\n        <div className={classSelector} onClick={e => nextClassColor(e)} onContextMenu={e => handleRightClick(e)}>\r\n            {colorNames[availableClasses.indexOf(classSelector.slice(0, -17))]}\r\n        </div>\r\n    );\r\n\r\n    if (selectColor) {\r\n        colorSelector = availableClasses.map((className, index) => {\r\n            return (\r\n                <div\r\n                    className={className + \" color-select-div\"}\r\n                    key={colorNames[index]}\r\n                    onClick={e => {\r\n                        setClassSelector(e.target.className);\r\n                        setSelectColor(false);\r\n                    }}\r\n                >\r\n                    {colorNames[index]}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className=\"todo-form\"\r\n            style={{ display: \"flex\", paddingRight: \"10px\", paddingLeft: \"10px\" }}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {props.edit.id ? (\r\n                <div\r\n                    style={{ width: \"100%\" }}\r\n                    onClick={() => {\r\n                        setSelectColor(false);\r\n                    }}\r\n                >\r\n                    <div className=\"edit-form\" style={{ display: \"inline-flex\", width: \"100%\" }}>\r\n                        <TextArea\r\n                            autoSize\r\n                            type=\"text\"\r\n                            placeholder=\"Update your todo\"\r\n                            value={input}\r\n                            // className=\"todo-input\"\r\n                            onChange={handleChange}\r\n                            ref={inputRef}\r\n                            style={{\r\n                                padding: \"14px 32px 14px 16px\",\r\n                                borderRadius: \"4px 0 0 4px\",\r\n                                border: \"2px solid #5d0cff\",\r\n                                outline: \"none\",\r\n                                // width: \"80%\",\r\n                                background: \"transparent\",\r\n                                color: \"#fff\",\r\n                            }}\r\n                        />\r\n                        <button className=\"todo-button edit\" style={{ flex: \"1\", minWidth: \"52px\", padding: \"0px\" }}>\r\n                            Update\r\n                        </button>\r\n                    </div>\r\n                    {colorSelector}\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <TextArea\r\n                        autoSize\r\n                        type=\"text\"\r\n                        placeholder=\"Add a todo\"\r\n                        value={input}\r\n                        style={{\r\n                            padding: \"14px 32px 14px 16px\",\r\n                            borderRadius: \"4px 0 0 4px\",\r\n                            border: \"2px solid #5d0cff\",\r\n                            outline: \"none\",\r\n                            // width: \"80%\",\r\n                            background: \"transparent\",\r\n                            color: \"#fff\",\r\n                        }}\r\n                        // className=\"todo-input\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className=\"todo-button\" style={{ flex: \"1\", minWidth: \"66px\", padding: \"0px\" }}>\r\n                        Add Todo\r\n                    </button>\r\n                </>\r\n            )}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { Tooltip } from 'antd'\r\n\r\nfunction Todo({todos, updateTodo, sendToDoing, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"todo\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"todo\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"todo\" ? (\r\n        <div className={todo.class}\r\n            key={todo.id} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n            data-aos=\"zoom-in\"\r\n            data-aos-delay={index * 100 + 100}\r\n            data-aos-anchor-placement=\"top-bottom\"\r\n            // data-aos-duration=\"1000\"\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Doing' placement='top' arrow>\r\n                    <span>\r\n                        <FiSend\r\n                            onClick={() => sendToDoing(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from 'antd'\r\n\r\nfunction Doing({todos, updateTodo, sendToDo, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"doing\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"doing\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"doing\" ? (\r\n        <div className={todo.class} \r\n            key={todo.id} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n            data-aos=\"zoom-in\"\r\n            data-aos-delay={index * 100 + 100}\r\n            data-aos-anchor-placement=\"top-bottom\"\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Doing\r\n","import React from 'react'\r\n\r\nfunction DeleteButton({todos, deleteAllDone, allowDrop, removeTodo, showDelete}) {\r\n    \r\n    return [...todos].filter(todo => todo.list === \"done\").length > 1 || showDelete ? (\r\n        <button \r\n            className=\"delete-all-button\" \r\n            onClick={deleteAllDone} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDrop={(e) => removeTodo(JSON.parse(e.dataTransfer.getData(\"todo\")).id)} \r\n        >\r\n            Delete Done\r\n        </button>\r\n    ) : null\r\n}\r\n\r\nexport default DeleteButton\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from 'antd'\r\n\r\nfunction Done({todos, removeTodo, updateTodo, sendToDo, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"done\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"done\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"done\"  ? (\r\n        <div className={todo.class} \r\n            key={todo.id} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n            data-aos=\"zoom-in\"\r\n            data-aos-delay={index * 100 + 100}\r\n            data-aos-anchor-placement=\"top-bottom\"\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Delete To-do' placement='top' arrow>\r\n                    <span>\r\n                        <RiDeleteBin5Line \r\n                            onClick={() => removeTodo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Done\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Doing from \"./Doing\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport Done from \"./Done\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState(localStorage.getItem(\"savedTodos\") ? JSON.parse(localStorage.getItem(\"savedTodos\")) : []);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        // Saving data to local storage every time Todos are updated\r\n        localStorage.setItem(\"savedTodos\", JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    // Preventing previously created todos from getting destroyed after update\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"update_version\") !== \"v1\") {\r\n            const availableClasses = [\r\n                \"todo-row blue\",\r\n                \"todo-row orange\",\r\n                \"todo-row pink\",\r\n                \"todo-row purple\",\r\n                \"todo-row red\",\r\n                \"todo-row green\",\r\n            ];\r\n            var newTodos = [];\r\n            var todoType = \"\";\r\n\r\n            todos.map(todo => {\r\n                if (todo.todoList) {\r\n                    todoType = \"todo\";\r\n                } else if (todo.doing) {\r\n                    todoType = \"doing\";\r\n                } else {\r\n                    todoType = \"done\";\r\n                }\r\n\r\n                var updateTodo = {\r\n                    id: todo.id,\r\n                    text: todo.text,\r\n                    list: todoType,\r\n                    class: availableClasses[Math.floor(Math.random() * availableClasses.length)],\r\n                };\r\n                newTodos.push(updateTodo);\r\n            });\r\n\r\n            setTodos(newTodos);\r\n            localStorage.setItem(\"update_version\", \"v1\");\r\n        }\r\n    }, []);\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(a => {\r\n            return setTodos(removeArr);\r\n        });\r\n    };\r\n\r\n    const sendToDo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.list = \"todo\";\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const sendToDoing = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.list = \"doing\";\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const sendToDone = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.list = \"done\";\r\n            }\r\n            return todo;\r\n        });\r\n        enqueueSnackbar(\"Yayyy !! You completed a todo. \", {\r\n            variant: \"success\",\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const deleteAllDone = () => {\r\n        let updatedTodos = [...todos].filter(todo => todo.list !== \"done\");\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const handleDrag = (e, todo) => {\r\n        e.dataTransfer.setData(\"todo\", todo);\r\n        setShowDelete(true);\r\n    };\r\n\r\n    const handleToDoDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDo(id);\r\n        setShowDelete(false);\r\n    };\r\n\r\n    const handleDoingDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDoing(id);\r\n        setShowDelete(false);\r\n    };\r\n\r\n    const handleDoneDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDone(id);\r\n        setShowDelete(false);\r\n    };\r\n\r\n    const handlePositionChange = (e, onTodo) => {\r\n        var changeTodo = JSON.parse(e.dataTransfer.getData(\"todo\"));\r\n        changeTodo.list = onTodo.list;\r\n\r\n        const newTodos = [];\r\n        var i;\r\n        for (i = 0; i < todos.length; i++) {\r\n            if (todos[i].id !== changeTodo.id) {\r\n                newTodos.push(todos[i]);\r\n            }\r\n            if (todos[i].id === onTodo.id) {\r\n                newTodos.push(changeTodo);\r\n            }\r\n        }\r\n        setShowDelete(false);\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(prev => {\r\n            return setTodos(newTodos);\r\n        });\r\n    };\r\n\r\n    const allowDrop = e => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"todo-app\" onDrop={e => handleToDoDrop(e)} onDragOver={e => allowDrop(e)}>\r\n                <h2 className=\"todo-name\">To Do's</h2>\r\n                <TodoForm onSubmit={addTodo} edit={{ class: \"todo-row blue\" }} newTodo={true} />\r\n                <Todo\r\n                    todos={todos.filter(todo => todo.list === \"todo\")}\r\n                    updateTodo={updateTodo}\r\n                    sendToDoing={sendToDoing}\r\n                    sendToDone={sendToDone}\r\n                    handleDrag={handleDrag}\r\n                    handlePositionChange={handlePositionChange}\r\n                    allowDrop={allowDrop}\r\n                    setShowDelete={setShowDelete}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"todo-app\" onDrop={e => handleDoingDrop(e)} onDragOver={e => allowDrop(e)}>\r\n                <h2 className=\"todo-name\">Doing ....</h2>\r\n                <Doing\r\n                    todos={todos.filter(todo => todo.list === \"doing\")}\r\n                    updateTodo={updateTodo}\r\n                    sendToDo={sendToDo}\r\n                    sendToDone={sendToDone}\r\n                    handleDrag={handleDrag}\r\n                    handlePositionChange={handlePositionChange}\r\n                    allowDrop={allowDrop}\r\n                    setShowDelete={setShowDelete}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"todo-app extra-padding\" onDrop={e => handleDoneDrop(e)} onDragOver={e => allowDrop(e)}>\r\n                <h2 className=\"todo-name\">Done !!!</h2>\r\n                <Done\r\n                    todos={todos.filter(todo => todo.list === \"done\")}\r\n                    removeTodo={removeTodo}\r\n                    updateTodo={updateTodo}\r\n                    sendToDo={sendToDo}\r\n                    handleDrag={handleDrag}\r\n                    handlePositionChange={handlePositionChange}\r\n                    allowDrop={allowDrop}\r\n                    setShowDelete={setShowDelete}\r\n                />\r\n                <DeleteButton\r\n                    todos={todos}\r\n                    deleteAllDone={deleteAllDone}\r\n                    allowDrop={allowDrop}\r\n                    removeTodo={removeTodo}\r\n                    showDelete={showDelete}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import TodoList from \"./components/TodoList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function TodoApp() {\r\n    document.title = \"To-Do App | Shlok Zanwar\";\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const currentMeta = document.getElementsByTagName('meta')['viewport'].content;\r\n\r\n        document.getElementsByTagName('meta')['viewport'].content='width=device-width, initial-scale=1';\r\n\r\n        return () => {\r\n            document.getElementsByTagName('meta')['viewport'].content = currentMeta;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-outer-todo-div\" data-aos=\"fade-up\">\r\n                <div>\r\n                    <Link className=\"todo-heading\" to=\"/blogs/todo-app\">\r\n                        To-Do App\r\n                    </Link>\r\n                </div>\r\n                <TodoList />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"sourceRoot":""}