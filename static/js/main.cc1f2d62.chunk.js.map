{"version":3,"sources":["Test sync","BlogTemplates/BlogButton.js","BlogTemplates/BlogImage.js","BlogTemplates/BlogList.js","BlogTemplates/BlogPara.js","BlogTemplates/BlogSubheading.js","BlogTemplates/BlogTitle.js","BlogTemplates/BlogTemplate.js","HomeComponents/HomeCards.js","HomeComponents/Home.js","MyNavbar.js","PasteBinComponents/PasteBinHome.js","firebase.js","PasteBinComponents/PasteBinApp.js","TodoAppComponents/components/TodoForm.js","TodoAppComponents/components/Todo.js","TodoAppComponents/components/Doing.js","TodoAppComponents/components/DeleteButton.js","TodoAppComponents/components/Done.js","TodoAppComponents/components/TodoList.js","TodoAppComponents/TodoApp.js","TreeComponents/Components/Grid.js","TreeComponents/Components/Tree.js","TreeComponents/Components/BST.js","TreeComponents/BSTApp.js","TreeComponents/Components/MaxHeap.js","TreeComponents/MaxHeapApp.js","TreeComponents/Components/MinHeap.js","TreeComponents/MinHeapApp.js","CanvasComponents/CanvasHome.js","CanvasComponents/CanvasApp.js","TicTacToe/TicTacToe.js","MineSweeper/MineSweeper.js","Test/TestPdf.js","RoutePaths.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","BlogButton","details","className","onClick","url","click","window","location","href","text","BlogImage","src","alt","BlogList","makeList","list","map","index","BlogPara","BlogSubheading","BlogTitle","BlogTemplate","histoy","useHistory","useState","blogData","setBlogData","enqueueSnackbar","useSnackbar","action","key","Fragment","reload","style","background","border","cursor","color","paddingRight","textDecoration","fontWeight","useEffect","scrollTo","document","title","axios","get","pathname","then","res","JSON","parse","data","blogDetail","catch","err","console","log","request","status","variant","anchorOrigin","vertical","horizontal","push","getRandomNumber","Math","floor","random","blog","type","length","size","TabPane","Tabs","HomeCards","require","filter","card","appCards","blogCards","cardType","breakpoints","default","1600","1250","940","700","linkType","component","fullLink","target","to","centered","defaultActiveKey","tabBarStyle","paddingBottom","borderBottom","tab","fontSize","display","alignItems","marginLeft","breakpointCols","columnClassName","description","date","Home","MyNavbar","Navbar","collapseOnSelect","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","placement","arrow","interactive","PasteBinHome","setUrl","localStorage","getItem","recentBins","setRecentBins","inputRef","useRef","history","loadRecentPasteBins","pasteBin","removeArr","bin","setItem","stringify","removeRecent","innerWidth","current","focus","Helmet","textAlign","onSubmit","preventDefault","path","substring","split","marginBottom","placeholder","value","onChange","ref","maxWidth","r","toString","generateNewURL","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","this","db","firestore","doc","set","abc","PasteBinApp","result","setResult","setData","savePath","setSavePath","saved","setSaved","closeSnackbar","dontShowSnackbar","toLowerCase","firebase","getPasteBinData","recentPasteBins","pop","saveRecent","autoHideDuration","undefined","addPasteBinData","position","spellCheck","command","toCopy","temp","createElement","tempMsg","createTextNode","appendChild","body","select","execCommand","removeChild","copyToClipboard","TextArea","Input","TodoForm","props","edit","input","setInput","availableClasses","colorNames","class","classSelector","setClassSelector","selectColor","setSelectColor","handleChange","colorSelector","classesUsed","indexOf","nextClassColor","onContextMenu","handleRightClick","slice","paddingLeft","width","autoSize","padding","borderRadius","outline","flex","minWidth","Todo","todos","updateTodo","sendToDoing","sendToDone","handleDrag","handlePositionChange","allowDrop","setShowDelete","setEdit","todo","draggable","onDragStart","onDragEnd","onDrop","onDragOver","onDoubleClick","Doing","sendToDo","DeleteButton","deleteAllDone","removeTodo","showDelete","dataTransfer","getData","Done","TodoList","setTodos","newTodos","todoType","todoList","doing","todoId","newValue","test","prev","item","a","updatedTodos","onTodo","changeTodo","i","handleToDoDrop","newTodo","handleDoingDrop","handleDoneDrop","App","Grid","grid","loading","setLoading","search","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","makeOneRow","row","rowIndex","cell","cellIndex","leftChild","rightChild","pow","from","zIndex","borderColor","borderWidth","Node","left","right","BinarySearchTree","start","root","traversal","newNode","insertRecursive","node","minValue","deleteRecursive","findInorderSuccessor","bstArray","valueArray","treeHeight","j","rowNode","rowValue","lDepth","rDepth","BST","setGrid","setSearch","showAnimation","setShowAnimation","breathFT","getRootNode","binaryTree","setBinaryTree","makeVisualTree","k","myList","height","noOfZerosInMiddle","tempList","wait","delay","args","Promise","iForAnimation","createAnimation","compare","checkIfPresent","animation","insertNode","handleSubmit","operation","deleteTree","insertToTree","parseInt","deleteNode","searchInTree","checked","BSTApp","MaxHeap","log2","myIndex","newTree","newHead","deleteFromTree","myParent","marginRight","MaxHeapApp","MinHeap","MinHeapApp","CanvasHome","loadRecentCanvas","canvas","CanvasApp","brushSize","setBrushSize","hex","setColor","canvasData","setCanvasData","getCanvasData","recentCanvas","addCanvasData","onChangeComplete","undo","clear","getSaveData","hideGrid","immediateLoading","saveData","backgroundColor","brushColor","brushRadius","lazyRadius","canvasWidth","canvasHeight","Option","Select","TicTacToe","gameType","setGameType","turn","setTurn","noOfTurns","setNoOfTurns","Array","fill","board","setBoard","gameStatus","setGameStatus","line","setLine","isExploding","setIsExploding","checkWinner","winner","linePosition","b","c","getComputerMove","move","nums","num","includes","countNums","block","handleCellClick","newBoard","visible","footer","bodyStyle","closable","defaultValue","disabled","dataPlaceholder","fromAnchor","toAnchor","MineSweeper","rows","cols","mines","gameSettings","setGameSettings","gameOver","gameWon","gameState","setGameState","cellsOpen","setCellsOpen","flags","setFlags","getNeighborMinesCount","col","isMine","neighborMines","createBoard","isRevealed","isFlagged","minesAdded","createMines","createGame","handleLeftClick","alert","handelGameOver","condionallyRenderCell","margin","colIndex","TestPdf","controls","fileType","filePath","RoutePaths","removeItem","forUseEffect","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","defaults","baseURL","ReactDOM","render","StrictMode","maxSnack","getElementById","URL","process","origin","fetch","headers","response","contentType","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cc1f2d62.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 627;","import React from 'react'\r\n\r\nconst BlogButton = ({details}) => {\r\n\r\n    const handleClick = (url) => {\r\n        window.location.href = url;\r\n    }\r\n\r\n    return (\r\n        <button className=\"redirect-button\" onClick={() => handleClick(details.click)} >\r\n            {details.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BlogButton\r\n","import React from 'react'\r\n\r\nconst BlogImage = ({details}) => {\r\n    return (\r\n        <div className=\"blog-image-div\" >\r\n            <img src={details.src} className=\"blog-image\" alt={details.alt} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogImage\r\n","import React from 'react'\r\n\r\nconst BlogList = ({details}) => {\r\n\r\n    const makeList = details.list.map(index =>\r\n            <li key={index}>\r\n                {index}\r\n            </li>\r\n    )\r\n\r\n    return (\r\n        <div className=\"blog-list\" >\r\n            <ul className=\"blog-list-ul\">\r\n                {makeList}\r\n            </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogList\r\n","import React from 'react'\r\n\r\nconst BlogPara = ({details}) => {\r\n    return (\r\n        <div className=\"blog-para\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogPara\r\n","import React from 'react'\r\n\r\nconst BlogSubheading = ({details}) => {\r\n    return (\r\n        <div className=\"blog-subheading\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogSubheading\r\n","import React from 'react'\r\n\r\nconst BlogTitle = ({details}) => {\r\n    return (\r\n        <div className=\"blog-title\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTitle\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport BlogButton from './BlogButton'\r\nimport BlogImage from './BlogImage'\r\nimport BlogList from './BlogList'\r\nimport BlogPara from './BlogPara'\r\nimport BlogSubheading from './BlogSubheading'\r\nimport BlogTitle from './BlogTitle'\r\nimport { SemipolarLoading } from 'react-loadingg';\r\nimport { useHistory } from 'react-router'\r\nimport { useSnackbar } from 'notistack'\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nfunction BlogTemplate() {\r\n    const histoy = useHistory(); //\r\n    const [blogData, setBlogData] = useState([]);\r\n    const { enqueueSnackbar } = useSnackbar()\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { window.location.reload() }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"rgb(251, 255, 3)\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Reload ?\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        // console.log(blogurl)\r\n        document.title = \"Blogs | Shlok Zanwar\"\r\n        axios.get(window.location.pathname)\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                setBlogData(JSON.parse(res.data.blogDetail))\r\n                document.title = \"Blogs | \" + JSON.parse(res.data.blogDetail)[0].text + \" | Shlok Zanwar\";\r\n                window.scrollTo(0, 0);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                if(err.request.status === 0){\r\n                    enqueueSnackbar(\"Something went wrong !!\", {\r\n                        variant: 'error',\r\n                        anchorOrigin:{\r\n                            vertical:\"top\",\r\n                            horizontal:\"center\"\r\n                        },\r\n                        action\r\n                    })\r\n                }\r\n                else{\r\n                    enqueueSnackbar(\"Blog not found\", {\r\n                        variant: 'error',\r\n                        anchorOrigin:{\r\n                            vertical:\"top\",\r\n                            horizontal:\"center\"\r\n                        }\r\n                    })\r\n                    histoy.push(\"/\")\r\n                }\r\n            })\r\n\r\n        \r\n    }, [])\r\n    \r\n    // if(blogData.length > 0){\r\n    //     document.title = \"Blogs | \" + blogData[0].text + \" | Shlok Zanwar\";\r\n    // }\r\n\r\n    const getRandomNumber = () =>{\r\n        return Math.floor(Math.random() * 100000);\r\n    }\r\n\r\n    const blog = blogData.map(index => {\r\n        if(index.type === \"title\"){\r\n            return <BlogTitle details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"paragraph\"){\r\n            return <BlogPara details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"subheading\"){\r\n            return <BlogSubheading details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"button\"){\r\n            return <BlogButton details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"list\"){\r\n            return <BlogList details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"image\"){\r\n            return <BlogImage details={index} key={getRandomNumber()} />\r\n        }\r\n        else{\r\n            return <div className=\"blog-para\"> ------ Could not render ------ </div>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"main-blog-div\">\r\n            <Offline>\r\n                <div className=\"blog-subheading\">\r\n                    You're offline.\r\n                </div>\r\n                <div className=\"blog-para\">\r\n                    Please check your internet connection and try again.\r\n                </div>\r\n            </Offline>\r\n            <Online>\r\n                {blogData.length === 0 ? <SemipolarLoading   size=\"large\" color=\"rgb(251, 255, 3)\" /> : blog}\r\n            </Online>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTemplate\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { Tabs } from 'antd';\r\nimport { MdApps } from \"react-icons/md\";\r\nimport { FaMicroblog } from \"react-icons/fa\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction HomeCards() {\r\n    const [appCards, ] = useState(require(\"./CardDetails.json\").filter(card => card.type === \"App\"));\r\n    const [blogCards, ] = useState(require(\"./CardDetails.json\").filter(card => card.type === \"Blog\"));\r\n\r\n    \r\n\r\n    const cardType = type => {\r\n        if (type === \"Blog\") {\r\n            return <div className=\"card-type green-border\">{type}</div>;\r\n        } else if (type === \"App\") {\r\n            return <div className=\"card-type blue-border\">{type}</div>;\r\n        } else if (type === \"Model\") {\r\n            return <div className=\"card-type yellow-border\">{type}</div>;\r\n        }\r\n    };\r\n\r\n    const breakpoints = {\r\n        default: 5,\r\n        1600: 4,\r\n        1250: 3,\r\n        940: 2,\r\n        700: 1,\r\n    };\r\n\r\n    const linkType = (card, component) => {\r\n        if (card.fullLink) {\r\n            return (\r\n                <a href={card.url} target=\"_blank\" key={card.url}>\r\n                    {component}\r\n                </a>\r\n            );\r\n        } else {\r\n            return (\r\n                <Link to={card.url} key={card.id}>\r\n                    {component}\r\n                </Link>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Tabs centered defaultActiveKey=\"1\" tabBarStyle={{background: 'var(--black)', paddingBottom: '10px', borderBottom: \"2.5px solid rgba(17, 122, 255, 1)\"}}>\r\n            <TabPane \r\n                tab={\r\n                    <span style={{fontSize: 22, display: 'flex', alignItems: 'center'}}>\r\n                        <MdApps />\r\n                        <span style={{ marginLeft: '5px' }}>\r\n                            Apps\r\n                        </span>\r\n                    </span>\r\n                }\r\n                key=\"1\"\r\n            >\r\n                <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                    {appCards.map(card => (\r\n                        <>\r\n                            {linkType(\r\n                                card,\r\n                                <div key={card.id} className=\"cards-box\">\r\n                                    <div className=\"cards-info\">\r\n                                        <div className=\"cards-title\">{card.title}</div>\r\n                                        <div className=\"cards-description\">{card.description}</div>\r\n                                    </div>\r\n                                    <div className=\"card-bottom-bar\">\r\n                                        <div className=\"card-date \">{card.date}</div>\r\n                                        {cardType(card.type)}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    ))}\r\n                </Masonry>\r\n            </TabPane>\r\n            <TabPane \r\n                tab={\r\n                    <span style={{fontSize: 22, display: 'flex', alignItems: 'center'}}>\r\n                        <FaMicroblog/>\r\n                        <span style={{ marginLeft: '5px' }}>\r\n                            Blogs\r\n                        </span>\r\n                    </span>\r\n                }\r\n                key=\"2\"\r\n            >\r\n                <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                    {blogCards.map(card => (\r\n                        <>\r\n                            {linkType(\r\n                                card,\r\n                                <div key={card.id} className=\"cards-box\">\r\n                                    <div className=\"cards-info\">\r\n                                        <div className=\"cards-title\">{card.title}</div>\r\n                                        <div className=\"cards-description\">{card.description}</div>\r\n                                    </div>\r\n                                    <div className=\"card-bottom-bar\">\r\n                                        <div className=\"card-date \">{card.date}</div>\r\n                                        {cardType(card.type)}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    ))}\r\n                </Masonry>\r\n            </TabPane>\r\n        </Tabs>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomeCards;\r\n","import React, { useEffect } from 'react'\r\nimport HomeCards from './HomeCards'\r\n\r\nfunction Home() {\r\n    \r\n    document.title = \"Home | Shlok Zanwar\"\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <HomeCards />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport {Navbar, Nav} from \"react-bootstrap\"\r\nimport { SiHackerrank, SiGithub, SiInstagram, SiLinkedin, SiGmail, SiCodechef, SiTwitter } from \"react-icons/si\";\r\nimport { Tooltip } from 'antd'\r\n\r\n\r\nfunction MyNavbar() {\r\n\r\n    return (\r\n        <>\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-color\" variant=\"dark\" sticky=\"top\">\r\n\r\n            <Navbar.Brand href=\"https://shlok-zanwar.github.io/\" >\r\n                Shlok Zanwar\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/todo-app\">\r\n                            To-Do App\r\n                    </Nav.Link>\r\n                    <Nav.Link href=\"https://github.com/Shlok-Zanwar\" >\r\n                            About\r\n                    </Nav.Link>\r\n                </Nav>\r\n                \r\n                <Nav>\r\n                    <Tooltip title='Github' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://github.com/Shlok-Zanwar\" className=\"navbar-icons\">\r\n                                <SiGithub />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Linkedin' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.linkedin.com/in/shlok-zanwar-0124961ba/\" className=\"navbar-icons\">\r\n                                <SiLinkedin />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='shlokzanwar14@gmail.com' placement='bottom' arrow interactive>\r\n                        <Nav.Link href=\"mailto:shlokzanwar14@gmail.com\" className=\"navbar-icons\">\r\n                                <SiGmail />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Hackerrank' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.hackerrank.com/shlok_21910163\" className=\"navbar-icons\">\r\n                                <SiHackerrank />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='CodeChef' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.codechef.com/users/shlok_zanwar\" className=\"navbar-icons\">\r\n                                <SiCodechef />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Instagram' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.instagram.com/shlok__zanwar/\" className=\"navbar-icons\">\r\n                                <SiInstagram />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Twitter' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.twitter.com/zanwar_shlok/\" className=\"navbar-icons\">\r\n                                <SiTwitter />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    \r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyNavbar","import React, { useEffect, useRef, useState } from 'react'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { Tooltip } from 'antd'\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction PasteBinHome() {\r\n    const [url, setUrl] = useState('');\r\n    const [recentBins, setRecentBins] =  useState(localStorage.getItem('recentPasteBins') ? JSON.parse(localStorage.getItem('recentPasteBins')) : []);\r\n    const inputRef = useRef(null);\r\n    let history = useHistory();\r\n    document.title = \"Paste Bin | Shlok Zanwar\"\r\n\r\n    const generateNewURL = () => {\r\n        let r = Math.random().toString(36).substring(4);\r\n        history.push(\"/pastebin/\" + r);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        var path = url;\r\n        if(url[0] === \"/\"){\r\n            path = path.substring(1, path.length);\r\n        }\r\n        path = path.split(\"/\");\r\n        if(path.length === 1){\r\n            if(path[0] !== \"\"){\r\n                history.push(\"/pastebin/\" + path[0]);\r\n            }\r\n        }\r\n        else{\r\n            if(path[0] === \"pastebin\"){\r\n                if(path[1] !== \"\"){\r\n                    history.push(\"/pastebin/\" + path[1]);\r\n                }\r\n            }\r\n        }\r\n        // console.log(path);\r\n\r\n    }\r\n\r\n    \r\n    const removeRecent = (pasteBin) => {\r\n        const removeArr = [...recentBins].filter(bin => bin !== pasteBin);\r\n        setRecentBins(removeArr);\r\n        localStorage.setItem('recentPasteBins', JSON.stringify(removeArr))\r\n    }\r\n\r\n    \r\n    const gotoRecent = (pasteBin) => {\r\n        history.push(\"/pastebin/\" + pasteBin);\r\n    }\r\n\r\n\r\n    const loadRecentPasteBins = recentBins.map(index => {\r\n            return (\r\n                <div style={{display:\"inline-table\"}} >\r\n                    <div className=\"recent-pastebin\">\r\n                        <div style={{cursor:\"pointer\"}} onClick={() => gotoRecent(index)}>\r\n                            {\"/\" + index}\r\n                        </div>\r\n                        <div className=\"icons\">\r\n                            <Tooltip title='Delete' placement='bottom' arrow>\r\n                                <span>\r\n                                    <RiDeleteBin5Line \r\n                                        onClick={() => removeRecent(index)}\r\n                                    />\r\n                                </span>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    })\r\n    \r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n    return ( \r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"main-blog-di\">\r\n                <div className=\"blog-title\">Paste Bin</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>A pastebin for sharing data without any authentication.</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Go to some URl like \"/pastebin/any\"</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Write anything</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Save</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Share the URL with anyone</div>\r\n                <br />\r\n                <form className=\"todo-form\" onSubmit={handleSubmit} style={{marginBottom:\"6px\"}}>\r\n                    <div className=\"edit-form\" >\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Type any url\" \r\n                                value={url}\r\n                                className=\"todo-input\"\r\n                                onChange={e => setUrl(e.target.value)}\r\n                                ref={inputRef}\r\n                                style={{maxWidth:\"275px\"}}\r\n                            />\r\n                            <button className=\"todo-button edit\">Go</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}} >OR</div> \r\n                <div className=\"redirect-button\" style={{maxWidth:\"230px\"}} onClick={() => generateNewURL()} >Generate random URL</div>\r\n                {recentBins.length > 0 ?\r\n                    <>\r\n                        <br />\r\n                        <div className=\"blog-para\" style={{textAlign:\"center\"}}>Recent Paste Bins</div>\r\n                        <div className=\"recent-pastebin-outer\" style={{maxWidth:\"500px\"}}>\r\n                            {loadRecentPasteBins}\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasteBinHome\r\n","import app from \"firebase/app\";\r\n// import 'firebase/database'\r\n// import 'firebase/auth'\r\nimport 'firebase/firebase-firestore'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA3_2rnMA0F-RcBYObb9v5aKhQdB5rMYdU\",\r\n    authDomain: \"shlok-website.firebaseapp.com\",\r\n    projectId: \"shlok-website\",\r\n    storageBucket: \"shlok-website.appspot.com\",\r\n    messagingSenderId: \"993579237604\", \r\n    appId: \"1:993579237604:web:9f13901ca731fed1f82cf1\",\r\n    measurementId: \"G-CNF32VVWZE\"\r\n};\r\n\r\n\r\nclass Firebase {\r\n\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n        // this.auth = app.auth();\r\n        this.db = app.firestore();\r\n    }\r\n    \r\n \r\n    // login(email, password) {\r\n\t// \treturn this.auth.signInWithEmailAndPassword(email, password)\r\n\t// }\r\n\r\n\r\n    // async register(name, email, password) {\r\n\t// \tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n\t// \treturn this.auth.currentUser.updateProfile({\r\n\t// \t\tdisplayName: name\r\n\t// \t})\r\n\t// }\r\n\r\n\r\n    addPasteBinData (url, data) {\r\n        this.db.doc(`pastebin/${url}`).set({\r\n            data\r\n        })\r\n    }\r\n\r\n\r\n    async getPasteBinData (url) {\r\n        const abc = await this.db.doc(`pastebin/${url}`).get();\r\n        return abc.get('data');\r\n    }\r\n\r\n    addCanvasData (url, data) {\r\n        this.db.doc(`canvas/${url}`).set({\r\n            data\r\n        })\r\n    }\r\n\r\n\r\n    async getCanvasData (url) {\r\n        const abc = await this.db.doc(`canvas/${url}`).get();\r\n        return abc.get('data');\r\n    }\r\n\r\n}\r\n\r\nexport default new Firebase()","import React, { useEffect, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport firebase from '../firebase';\r\nimport { useSnackbar } from 'notistack';\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Tooltip } from 'antd';\r\n\r\n\r\nfunction PasteBinApp() {\r\n    const [result, setResult] = useState('');\r\n    const [data, setData] = useState('Write and Share');\r\n    const [savePath, setSavePath] = useState(\"\")\r\n    const [saved, setSaved] = useState(true);\r\n\r\n\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = command;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Paste Bin | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowPastebinSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n\r\n\r\n    const saveRecent = (path) => {\r\n        var recentPasteBins = localStorage.getItem('recentPasteBins') ? JSON.parse(localStorage.getItem('recentPasteBins')) : [];\r\n        recentPasteBins = [...recentPasteBins].filter(pasteBin => pasteBin !== path);\r\n        recentPasteBins = [path, ...recentPasteBins];\r\n        if(recentPasteBins.length > 6){\r\n            recentPasteBins.pop();\r\n        }\r\n        localStorage.setItem('recentPasteBins', JSON.stringify(recentPasteBins));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(window.location.pathname);\r\n        var path = window.location.pathname;\r\n        // console.log(path[path.length - 1]);\r\n\r\n        if(path[path.length - 1] === \"/\"){\r\n            path = path.substring(0, path.length - 1);\r\n            window.location.pathname = path;\r\n        }\r\n        path = path.substring(1, path.length);\r\n        // console.log(path)\r\n        path = path.split(\"/\");\r\n        // console.log(path)\r\n\r\n        if(path.length > 2){\r\n            window.location.pathname = \"/\" + path[0] + \"/\" + path[1];\r\n        }\r\n\r\n        if(path[0].toLowerCase() === \"pastebin\"){\r\n            setSavePath(path[1].toLowerCase());\r\n            firebase.getPasteBinData(path[1].toLowerCase()).then(setResult, saveRecent(path[1]));\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowPastebinSnack\")){\r\n            enqueueSnackbar(\"Paste bin is publically visible.\\nPlease do not share private information.\", {\r\n                variant: 'info',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(result === undefined){\r\n            firebase.addPasteBinData(savePath, \"Write and Share\");\r\n            setData(\"Write and Share\");\r\n        }\r\n        else{\r\n          setData(result);\r\n        }\r\n    }, [result])\r\n\r\n\r\n    const saveData = () => {\r\n        if(!saved){\r\n            firebase.addPasteBinData(savePath, data);\r\n            setSaved(true);\r\n            console.log(\"Saving\");\r\n        }\r\n        enqueueSnackbar(\"Details saved successfully\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{display:\"flex\", position:\"relative\"}}>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <textarea \r\n                className=\"pastebin-text\" \r\n                spellCheck=\"false\" \r\n                value={data} \r\n                onChange={e => {setData(e.target.value); setSaved(false)}}\r\n            >\r\n            </textarea>\r\n            <div className=\"pastebin-controls\"> \r\n                    <button className=\"save-share-pastebin\" onClick={() => saveData()}>\r\n                        &nbsp;&nbsp; Save &nbsp;&nbsp; \r\n                    </button>\r\n                    <Tooltip title='Share' placement='top'>\r\n                        <button className=\"save-share-pastebin\" onClick={() => {copyToClipboard(window.location.href)}}>\r\n                            <FaShare />\r\n                        </button>\r\n                    </Tooltip>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasteBinApp\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n    const availableClasses = [\r\n        \"todo-row blue\", \r\n        \"todo-row orange\", \r\n        \"todo-row pink\", \r\n        \"todo-row purple\",\r\n        \"todo-row red\",\r\n        \"todo-row green\"\r\n    ];\r\n    const colorNames = [\r\n        \"Blue\",\r\n        \"Orange\",\r\n        \"Pink\",\r\n        \"Purple\",\r\n        \"Red\",\r\n        \"Green\"\r\n    ]\r\n    const [classSelector, setClassSelector] = useState(props.edit.class + \" color-select-div\");\r\n    const [selectColor, setSelectColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(props.edit.id){\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: props.edit.list,\r\n                class: classSelector.slice(0, -17)\r\n            });\r\n        }\r\n        else{\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: \"todo\",\r\n                class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n            });\r\n        }\r\n\r\n        setInput('');\r\n\r\n    };\r\n\r\n    \r\n    const handleRightClick = (e) => {\r\n        e.preventDefault();\r\n        setSelectColor(true);\r\n    }\r\n\r\n\r\n    const nextClassColor = e => {\r\n        const classesUsed = e.target.className.split(\" \");\r\n        setClassSelector(availableClasses[(availableClasses.indexOf((classesUsed[0] + \" \" + classesUsed[1])) + 1) % availableClasses.length ] + \" color-select-div\");\r\n    }\r\n\r\n\r\n    var colorSelector = <div className={classSelector} onClick={(e) => nextClassColor(e)} onContextMenu={(e) => handleRightClick(e)}>\r\n                            {colorNames[availableClasses.indexOf(classSelector.slice(0, -17))]}\r\n                        </div>\r\n\r\n\r\n    if(selectColor){\r\n        colorSelector = availableClasses.map((className, index) => {\r\n            return(\r\n                <div className={className + \" color-select-div\"} key={colorNames[index]} onClick={(e) => {setClassSelector(e.target.className); setSelectColor(false)}} >\r\n                    {colorNames[index]}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <form className=\"todo-form\" style={{display: 'flex', paddingRight: '10px', paddingLeft: '10px'}} onSubmit={handleSubmit}>\r\n        {props.edit.id ? (\r\n            <div style={{width: '100%'}} onClick={() => {setSelectColor(false);}}>\r\n                <div className=\"edit-form\" style={{display: 'inline-flex', width: '100%'}}>\r\n                    <TextArea \r\n                        autoSize\r\n                        type=\"text\" \r\n                        placeholder=\"Update your todo\" \r\n                        value={input}\r\n                        // className=\"todo-input\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                        style={{\r\n                            padding: \"14px 32px 14px 16px\",\r\n                            borderRadius: \"4px 0 0 4px\",\r\n                            border: \"2px solid #5d0cff\",\r\n                            outline: \"none\",\r\n                            // width: \"80%\",\r\n                            background: \"transparent\",\r\n                            color: \"#fff\"\r\n                        }}\r\n                    />\r\n                    <button className=\"todo-button edit\" style={{flex: '1', minWidth: '52px', padding: '0px'}}>Update</button>\r\n                </div>\r\n                {colorSelector}\r\n            </div>\r\n            ) : (\r\n            <>\r\n                <TextArea \r\n                    autoSize\r\n                    type=\"text\" \r\n                    placeholder=\"Add a todo\" \r\n                    value={input}\r\n                    style={{\r\n                        padding: \"14px 32px 14px 16px\",\r\n                        borderRadius: \"4px 0 0 4px\",\r\n                        border: \"2px solid #5d0cff\",\r\n                        outline: \"none\",\r\n                        // width: \"80%\",\r\n                        background: \"transparent\",\r\n                        color: \"#fff\"\r\n                    }}\r\n                    // className=\"todo-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\" style={{flex: '1', minWidth: '66px', padding: '0px'}}>Add Todo</button>\r\n            </>\r\n        )}\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { Tooltip } from 'antd'\r\n\r\nfunction Todo({todos, updateTodo, sendToDoing, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"todo\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"todo\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"todo\" ? (\r\n        <div className={todo.class}\r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Doing' placement='top' arrow>\r\n                    <span>\r\n                        <FiSend\r\n                            onClick={() => sendToDoing(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from 'antd'\r\n\r\nfunction Doing({todos, updateTodo, sendToDo, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"doing\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"doing\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"doing\" ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Doing\r\n","import React from 'react'\r\n\r\nfunction DeleteButton({todos, deleteAllDone, allowDrop, removeTodo, showDelete}) {\r\n    \r\n    return [...todos].filter(todo => todo.list === \"done\").length > 1 || showDelete ? (\r\n        <button \r\n            className=\"delete-all-button\" \r\n            onClick={deleteAllDone} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDrop={(e) => removeTodo(JSON.parse(e.dataTransfer.getData(\"todo\")).id)} \r\n        >\r\n            Delete Done\r\n        </button>\r\n    ) : null\r\n}\r\n\r\nexport default DeleteButton\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from 'antd'\r\n\r\nfunction Done({todos, removeTodo, updateTodo, sendToDo, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"done\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"done\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"done\"  ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Delete To-do' placement='top' arrow>\r\n                    <span>\r\n                        <RiDeleteBin5Line \r\n                            onClick={() => removeTodo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Done\r\n","import React, {useState, useEffect} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\nimport Doing from './Doing'\r\nimport DeleteButton from './DeleteButton';\r\nimport Done from './Done';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState( localStorage.getItem('savedTodos') ? JSON.parse(localStorage.getItem('savedTodos')) : []);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        // Saving data to local storage every time Todos are updated\r\n        localStorage.setItem('savedTodos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    // Preventing previously created todos from getting destroyed after update\r\n    useEffect(() => {\r\n        if(localStorage.getItem('update_version') !== \"v1\"){\r\n\r\n            const availableClasses = [\r\n                \"todo-row blue\", \r\n                \"todo-row orange\", \r\n                \"todo-row pink\", \r\n                \"todo-row purple\",\r\n                \"todo-row red\",\r\n                \"todo-row green\"\r\n            ];\r\n            var newTodos = [];\r\n            var todoType = \"\";\r\n\r\n            todos.map(todo => {\r\n                if(todo.todoList){\r\n                    todoType = \"todo\";\r\n                }\r\n                else if (todo.doing){\r\n                    todoType = \"doing\";\r\n                }\r\n                else{\r\n                    todoType = \"done\";\r\n                }\r\n\r\n                var updateTodo = {\r\n                    id: todo.id,\r\n                    text: todo.text,\r\n                    list: todoType,\r\n                    class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n                }\r\n                newTodos.push(updateTodo);\r\n            });\r\n            \r\n            setTodos(newTodos);\r\n            localStorage.setItem(\"update_version\", \"v1\"); \r\n        }\r\n    }, [])\r\n\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos)\r\n    }\r\n    \r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(a => {\r\n            return setTodos(removeArr);\r\n        })\r\n    }\r\n\r\n\r\n    const sendToDo = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"todo\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const sendToDoing = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"doing\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n    \r\n\r\n    const sendToDone = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"done\";\r\n            }\r\n            return todo;\r\n        })\r\n        enqueueSnackbar(\"Yayyy !! You completed a todo. \", {\r\n            variant: 'success',\r\n        });\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const deleteAllDone = () => {\r\n        let updatedTodos = [...todos].filter(todo => todo.list !== \"done\")\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const handleDrag = (e, todo) => {\r\n        e.dataTransfer.setData(\"todo\", todo);\r\n        setShowDelete(true);\r\n    }\r\n\r\n\r\n    const handleToDoDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDo(id);\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoingDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDoing((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoneDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDone((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handlePositionChange = (e, onTodo) => {\r\n        var changeTodo = JSON.parse(e.dataTransfer.getData(\"todo\"));\r\n        changeTodo.list = onTodo.list;\r\n\r\n        const newTodos = [];\r\n        var i;\r\n        for(i = 0; i < todos.length; i ++){\r\n            \r\n            if(todos[i].id !== changeTodo.id){\r\n                newTodos.push(todos[i]);\r\n            }\r\n            if(todos[i].id === onTodo.id){\r\n                newTodos.push(changeTodo);\r\n            }\r\n        }\r\n        setShowDelete(false);\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(prev => {\r\n            return setTodos(newTodos);\r\n        });\r\n    }\r\n    \r\n\r\n    const allowDrop = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"todo-app\" onDrop={(e) => handleToDoDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2 className=\"todo-name\">To Do's</h2>\r\n            <TodoForm onSubmit={addTodo} edit={{class: \"todo-row blue\"}} newTodo={true}/>\r\n            <Todo \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDoing={sendToDoing} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app\" onDrop={(e) => handleDoingDrop(e)} onDragOver={(e) => allowDrop(e)} >\r\n            <h2 className=\"todo-name\">Doing ....</h2>\r\n            <Doing \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag}\r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app extra-padding\" onDrop={(e) => handleDoneDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2 className=\"todo-name\">Done !!!</h2>\r\n            <Done \r\n                todos={todos} \r\n                removeTodo={removeTodo} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n            <DeleteButton \r\n                todos={todos}\r\n                deleteAllDone={deleteAllDone} \r\n                allowDrop={allowDrop} \r\n                removeTodo={removeTodo} \r\n                showDelete={showDelete} \r\n            />\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoList\r\n","import './TodoApp.css';\r\nimport TodoList from './components/TodoList';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\n\r\nfunction App() {\r\n\r\n  document.title = \"To-Do App | Shlok Zanwar\"\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n    <div className=\"main-outer-todo-div\">\r\n      <Link to=\"blogs/todo-app\">\r\n        <h1 className=\"todo-heading\">To-Do App</h1>\r\n      </Link>\r\n      <TodoList />\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect } from 'react'\r\nimport LineTo from 'react-lineto'\r\n\r\nfunction Grid({grid, loading, setLoading, search}) {\r\n\r\n\r\n    function debounce(fn, ms) {\r\n        let timer\r\n        return _ => {\r\n            clearTimeout(timer)\r\n            timer = setTimeout(_ => {\r\n                timer = null\r\n                fn.apply(this, arguments)\r\n            }, ms)\r\n        };\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const debouncedHandleResize = debounce(function handleResize() {\r\n            setLoading(true);\r\n        }, 500)\r\n        \r\n        window.addEventListener('resize', debouncedHandleResize)\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setLoading(false), 100);\r\n    }, [loading])\r\n\r\n\r\n    const makeOneRow = (row, rowIndex) => \r\n        row.map((cell, cellIndex) => {\r\n            if(cell !== 0){\r\n                if(cell === search){\r\n\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" searched\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString()} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            else{\r\n                return(\r\n                    <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" transparent\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                        {}\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n\r\n    const makeRows = () => {\r\n        return grid.map((row, rowIndex) => (\r\n            <div className=\"rows\" key={\"r\" + rowIndex.toString()}>\r\n                {makeOneRow(row, rowIndex)}\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    \r\n    var zIndex = -1;\r\n    var makeArrows = () => {\r\n        return(\r\n            grid.map((row, rowIndex) => {\r\n                return(\r\n                    row.map((cell, cellIndex) => {\r\n                        if(cell !== 0 && rowIndex < grid.length - 1){\r\n                            // console.log(\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString() + \"   \" + \"r\"+(rowIndex+1).toString() + \"c\" + cellIndex.toString() );\r\n                            \r\n                            var leftChild = cellIndex;\r\n                            var rightChild = cellIndex + Math.pow(2, grid.length-rowIndex-1);\r\n\r\n                            // console.log(rowIndex, \" \", leftChild, \" \" , rightChild);\r\n\r\n                            if(grid[rowIndex+1][leftChild] !== 0 && grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <>\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()} \r\n                                    />\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()} \r\n                                    />\r\n                                    </>\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][leftChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}\r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"   \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"tree-outer-div\">\r\n            <div className=\"tree-main-div\">\r\n                {makeRows()}\r\n                {loading ? null : makeArrows() }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Grid;\r\n","class Node { \r\n    constructor(data) \r\n    { \r\n        this.data = data; \r\n        this.left = null; \r\n        this.right = null; \r\n    } \r\n} \r\n\r\n\r\nexport class BinarySearchTree { \r\n    constructor(start){ \r\n        this.root = start; \r\n        this.traversal = [];\r\n    } \r\n\r\n\r\n    deleteTree() {\r\n        this.root = null;\r\n    }\r\n\r\n\r\n    getRootNode() { \r\n        return this.root; \r\n    } \r\n\r\n\r\n    insertNode(data){ \r\n        var newNode = new Node(data); \r\n        this.traversal = [];\r\n\r\n        if(this.root === null || this.root === undefined) {\r\n            this.root = newNode; \r\n        }\r\n        else{\r\n            this.insertRecursive(this.root, newNode); \r\n        }\r\n\r\n        this.traversal.push(data);\r\n        return this.traversal;\r\n    } \r\n    \r\n\r\n    insertRecursive(node, newNode) { \r\n        this.traversal.push(node.data);\r\n\r\n        if(newNode.data < node.data) {\r\n            if(node.left === null || node.left === undefined){ \r\n                node.left = newNode; \r\n            }\r\n            else{\r\n                this.insertRecursive(node.left, newNode);  \r\n            }\r\n        } \r\n        else{ \r\n            if(node.right === null || node.left === undefined) {\r\n                node.right = newNode;\r\n            } \r\n            else{\r\n                this.insertRecursive(node.right,newNode); \r\n            }\r\n        } \r\n    } \r\n\r\n\r\n    findInorderSuccessor(node){\r\n        let minValue = node.data;\r\n        while(node.left != null){\r\n            minValue = node.left.data;\r\n            node = node.left;\r\n        }\r\n        return minValue;\r\n    }\r\n\r\n\r\n    deleteNode(data){\r\n        this.root = this.deleteRecursive(this.root, data);\r\n    }\r\n\r\n\r\n    deleteRecursive(node, data){\r\n        if (node === null){\r\n            return node;\r\n        }\r\n        if(data < node.data){\r\n            node.left = this.deleteRecursive(node.left, data);\r\n        }\r\n        else if(data > node.data){\r\n            node.right = this.deleteRecursive(node.right, data);\r\n        }\r\n        else{\r\n            if(node.left === null){\r\n                return node.right;\r\n            }\r\n            else if(node.right === null){\r\n                return node.left;\r\n            }\r\n            else{\r\n                node.data = this.findInorderSuccessor(node.right);\r\n                node.right = this.deleteRecursive(node.right, node.data);\r\n            }\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    breathFT(node){\r\n        if(node === null || node === undefined){\r\n            return [];\r\n        }\r\n\r\n        var bstArray = [[node]];\r\n        var valueArray = [[node.data]];\r\n\r\n        const treeHeight = this.treeHeight(node);\r\n        let i = 0, j = 0;\r\n\r\n        for(i = 0; i < treeHeight; i++){\r\n            var rowNode = [];\r\n            var rowValue = [];\r\n            for(j = 0; j < Math.pow(2, i); j++ ){\r\n                if(bstArray[i][j] === null || bstArray[i][j] === undefined ){\r\n                    rowNode.push(null);\r\n                    rowNode.push(null);\r\n\r\n                    rowValue.push(0);\r\n                    rowValue.push(0);\r\n                }\r\n                else{\r\n                    rowNode.push(bstArray[i][j].left);\r\n                    rowNode.push(bstArray[i][j].right);\r\n\r\n                    rowValue.push(bstArray[i][j].left ? bstArray[i][j].left.data : 0);\r\n                    rowValue.push(bstArray[i][j].right ? bstArray[i][j].right.data : 0);\r\n                }\r\n            }\r\n            bstArray.push(rowNode);\r\n            valueArray.push(rowValue);\r\n        }\r\n        // console.log(\"BFT : \", bstArray);\r\n        // console.log(\"Value BFT : \", valueArray);\r\n        return valueArray;\r\n    }\r\n\r\n\r\n    treeHeight(node){\r\n        if (node == null)\r\n            return -1;\r\n        else\r\n        {\r\n            var lDepth = this.treeHeight(node.left);\r\n            var rDepth = this.treeHeight(node.right);\r\n    \r\n            if (lDepth > rDepth)\r\n                return (lDepth + 1);\r\n            else\r\n                return (rDepth + 1);\r\n        }\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from 'antd';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\nimport {BinarySearchTree} from './Tree'\r\n\r\nfunction BST() {\r\n    \r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n    const [showAnimation, setShowAnimation] = useState(true);\r\n    const [BST, setBST] =  useState(new BinarySearchTree( localStorage.getItem(\"BSTRoot\") ? JSON.parse(localStorage.getItem(\"BSTRoot\")) : null ));\r\n    const [binaryTree, setBinaryTree] = useState(BST.breathFT(BST.getRootNode()));\r\n\r\n    useEffect(() => {\r\n        makeVisualTree();\r\n        localStorage.setItem('BSTRoot', JSON.stringify(BST.getRootNode()));\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n        const height = BST.treeHeight(BST.getRootNode()) + 1;\r\n\r\n        for(i = 0; i < height; i ++){\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n    const wait = (delay, ...args) => new Promise(resolve => setTimeout(resolve, delay, ...args));\r\n    var iForAnimation = 0; \r\n    const createAnimation = async(compare) => {\r\n        await wait(700);\r\n        setSearch(compare[iForAnimation]);\r\n        iForAnimation ++;                   \r\n        if (iForAnimation < compare.length) {          \r\n            await createAnimation(compare);             \r\n        }\r\n    }\r\n\r\n\r\n    const checkIfPresent = (data) => {\r\n        var i, j;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    async function insertToTree(data){\r\n        if(checkIfPresent(data)){\r\n            enqueueSnackbar(data +\" is already present !!\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        let animation = BST.insertNode(data);\r\n        animation.push(search);\r\n        setBinaryTree(BST.breathFT(BST.getRootNode()));\r\n        enqueueSnackbar(data + \" added to binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n        if(showAnimation){\r\n            await createAnimation(animation);\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    const deleteFromTree = (data) => {\r\n        if(!checkIfPresent(data)){\r\n            enqueueSnackbar(data + \" not found !!\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n    \r\n        BST.deleteNode(data);\r\n        setBinaryTree(BST.breathFT(BST.getRootNode()));\r\n\r\n        enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        var i, j;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    setSearch(data);\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            BST.deleteTree();\r\n            setBinaryTree(BST.breathFT(BST.getRootNode()));\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        if(operation === \"Insert\"){\r\n            insertToTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Delete\"){\r\n            deleteFromTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            searchInTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Delete\" >Delete</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"80px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                \r\n                <span><Tooltip title='Show Animation' placement='bottom' arrow>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" checked={showAnimation} onChange={() => {setShowAnimation(!showAnimation)}} />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </Tooltip></span>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Binary-Tree-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                \r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BST\r\n","import './TreeCss.css';\r\nimport BST from './Components/BST';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\n\r\nfunction BSTApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"BST Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <BST />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BSTApp;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from 'antd';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\n\r\nfunction MaxHeap() {\r\n    const [binaryTree, setBinaryTree] = useState(localStorage.getItem(\"maxHeap\") ? JSON.parse(localStorage.getItem(\"maxHeap\")) : [])\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n\r\n    useEffect(() => {\r\n        makeVisualTree();\r\n        localStorage.setItem(\"maxHeap\", JSON.stringify(binaryTree));\r\n    }, [binaryTree])\r\n\r\n\r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n        const height = parseInt(Math.log2(binaryTree.length)) + 1;\r\n\r\n        for(i = 0; i < height; i ++){\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n\r\n            for(j = 0; j < Math.pow(2, i); j ++){\r\n                var myIndex = Math.pow(2, i) - 1 + j;\r\n                if(myIndex < binaryTree.length){\r\n                    tempList.push(binaryTree[myIndex]);\r\n                }\r\n                else{\r\n                    tempList.push(0)\r\n                }\r\n\r\n                if(j !== Math.pow(2, i) - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        var i = newTree.length, myParent, temp;\r\n        newTree.push(data);\r\n\r\n        while(i !== 0){\r\n            myParent = parseInt((i-1)/2);\r\n            if(newTree[i] > newTree[myParent]){\r\n                temp = newTree[i];\r\n                newTree[i] = newTree[myParent];\r\n                newTree[myParent] = temp;\r\n                i = myParent;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(data + \" added to binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        if(binaryTree.length === 0){\r\n            enqueueSnackbar(\"Nothing to delete\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        var newTree = [...binaryTree];\r\n        var newHead = newTree.pop(), i = 0, temp;\r\n\r\n        if(newTree.length > 0){\r\n            newTree[i] = newHead;\r\n            var leftChild, rightChild\r\n\r\n            while(true){\r\n                leftChild = i*2 + 1;\r\n                rightChild = i*2 + 2;\r\n\r\n                if(leftChild >= newTree.length){\r\n                    break;\r\n                }\r\n                else if(rightChild >= newTree.length){\r\n                    if(newTree[leftChild] > newTree[i]){\r\n                        temp = newTree[i];\r\n                        newTree[i] = newTree[leftChild];\r\n                        newTree[leftChild] = temp;\r\n                    }\r\n                    break;\r\n                }\r\n                else{\r\n                    if(newTree[leftChild] >= newTree[rightChild]){\r\n                        if(newTree[leftChild] > newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[leftChild];\r\n                            newTree[leftChild] = temp;\r\n\r\n                            i = leftChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                    else{\r\n                        if(newTree[rightChild] > newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[rightChild];\r\n                            newTree[rightChild] = temp;\r\n\r\n                            i = rightChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(\"Deleted root node successfully.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        var i;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            if(binaryTree[i] === data){\r\n                setSearch(data);\r\n                enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                    variant: 'success',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            setBinaryTree([]);\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            searchInTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Max Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n                \r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                \r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MaxHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MaxHeap from './Components/MaxHeap';\r\n\r\n\r\nfunction MaxHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Max Heap Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MaxHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MaxHeapApp;","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from 'antd';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\n\r\nfunction MinHeap() {\r\n    const [binaryTree, setBinaryTree] = useState(localStorage.getItem(\"minHeap\") ? JSON.parse(localStorage.getItem(\"minHeap\")) : [])\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n\r\n    useEffect(() => {\r\n        makeVisualTree();\r\n        localStorage.setItem(\"minHeap\", JSON.stringify(binaryTree));\r\n    }, [binaryTree])\r\n\r\n\r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n        const height = parseInt(Math.log2(binaryTree.length)) + 1;\r\n\r\n        for(i = 0; i < height; i ++){\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n\r\n            for(j = 0; j < Math.pow(2, i); j ++){\r\n                var myIndex = Math.pow(2, i) - 1 + j;\r\n                if(myIndex < binaryTree.length){\r\n                    tempList.push(binaryTree[myIndex]);\r\n                }\r\n                else{\r\n                    tempList.push(0)\r\n                }\r\n\r\n                if(j !== Math.pow(2, i) - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        var i = newTree.length, myParent, temp;\r\n        newTree.push(data);\r\n\r\n        while(i !== 0){\r\n            myParent = parseInt((i-1)/2);\r\n            if(newTree[i] < newTree[myParent]){\r\n                temp = newTree[i];\r\n                newTree[i] = newTree[myParent];\r\n                newTree[myParent] = temp;\r\n                i = myParent;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(data + \" added to binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        if(binaryTree.length === 0){\r\n            enqueueSnackbar(\"Nothing to delete\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        var newTree = [...binaryTree];\r\n        var newHead = newTree.pop(), i = 0, temp;\r\n\r\n        if(newTree.length > 0){\r\n            newTree[i] = newHead;\r\n            var leftChild, rightChild\r\n\r\n            while(true){\r\n                leftChild = i*2 + 1;\r\n                rightChild = i*2 + 2;\r\n\r\n                if(leftChild >= newTree.length){\r\n                    break;\r\n                }\r\n                else if(rightChild >= newTree.length){\r\n                    if(newTree[leftChild] < newTree[i]){\r\n                        temp = newTree[i];\r\n                        newTree[i] = newTree[leftChild];\r\n                        newTree[leftChild] = temp;\r\n                    }\r\n                    break;\r\n                }\r\n                else{\r\n                    if(newTree[leftChild] <= newTree[rightChild]){\r\n                        if(newTree[leftChild] < newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[leftChild];\r\n                            newTree[leftChild] = temp;\r\n\r\n                            i = leftChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                    else{\r\n                        if(newTree[rightChild] < newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[rightChild];\r\n                            newTree[rightChild] = temp;\r\n\r\n                            i = rightChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(\"Deleted root node successfully.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        var i;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            if(binaryTree[i] === data){\r\n                setSearch(data);\r\n                enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                    variant: 'success',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            setBinaryTree([]);\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            searchInTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Min Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                \r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MinHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MinHeap from './Components/MinHeap';\r\n\r\n\r\nfunction MinHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Min Heap Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MinHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MinHeapApp;","import React, { useEffect, useRef, useState } from 'react'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { Tooltip } from 'antd'\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction CanvasHome() {\r\n    const [url, setUrl] = useState('');\r\n    const [recentBins, setRecentBins] =  useState(localStorage.getItem('recentCanvas') ? JSON.parse(localStorage.getItem('recentCanvas')) : []);\r\n    const inputRef = useRef(null);\r\n    let history = useHistory();\r\n    document.title = \"Canvas | Shlok Zanwar\";\r\n\r\n    const generateNewURL = () => {\r\n        let r = Math.random().toString(36).substring(4);\r\n        history.push(\"/canvas/\" + r);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        var path = url;\r\n        if(url[0] === \"/\"){\r\n            path = path.substring(1, path.length);\r\n        }\r\n        path = path.split(\"/\");\r\n        if(path.length === 1){\r\n            if(path[0] !== \"\"){\r\n                history.push(\"/canvas/\" + path[0]);\r\n            }\r\n        }\r\n        else{\r\n            if(path[0] === \"canvas\"){\r\n                if(path[1] !== \"\"){\r\n                    history.push(\"/canvas/\" + path[1]);\r\n                }\r\n            }\r\n        }\r\n        // console.log(path);\r\n\r\n    }\r\n\r\n    \r\n    const removeRecent = (canvas) => {\r\n        const removeArr = [...recentBins].filter(bin => bin !== canvas);\r\n        setRecentBins(removeArr);\r\n        localStorage.setItem('recentCanvas', JSON.stringify(removeArr))\r\n    }\r\n\r\n    \r\n    const gotoRecent = (canvas) => {\r\n        history.push(\"/canvas/\" + canvas);\r\n    }\r\n\r\n\r\n    const loadRecentCanvas = recentBins.map(index => {\r\n            return (\r\n                <div style={{display:\"inline-table\"}} >\r\n                    <div className=\"recent-pastebin\">\r\n                        <div style={{cursor:\"pointer\"}} onClick={() => gotoRecent(index)}>\r\n                            {\"/\" + index}\r\n                        </div>\r\n                        <div className=\"icons\">\r\n                            <Tooltip title='Delete' placement='bottom' arrow>\r\n                                <span>\r\n                                    <RiDeleteBin5Line \r\n                                        onClick={() => removeRecent(index)}\r\n                                    />\r\n                                </span>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    })\r\n    \r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n    return ( \r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"main-blog-di\">\r\n                <div className=\"blog-title\">Draw Bin</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>A canvas for sharing drawings without any authentication.</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Go to some URl like \"/canvas/any\"</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Draw anything</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Save</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Share the URL with anyone</div>\r\n                <br />\r\n                <form className=\"todo-form\" onSubmit={handleSubmit} style={{marginBottom:\"6px\"}}>\r\n                    <div className=\"edit-form\" >\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Type any url\" \r\n                                value={url}\r\n                                className=\"todo-input\"\r\n                                onChange={e => setUrl(e.target.value)}\r\n                                ref={inputRef}\r\n                                style={{maxWidth:\"275px\"}}\r\n                            />\r\n                            <button className=\"todo-button edit\">Go</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}} >OR</div> \r\n                <div className=\"redirect-button\" style={{maxWidth:\"230px\"}} onClick={() => generateNewURL()} >Generate random URL</div>\r\n                {recentBins.length > 0 ?\r\n                    <>\r\n                        <br />\r\n                        <div className=\"blog-para\" style={{textAlign:\"center\"}}>Recent Paste Bins</div>\r\n                        <div className=\"recent-pastebin-outer\" style={{maxWidth:\"500px\"}}>\r\n                            {loadRecentCanvas}\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasHome\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport firebase from '../firebase';\r\nimport { useSnackbar } from 'notistack';\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport CanvasDraw from 'react-canvas-draw';\r\nimport { SliderPicker } from 'react-color';\r\nimport { Tooltip } from 'antd';\r\n\r\nfunction CanvasApp() {\r\n    const canvas = useRef();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Canvas | Shlok Zanwar\";\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowCanvasSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowCanvasSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    const [brushSize, setBrushSize] = useState(3);\r\n    const [savePath, setSavePath] = useState(\"\");\r\n    const [result, setResult] = useState('');\r\n    const [color, setColor] = useState({hex: \"#52BF23\"});\r\n    const [canvasData, setCanvasData] = useState(null);\r\n\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = command;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    \r\n    const handleColorChange = color => setColor(color);\r\n\r\n\r\n    const handleBrushSize = e => {\r\n        if(e.target.value > 10){\r\n            setBrushSize(10);\r\n        }\r\n        else{\r\n            setBrushSize(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n    const saveRecent = (path) => {\r\n        var recentCanvas = localStorage.getItem('recentCanvas') ? JSON.parse(localStorage.getItem('recentCanvas')) : [];\r\n        recentCanvas = [...recentCanvas].filter(canvas => canvas !== path);\r\n        recentCanvas = [path, ...recentCanvas];\r\n        if(recentCanvas.length > 6){\r\n            recentCanvas.pop();\r\n        }\r\n        localStorage.setItem('recentCanvas', JSON.stringify(recentCanvas));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(window.location.pathname);\r\n        var path = window.location.pathname;\r\n        // console.log(path[path.length - 1]);\r\n\r\n        if(path[path.length - 1] === \"/\"){\r\n            path = path.substring(0, path.length - 1);\r\n            window.location.pathname = path;\r\n        }\r\n        path = path.substring(1, path.length);\r\n        // console.log(path)\r\n        path = path.split(\"/\");\r\n        // console.log(path)\r\n\r\n        if(path.length > 2){\r\n            window.location.pathname = \"/\" + path[0] + \"/\" + path[1];\r\n        }\r\n\r\n        if(path[0].toLowerCase() === \"canvas\"){\r\n            setSavePath(path[1].toLowerCase());\r\n            firebase.getCanvasData(path[1].toLowerCase()).then(setResult, saveRecent(path[1]));\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(result === undefined){\r\n            firebase.addCanvasData(savePath, {\"lines\":[],\"width\":\"100%\",\"height\":\"100%\"});\r\n            setCanvasData({\"lines\":[],\"width\":\"100%\",\"height\":\"100%\"});\r\n        }\r\n        else{\r\n          setCanvasData(result);\r\n        //   console.log(result);\r\n        }\r\n    }, [result])\r\n\r\n\r\n    const saveCanvas = e => {\r\n        firebase.addCanvasData(savePath, canvas.current.getSaveData());\r\n        console.log(\"Saving\");\r\n        enqueueSnackbar(\"Details saved successfully\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"canvas-controls\">\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Size\" \r\n                    value={brushSize}\r\n                    className=\"canvas-brush-size\"\r\n                    onChange={handleBrushSize}\r\n                />\r\n\r\n                <div style={{width:\"210px\", paddingRight:\"10px\"}}>\r\n                    <SliderPicker color={color} onChangeComplete={handleColorChange} />\r\n                </div>\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={() => {canvas.current.undo()}}\r\n                >\r\n                    &nbsp;&nbsp; Undo &nbsp;&nbsp; \r\n                </button>\r\n\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={() => {canvas.current.clear()}}\r\n                >\r\n                    &nbsp;&nbsp; Clear &nbsp;&nbsp; \r\n                </button>\r\n\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={saveCanvas}\r\n                >\r\n                    &nbsp;&nbsp; Save &nbsp;&nbsp; \r\n                </button>\r\n                <Tooltip title='Share' placement='bottom' arrow>\r\n                    <button className=\"save-share-pastebin\" onClick={() => {copyToClipboard(window.location.href)}} >\r\n                        <FaShare />\r\n                    </button>\r\n                </Tooltip>\r\n            </div >\r\n            <div className=\"canvas-div\">\r\n            {canvasData ? \r\n                <CanvasDraw\r\n                    ref={canvas}\r\n                    hideGrid\r\n                    immediateLoading={true}\r\n                    saveData={canvasData}\r\n                    backgroundColor={\"transparent\"}\r\n                    brushColor={color.hex}\r\n                    brushRadius={brushSize}\r\n                    lazyRadius={0}\r\n                    canvasWidth={\"1500px\"}\r\n                    canvasHeight={\"790px\"}\r\n                /> : <div style={{color: \"rgb(82, 192, 31)\"}}>Loading ...</div> \r\n            }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasApp\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./tictactoeCss.css\"\r\nimport LineTo from 'react-lineto'\r\nimport { Select, Modal, Button } from 'antd';\r\nimport SemipolarLoading from 'react-loadingg/lib/SemipolarLoading';\r\nimport ConfettiExplosion from '@reonomy/react-confetti-explosion';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function TicTacToe() {\r\n    const [gameType, setGameType] = useState(\"PVC\") // PVP or PVC\r\n    const [turn, setTurn] = useState(\"P1\");\r\n    const [noOfTurns, setNoOfTurns] = useState(0);\r\n    const [board, setBoard] = useState( Array(9).fill({data: null}) );\r\n\r\n    const [gameStatus, setGameStatus] = useState(null);\r\n    const [line, setLine] = useState([[\"block_0\", \"block_2\"], [\"left center\", \"right center\"]]);\r\n\r\n    const [isExploding, setIsExploding] = useState(false);\r\n    document.title = \"Tic Tac Toe | Shlok Zanwar\";\r\n\r\n    const checkWinner = () => {\r\n        if(noOfTurns === 9) {\r\n            setGameStatus(\"Draw\");\r\n        }\r\n        setLine([[\"\", \"\"], [\"\", \"\"]]);\r\n\r\n        let winner = null;\r\n        let line = [\r\n            [0,1,2],\r\n            [3,4,5],\r\n            [6,7,8],\r\n            [0,3,6],\r\n            [1,4,7],\r\n            [2,5,8],\r\n            [0,4,8],\r\n            [2,4,6]\r\n        ];\r\n        let linePosition = [\r\n            [\"left\", \"right\"],\r\n            [\"left\", \"right\"],\r\n            [\"left\", \"right\"],\r\n            [\"top\", \"bottom\"],\r\n            [\"top\", \"bottom\"],\r\n            [\"top\", \"bottom\"],\r\n            [\"top left\", \"bottom right\"],\r\n            [\"top right\", \"bottom left\"],\r\n        ];\r\n        for(let i = 0; i < line.length; i++){\r\n            let [a,b,c] = line[i];\r\n            if(board[a].data === board[b].data && board[b].data === board[c].data && board[a].data !== null){\r\n                winner = board[a].data;\r\n                setLine([ [`block_${a}`, `block_${c}`], linePosition[i] ]);\r\n                break;\r\n            }\r\n        }\r\n        if(winner !== null){\r\n            setGameStatus((turn === \"P2\" ? \"Player 1\" : (gameType === \"PVC\" ? \"Computer\" : \"Player 2\")) + \" won!\");\r\n            setIsExploding(true);\r\n        }   \r\n    }\r\n\r\n    useEffect(() => {\r\n        checkWinner();\r\n    }, [board]);\r\n\r\n    useEffect(() => {\r\n        if(gameType === \"PVC\" && turn === \"P2\" && noOfTurns < 9){\r\n            setTimeout(() => {\r\n                getComputerMove();\r\n            }, 200);\r\n        }\r\n        checkWinner();\r\n    }, [turn]);\r\n\r\n    const getComputerMove = () => {\r\n        let move = null;\r\n\r\n        let line = [\r\n            [0,1,2],\r\n            [3,4,5],\r\n            [6,7,8],\r\n            [0,3,6],\r\n            [1,4,7],\r\n            [2,5,8],\r\n            [0,4,8],\r\n            [2,4,6]\r\n        ]\r\n      \r\n        // Check if computer can win\r\n        for(let i = 0; i < line.length; i++){\r\n            let [a,b,c] = line[i];\r\n            if(board[a].data === null && board[b].data === \"O\" && board[c].data === \"O\"){\r\n                move = a;\r\n                break;\r\n            }\r\n            if(board[a].data === \"O\" && board[b].data === null && board[c].data === \"O\"){\r\n                move = b;\r\n                break;\r\n            }\r\n            if(board[a].data === \"O\" && board[b].data === \"O\" && board[c].data === null){\r\n                move = c;\r\n                break;\r\n            }\r\n        }\r\n      \r\n        // Check if player can win\r\n        if(move === null){\r\n            for(let i = 0; i < line.length; i++){\r\n                let [a,b,c] = line[i];\r\n                if(board[a].data === null && board[b].data === \"X\" && board[c].data === \"X\"){\r\n                    move = a;\r\n                    break;\r\n                }\r\n                if(board[a].data === \"X\" && board[b].data === null && board[c].data === \"X\"){\r\n                    move = b;\r\n                    break;\r\n                }\r\n                if(board[a].data === \"X\" && board[b].data === \"X\" && board[c].data === null){\r\n                    move = c;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(move === null){\r\n            if(board[4].data === null){\r\n                move = 4;\r\n            }\r\n        }\r\n\r\n        if (move === null)  {\r\n            for(let i = 0; i < line.length; i++){\r\n                if(move !== null) {\r\n                    break;\r\n                }\r\n                let nums = [...line[i]];\r\n                for(let j = i + 1; j < line.length; j++){\r\n                    if(move !== null) {\r\n                        break;\r\n                    }\r\n                    for(var num of line[j]){\r\n                        if(!nums.includes(num)){\r\n                            nums.push(num);\r\n                        }\r\n                    }\r\n                    var countNums = 0;\r\n                    for(var num of nums){\r\n                        if(board[num].data === null || board[num].data === \"X\"){\r\n                            countNums += 1;\r\n                        }\r\n                    }\r\n                    \r\n                    if(countNums === 5){\r\n                        for(var num of nums){\r\n                            if(board[num].data === null){\r\n                                move = num;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n      \r\n        // Check if center is empty\r\n        \r\n        \r\n        // Check if sides are empty\r\n        if(move === null){\r\n            if(board[1].data === null){\r\n                move = 1;\r\n            }\r\n            if(board[3].data === null){\r\n                move = 3;\r\n            }\r\n            if(board[5].data === null){\r\n                move = 5;\r\n            }\r\n            if(board[7].data === null){\r\n                move = 7;\r\n            }\r\n        }\r\n\r\n        // Check if corners are empty\r\n        if(move === null){\r\n            if(board[0].data === null){\r\n                move = 0;\r\n            }\r\n            if(board[2].data === null){\r\n                move = 2;\r\n            }\r\n            if(board[6].data === null){\r\n                move = 6;\r\n            }\r\n            if(board[8].data === null){\r\n                move = 8;\r\n            }\r\n        }\r\n      \r\n        // Randomly select a block\r\n        if(move === null){\r\n            let random = Math.floor(Math.random() * 9);\r\n            while(board[random].data !== null){\r\n                random = Math.floor(Math.random() * 9);\r\n            }\r\n            move = random;\r\n        }\r\n      \r\n        setTurn(\"P1\");\r\n        setNoOfTurns(noOfTurns + 1);\r\n        setBoard(board.map((block, index) => {\r\n            if(index === move){\r\n                return {data: \"O\"};\r\n            }\r\n            return block;\r\n        }));\r\n      }\r\n\r\n    const handleCellClick = (index) => {\r\n        if(gameStatus !== null){\r\n            return;\r\n        }\r\n\r\n        if(board[index].data === null){\r\n            let newBoard = [...board];\r\n            newBoard[index] = {data: turn === \"P1\" ? \"X\" : \"O\"};\r\n            setNoOfTurns(noOfTurns + 1);\r\n            setTurn(turn === \"P1\" ? \"P2\" : \"P1\");\r\n            setBoard(newBoard);\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    function handleGameTypeChange(value) {\r\n        setGameType(value);\r\n    }\r\n\r\n    const resetAll = () => {\r\n        setIsExploding(false);\r\n        setBoard( Array(9).fill({data: null}) );\r\n        setNoOfTurns(0);\r\n        setTurn(\"P1\");\r\n        setGameStatus(null);\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-blog-div\">\r\n            <Modal centered visible={turn === \"P2\" && gameType === \"PVC\" && gameStatus === null } footer={null} bodyStyle={{ padding: \"0px\" }} closable={false}>\r\n                <SemipolarLoading size=\"large\" color=\"rgba(255, 84, 17, 1)\" />\r\n            </Modal>\r\n            {isExploding && <ConfettiExplosion />}\r\n            <h1 className=\"todo-heading\">\r\n                Tic Tac Toe\r\n            </h1>\r\n\r\n            <div className=\"blog-para\">\r\n                A game of Tic Tac Toe where you can never win against the computer.\r\n            </div>\r\n\r\n            {/* <Form.Item label=\"Category\"> */}\r\n                <Select defaultValue=\"PVC\" disabled={noOfTurns > 0} style={{ width: 220 }} onChange={handleGameTypeChange}>\r\n                    <Option value=\"PVP\">Player Vs Player</Option>\r\n                    <Option value=\"PVC\">Player Vs Computer</Option>\r\n                </Select>\r\n                <Button type=\"primary\" onClick={resetAll} style={{ marginLeft: '10px' }} >Reset</Button>\r\n            {/* </Form.Item> */}\r\n\r\n            {gameStatus !== null ?\r\n             <h1 className=\"game-status\" style={{fontSize: '25px', color: \"rgba(255, 84, 17, 1)\"}} >{gameStatus}</h1>\r\n             : <h1 className=\"game-status\">{turn === \"P1\" ? \"Player 1\" : (gameType === \"PVC\" ? \"Computer\" : \"Player 2\")}'s turn</h1>\r\n             }\r\n\r\n            <div className=\"ttt-grid-outer\">\r\n                <div className=\"ttt-grid-inner\" >\r\n                    <div \r\n                        className=\"ttt-grid-cell block_0\" \r\n                        onClick={() => {handleCellClick(0)}} \r\n                        dataPlaceholder={noOfTurns%2 === 0 ? \"X\" : \"O\"}\r\n                    >\r\n                        {board[0].data}\r\n                    </div>\r\n                    <div \r\n                        className=\"ttt-grid-cell block_1\" \r\n                        onClick={() => {handleCellClick(1)}} \r\n                        dataPlaceholder={noOfTurns%2 === 0 ? \"X\" : \"O\"}\r\n                    >\r\n                        {board[1].data}\r\n                    </div>\r\n                    <div \r\n                        className=\"ttt-grid-cell block_2\" \r\n                        onClick={() => {handleCellClick(2)}} \r\n                        dataPlaceholder={noOfTurns%2 === 0 ? \"X\" : \"O\"}\r\n                    >\r\n                        {board[2].data}\r\n                    </div>\r\n                </div>\r\n                <div className=\"ttt-grid-inner\">\r\n                    <div \r\n                        className=\"ttt-grid-cell block_3\" \r\n                        onClick={() => {handleCellClick(3)}} \r\n                        dataPlaceholder={noOfTurns%2 === 0 ? \"X\" : \"O\"}\r\n                    >\r\n                        {board[3].data}\r\n                    </div>\r\n                    <div \r\n                        className=\"ttt-grid-cell block_4\" \r\n                        onClick={() => {handleCellClick(4)}} \r\n                        dataPlaceholder={noOfTurns%2 === 0 ? \"X\" : \"O\"}\r\n                    >\r\n                        {board[4].data}\r\n                    </div>\r\n                    <div \r\n                        className=\"ttt-grid-cell block_5\" \r\n                        onClick={() => {handleCellClick(5)}} \r\n                        dataPlaceholder={noOfTurns%2 === 0 ? \"X\" : \"O\"}\r\n                    >\r\n                        {board[5].data}\r\n                    </div>\r\n                </div>\r\n                <div className=\"ttt-grid-inner\">\r\n                    <div \r\n                        className=\"ttt-grid-cell block_6\" \r\n                        onClick={() => {handleCellClick(6)}} \r\n                        dataPlaceholder={noOfTurns%2 === 0 ? \"X\" : \"O\"}\r\n                    >\r\n                        {board[6].data}\r\n                    </div>\r\n                    <div \r\n                        className=\"ttt-grid-cell block_7\" \r\n                        onClick={() => {handleCellClick(7)}} \r\n                        dataPlaceholder={noOfTurns%2 === 0 ? \"X\" : \"O\"}\r\n                    >\r\n                        {board[7].data}\r\n                    </div>\r\n                    <div \r\n                        className=\"ttt-grid-cell block_8\" \r\n                        onClick={() => {handleCellClick(8)}} \r\n                        dataPlaceholder={noOfTurns%2 === 0 ? \"X\" : \"O\"}\r\n                    >\r\n                        {board[8].data}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {gameStatus !== null ? (\r\n                <LineTo\r\n                    from={line[0][0]}\r\n                    to={line[0][1]}\r\n                    zIndex={1000}\r\n                    borderColor=\"rgba(255, 84, 17, 1)\" \r\n                    borderWidth={3} \r\n                    fromAnchor={line[1][0]}\r\n                    toAnchor={line[1][1]}\r\n                />\r\n            ) : (<></>)}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./MineSweeperCSS.css\"\r\nimport { BsFillFlagFill } from 'react-icons/bs'\r\nimport { Select, Button } from 'antd';\r\nimport ConfettiExplosion from '@reonomy/react-confetti-explosion';\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function MineSweeper() {\r\n    const [gameSettings, setGameSettings] = useState({\r\n        rows: 10,\r\n        cols: 10,\r\n        mines: 10,\r\n    });\r\n    const [gameState, setGameState] = useState({\r\n        gameOver: false,\r\n        gameWon: false,\r\n    });\r\n    const [cellsOpen, setCellsOpen] = useState(0);\r\n    const [flags, setFlags] = useState(0);\r\n\r\n    const [board, setBoard] = useState([]);    // board is an array of arrays\r\n    // const exampleCell = {\r\n    //     isMine: false,\r\n    //     neighborMines: 0,\r\n    //     isRevealed: false,\r\n    //     isFlagged: false,\r\n    // }\r\n\r\n    const createMines = (board) => {\r\n        var minesAdded = 0;\r\n        while (minesAdded < gameSettings.mines) {\r\n            var row = Math.floor(Math.random() * gameSettings.rows);\r\n            var col = Math.floor(Math.random() * gameSettings.cols);\r\n            if (!board[row][col].isMine) {\r\n                board[row][col].isMine = true;\r\n                minesAdded++;\r\n            }\r\n        }\r\n        \r\n        return getNeighborMinesCount(board);\r\n    }\r\n\r\n    const getNeighborMinesCount = (board) => {\r\n        for (var row = 0; row < gameSettings.rows; row++) {\r\n            for (var col = 0; col < gameSettings.cols; col++) {\r\n                if (!board[row][col].isMine) {\r\n                    var neighborMines = 0;\r\n                    if(row > 0 && col > 0 && board[row - 1][col - 1].isMine) {\r\n                        neighborMines++;\r\n                    }\r\n                    if(row > 0 && board[row - 1][col].isMine) {\r\n                        neighborMines++;\r\n                    }\r\n                    if(row > 0 && col < gameSettings.cols - 1 && board[row - 1][col + 1].isMine) {\r\n                        neighborMines++;\r\n                    }\r\n                    if(col > 0 && board[row][col - 1].isMine) {\r\n                        neighborMines++;\r\n                    }\r\n                    if(col < gameSettings.cols - 1 && board[row][col + 1].isMine) {\r\n                        neighborMines++;\r\n                    }\r\n                    if(row < gameSettings.rows - 1 && col > 0 && board[row + 1][col - 1].isMine) {\r\n                        neighborMines++;\r\n                    }\r\n                    if(row < gameSettings.rows - 1 && board[row + 1][col].isMine) {\r\n                        neighborMines++;\r\n                    }\r\n                    if(row < gameSettings.rows - 1 && col < gameSettings.cols - 1 && board[row + 1][col + 1].isMine) {\r\n                        neighborMines++;\r\n                    }\r\n                    board[row][col].neighborMines = neighborMines;\r\n                }\r\n            }\r\n        }\r\n        return board;\r\n    }\r\n\r\n    const createBoard = () => {\r\n        var newBoard = [];\r\n        for (var i = 0; i < gameSettings.rows; i++) {\r\n            newBoard.push([]);\r\n            for (var j = 0; j < gameSettings.cols; j++) {\r\n                newBoard[i].push({\r\n                    isMine: false,\r\n                    neighborMines: 0,\r\n                    isRevealed: false,\r\n                    isFlagged: false,\r\n                });\r\n            }\r\n        }\r\n\r\n        return createMines(newBoard);\r\n    }\r\n    \r\n    const createGame = () => {\r\n        setBoard(createBoard());\r\n        setCellsOpen(0);\r\n        setFlags(0);\r\n        setGameState({\r\n            gameOver: false,\r\n            gameWon: false,\r\n        });\r\n    }\r\n\r\n    const handelGameOver = () => {\r\n        var newBoard = [...board];\r\n        for (var row = 0; row < gameSettings.rows; row++) {\r\n            for (var col = 0; col < gameSettings.cols; col++) {\r\n                if (board[row][col].isMine) {\r\n                    newBoard[row][col].isRevealed = true;\r\n                }\r\n            }\r\n        }\r\n        setBoard(newBoard);\r\n        setGameState({\r\n            gameOver: true,\r\n            gameWon: false,\r\n        });\r\n        alert(\"Game Over\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        createGame();\r\n    }, [gameSettings]);\r\n    \r\n    useEffect(() => {\r\n        if (cellsOpen === gameSettings.rows * gameSettings.cols - gameSettings.mines) {\r\n            setGameState({\r\n                gameOver: false,\r\n                gameWon: true,\r\n            });\r\n        }\r\n    }, [cellsOpen]);\r\n\r\n    const handleLeftClick = (e, row, col) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if(board[row][col].isRevealed || board[row][col].isFlagged || gameState.gameOver || gameState.gameWon) {\r\n            return;\r\n        }\r\n\r\n        if(board[row][col].isMine) {\r\n            handelGameOver();\r\n            return;\r\n        } \r\n        else {\r\n            var newBoard = [...board];\r\n            newBoard[row][col].isRevealed = true;\r\n            setBoard(newBoard);\r\n            setCellsOpen(cellsOpen + 1);\r\n            \r\n        }\r\n    }\r\n\r\n    const handleRightClick = (e, row, col) => {\r\n        e.preventDefault();\r\n\r\n        if (gameState.gameOver || gameState.gameWon) {\r\n            return;\r\n        }\r\n\r\n        if(board[row][col].isRevealed) {\r\n            return;\r\n        }\r\n\r\n        var newBoard = [...board];\r\n        if(board[row][col].isFlagged) {\r\n            newBoard[row][col].isFlagged = false;\r\n            setFlags(flags - 1);\r\n        }\r\n        else {\r\n            if(flags === gameSettings.mines) {\r\n                return;\r\n            }\r\n            newBoard[row][col].isFlagged = true;\r\n            setFlags(flags + 1);\r\n        }\r\n        setBoard(newBoard);\r\n    }\r\n\r\n    const condionallyRenderCell = (cell) => {\r\n        if(cell.isRevealed && cell.isMine){\r\n            return <>💣</>\r\n        }\r\n        if(cell.isRevealed){\r\n            return <>{cell.neighborMines}</>\r\n        }\r\n        if(cell.isFlagged){\r\n            return <BsFillFlagFill style={{fontSize: '25px', color: 'red'}}/>\r\n        }\r\n    }\r\n\r\n    const handleGameLvlChange = (value) => {\r\n        if(value === 'Beginner') {\r\n            setGameSettings({\r\n                rows: 10,\r\n                cols: 10,\r\n                mines: 15,\r\n            });\r\n        }\r\n        if(value === 'Intermediate') {\r\n            setGameSettings({\r\n                rows: 16,\r\n                cols: 16,\r\n                mines: 40,\r\n            });\r\n        }\r\n        if(value === 'Expert') {\r\n            setGameSettings({\r\n                rows: 16,\r\n                cols: 30,\r\n                mines: 99,\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main-blog-div\" style={{maxWidth: 'none'}}>\r\n            {gameState.gameWon && <ConfettiExplosion />}\r\n\r\n            <div className=\"game-settings\">\r\n                <h1 className=\"todo-heading\">\r\n                    Mine Sweeper\r\n                </h1>\r\n\r\n                <div style={{margin: \"20px\"}}>\r\n                    <BsFillFlagFill style={{fontSize: '25px', color: 'red'}}/>\r\n                    <span style={{marginRight: '20px', fontSize: \"20px\"}}>{gameSettings.mines - flags}</span>\r\n                    <Select defaultValue=\"Beginner\" disabled={cellsOpen} style={{ width: 220 }} onChange={handleGameLvlChange}>\r\n                        <Option value=\"Beginner\">Beginner</Option>\r\n                        <Option value=\"Intermediate\">Intermediate</Option>\r\n                        {/* <Option value=\"Expert\">Expert</Option> */}\r\n                    </Select>\r\n                    <Button type=\"primary\" onClick={() => {createGame()}} style={{ marginLeft: '10px' }} >Reset</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    board.map((row, rowIndex) => {\r\n                        return (\r\n                            <div className=\"minesweeper-row\" key={rowIndex}>\r\n                                {row.map((cell, colIndex) => {\r\n                                    return (\r\n                                        <div \r\n                                            className={\"minesweeper-cell minesweeper-cell-color-\" + cell.neighborMines} \r\n                                            key={colIndex}\r\n                                            onContextMenu={(e) => handleRightClick(e, rowIndex, colIndex)}\r\n                                            onClick={(e) => handleLeftClick(e, rowIndex, colIndex)}\r\n                                        >\r\n                                            {condionallyRenderCell(cell)}\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport FileViewer from 'react-file-viewer';\r\n\r\nexport default function TestPdf({src}) {\r\n  return (\r\n    <div>\r\n        <p>\r\n            TestPdf\r\n        </p>\r\n        <FileViewer\r\n            controls={true}\r\n            fileType={\"pdf\"}\r\n            filePath={require(src)}\r\n            // key={src}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n","import React, { Suspense, useEffect } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport BlogTemplate from './BlogTemplates/BlogTemplate';\r\nimport Home from './HomeComponents/Home';\r\nimport MyNavbar from \"./MyNavbar\";\r\nimport PasteBinHome from './PasteBinComponents/PasteBinHome';\r\nimport PasteBinApp from './PasteBinComponents/PasteBinApp';\r\nimport TodoApp from \"./TodoAppComponents/TodoApp\"\r\nimport BSTApp from './TreeComponents/BSTApp';\r\nimport MaxHeapApp from './TreeComponents/MaxHeapApp';\r\nimport MinHeapApp from './TreeComponents/MinHeapApp';\r\nimport CanvasHome from './CanvasComponents/CanvasHome';\r\nimport CanvasApp from './CanvasComponents/CanvasApp';\r\nimport TicTacToe from './TicTacToe/TicTacToe';\r\nimport MineSweeper from './MineSweeper/MineSweeper';\r\nimport TestPdf from './Test/TestPdf';\r\n// import ImageModel from './ModelApps/ImageModel';\r\n\r\n// const TestPdf = React.lazy(() => import('./Test/TestPdf'));\r\n\r\nfunction RoutePaths() {\r\n\r\n    var forUseEffect;\r\n    useEffect(() => {\r\n        localStorage.removeItem(\"redirectTo\");\r\n    }, [forUseEffect])\r\n\r\n    return (\r\n        <Router>\r\n            <MyNavbar />\r\n\r\n            <Switch>\r\n\r\n                <Route path=\"/blogs/\">\r\n                    <BlogTemplate />\r\n                </Route>\r\n\r\n                \r\n                <Route path=\"/test-1\">\r\n                    {/* <Suspense fallback={<div>Loading...</div>}> */}\r\n                        <TestPdf src={\"/Testing1.pdf\"} />\r\n                    {/* </Suspense> */}\r\n                </Route>\r\n                <Route path=\"/test-2\">\r\n                    {/* <Suspense fallback={<div>Loading...</div>}> */}\r\n                        <TestPdf src={\"/Testing2.pdf\"} />\r\n                    {/* </Suspense> */}\r\n                </Route>\r\n\r\n                {/* <Route path=\"/models/10animals\">\r\n                    <ImageModel modelInfo={require(\"./ModelApps/ModelDetails/10Animals.json\")} />\r\n                </Route> */}\r\n                \r\n                <Route path=\"/tictactoe\">\r\n                    <TicTacToe />\r\n                </Route>\r\n                <Route path=\"/minesweeper\">\r\n                    <MineSweeper />\r\n                </Route>\r\n\r\n                <Route path=\"/todo-app\">\r\n                    <TodoApp />\r\n                </Route>\r\n\r\n                <Route exact path=\"/pastebin\">\r\n                    <PasteBinHome />\r\n                </Route>\r\n                <Route path=\"/pastebin/\">\r\n                    <PasteBinApp />\r\n                </Route>\r\n\r\n                <Route exact path=\"/canvas\">\r\n                    <CanvasHome />\r\n                </Route>\r\n                <Route path=\"/canvas/\">\r\n                    <CanvasApp />\r\n                </Route>\r\n\r\n                <Route path=\"/bst-visualization\">\r\n                    <BSTApp />\r\n                </Route>\r\n                <Route path=\"/max-heap-visualization\">\r\n                    <MaxHeapApp />\r\n                </Route>\r\n                <Route path=\"/min-heap-visualization\">\r\n                    <MinHeapApp />\r\n                </Route>\r\n\r\n\r\n                <Route path=\"/\">\r\n                    {\r\n                        localStorage.getItem('redirectTo') ? <Redirect to={localStorage.getItem('redirectTo')} /> \r\n                        : null\r\n                        \r\n                    }\r\n                    <Home />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RoutePaths\r\n","import './App.css';\nimport RoutePaths  from './RoutePaths'\n\nfunction App() {\n  return (\n    <div>\n      <RoutePaths />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport axios from 'axios';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:8000';\r\naxios.defaults.baseURL = 'https://shlok-m-server.herokuapp.com/';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SnackbarProvider\r\n      maxSnack={2}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}\r\n      autoHideDuration={3000}\r\n    >\r\n      <App />\r\n    </SnackbarProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}