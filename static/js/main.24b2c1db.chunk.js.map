{"version":3,"sources":["BlogTemplates/BlogButton.js","BlogTemplates/BlogImage.js","BlogTemplates/BlogList.js","BlogTemplates/BlogPara.js","BlogTemplates/BlogSubheading.js","BlogTemplates/BlogTitle.js","BlogTemplates/BlogTemplate.js","HomeComponents/HomeCards.js","HomeComponents/Home.js","MyNavbar.js","PasteBinComponents/PasteBinHome.js","firebase.js","PasteBinComponents/PasteBinApp.js","TodoAppComponents/components/TodoForm.js","TodoAppComponents/components/Todo.js","TodoAppComponents/components/Doing.js","TodoAppComponents/components/DeleteButton.js","TodoAppComponents/components/Done.js","TodoAppComponents/components/TodoList.js","TodoAppComponents/TodoApp.js","TreeComponents/Components/Grid.js","TreeComponents/Components/Tree.js","TreeComponents/Components/BST.js","TreeComponents/BSTApp.js","TreeComponents/Components/MaxHeap.js","TreeComponents/MaxHeapApp.js","TreeComponents/Components/MinHeap.js","TreeComponents/MinHeapApp.js","CanvasComponents/CanvasHome.js","CanvasComponents/CanvasApp.js","RoutePaths.js","App.js","index.js"],"names":["BlogButton","details","className","onClick","url","click","window","location","href","text","BlogImage","src","alt","BlogList","makeList","list","map","index","BlogPara","BlogSubheading","BlogTitle","BlogTemplate","histoy","useHistory","useState","blogData","setBlogData","enqueueSnackbar","useSnackbar","action","key","Fragment","reload","style","background","border","cursor","color","paddingRight","textDecoration","fontWeight","useEffect","scrollTo","axios","get","pathname","then","res","JSON","parse","data","blogDetail","catch","err","request","status","variant","anchorOrigin","vertical","horizontal","push","length","document","title","getRandomNumber","Math","floor","random","blog","type","size","HomeCards","require","cards","breakpointCols","default","1600","1250","940","700","columnClassName","card","to","description","date","id","Home","MyNavbar","Navbar","collapseOnSelect","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","Tooltip","placement","arrow","interactive","PasteBinHome","setUrl","localStorage","getItem","recentBins","setRecentBins","inputRef","useRef","history","loadRecentPasteBins","display","pasteBin","removeArr","filter","bin","setItem","stringify","removeRecent","innerWidth","current","focus","Helmet","textAlign","onSubmit","e","preventDefault","path","substring","split","marginBottom","placeholder","value","onChange","target","ref","maxWidth","r","toString","generateNewURL","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","this","db","firestore","doc","set","abc","PasteBinApp","result","setResult","setData","savePath","setSavePath","saved","setSaved","closeSnackbar","dontShowSnackbar","toLowerCase","firebase","getPasteBinData","recentPasteBins","pop","saveRecent","autoHideDuration","undefined","addPasteBinData","position","spellCheck","console","log","command","toCopy","temp","createElement","tempMsg","createTextNode","appendChild","body","select","execCommand","removeChild","copyToClipboard","TodoForm","props","edit","input","setInput","availableClasses","colorNames","class","classSelector","setClassSelector","selectColor","setSelectColor","handleChange","colorSelector","classesUsed","indexOf","nextClassColor","onContextMenu","handleRightClick","slice","Todo","todos","updateTodo","sendToDoing","sendToDone","handleDrag","handlePositionChange","allowDrop","setShowDelete","setEdit","todo","draggable","onDragStart","onDragEnd","onDrop","onDragOver","onDoubleClick","Doing","sendToDo","DeleteButton","deleteAllDone","removeTodo","showDelete","dataTransfer","getData","Done","TodoList","setTodos","newTodos","todoType","todoList","doing","todoId","newValue","test","prev","item","a","updatedTodos","onTodo","changeTodo","i","handleToDoDrop","newTodo","handleDoingDrop","handleDoneDrop","App","Grid","grid","loading","setLoading","search","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","makeOneRow","row","rowIndex","cell","cellIndex","leftChild","rightChild","pow","from","zIndex","borderColor","borderWidth","Node","left","right","BinarySearchTree","start","root","traversal","newNode","insertRecursive","node","minValue","deleteRecursive","findInorderSuccessor","bstArray","valueArray","treeHeight","j","rowNode","rowValue","lDepth","rDepth","BST","setGrid","setSearch","showAnimation","setShowAnimation","breathFT","getRootNode","binaryTree","setBinaryTree","makeVisualTree","k","myList","height","noOfZerosInMiddle","tempList","wait","delay","args","Promise","resolve","iForAnimation","createAnimation","compare","checkIfPresent","animation","insertNode","handleSubmit","operation","deleteTree","insertToTree","parseInt","deleteNode","searchInTree","marginLeft","checked","fontSize","BSTApp","MaxHeap","log2","myIndex","newTree","newHead","deleteFromTree","myParent","marginRight","MaxHeapApp","MinHeap","MinHeapApp","CanvasHome","loadRecentCanvas","canvas","CanvasApp","brushSize","setBrushSize","hex","setColor","canvasData","setCanvasData","getCanvasData","recentCanvas","addCanvasData","width","onChangeComplete","undo","clear","getSaveData","hideGrid","saveData","backgroundColor","brushColor","brushRadius","lazyRadius","canvasWidth","canvasHeight","RoutePaths","removeItem","forUseEffect","exact","defaults","baseURL","ReactDOM","render","StrictMode","maxSnack","getElementById"],"mappings":"wjEAeeA,EAbI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAMjB,OACI,wBAAQC,UAAU,kBAAkBC,QAAS,kBAL5BC,EAK8CH,EAAQI,WAJvEC,OAAOC,SAASC,KAAOJ,GADP,IAACA,GAKjB,SACKH,EAAQQ,QCANC,EARG,SAAC,GAAe,IAAdT,EAAa,EAAbA,QAChB,OACI,qBAAKC,UAAU,iBAAf,SACI,qBAAKS,IAAKV,EAAQU,IAAKT,UAAU,aAAaU,IAAKX,EAAQW,SCcxDC,EAjBE,SAAC,GAAe,IAEvBC,EAFsB,EAAbb,QAEUc,KAAKC,KAAI,SAAAC,GAAK,OAC/B,6BACKA,GADIA,MAKjB,OACI,qBAAKf,UAAU,YAAf,SACI,oBAAIA,UAAU,eAAd,SACKY,OCHFI,EARE,SAAC,GAAe,IAAdjB,EAAa,EAAbA,QACf,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAQQ,QCKNU,EARQ,SAAC,GAAe,IAAdlB,EAAa,EAAbA,QACrB,OACI,qBAAKC,UAAU,kBAAf,SACKD,EAAQQ,QCKNW,EARG,SAAC,GAAe,IAAdnB,EAAa,EAAbA,QAChB,OACI,qBAAKC,UAAU,aAAf,SACKD,EAAQQ,Q,iBC+FNY,MAxFf,WACI,IAAMC,EAASC,cADK,EAEYC,mBAAS,IAFrB,mBAEbC,EAFa,KAEHC,EAFG,KAGZC,EAAoBC,cAApBD,gBAEFE,EAAS,SAAAC,GAAG,OACd,cAAC,IAAMC,SAAP,UACI,mCACA,qBAAK5B,QAAS,WAAQG,OAAOC,SAASyB,UAAYC,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,mBAAoBC,aAAa,MAAOC,eAAe,YAAaC,WAAW,UAA1M,2BAORC,qBAAU,WACNnC,OAAOoC,SAAS,EAAG,GAEnBC,IAAMC,IAAItC,OAAOC,SAASsC,UACrBC,MAAK,SAAAC,GAEFrB,EAAYsB,KAAKC,MAAMF,EAAIG,KAAKC,gBAEnCC,OAAM,SAAAC,GAEuB,IAAvBA,EAAIC,QAAQC,OACX5B,EAAgB,0BAA2B,CACvC6B,QAAS,QACTC,aAAa,CACTC,SAAS,MACTC,WAAW,UAEf9B,YAIJF,EAAgB,iBAAkB,CAC9B6B,QAAS,QACTC,aAAa,CACTC,SAAS,MACTC,WAAW,YAGnBrC,EAAOsC,KAAK,SAIrBnC,EAASoC,OAAS,IACjBC,SAASC,MAAQ,WAAatC,EAAS,GAAGhB,KAAO,qBAEtD,IAGH,IAAMuD,EAAkB,WACpB,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WAGrBC,EAAO3C,EAAST,KAAI,SAAAC,GACtB,MAAkB,UAAfA,EAAMoD,KACE,cAAC,EAAD,CAAWpE,QAASgB,GAAY+C,KAEpB,cAAf/C,EAAMoD,KACH,cAAC,EAAD,CAAUpE,QAASgB,GAAY+C,KAEnB,eAAf/C,EAAMoD,KACH,cAAC,EAAD,CAAgBpE,QAASgB,GAAY+C,KAEzB,WAAf/C,EAAMoD,KACH,cAAC,EAAD,CAAYpE,QAASgB,GAAY+C,KAErB,SAAf/C,EAAMoD,KACH,cAAC,EAAD,CAAUpE,QAASgB,GAAY+C,KAEnB,UAAf/C,EAAMoD,KACH,cAAC,EAAD,CAAWpE,QAASgB,GAAY+C,KAGhC,qBAAK9D,UAAU,YAAf,iDAIf,OACI,qBAAKA,UAAU,gBAAf,SACyB,IAApBuB,EAASoC,OAAe,cAAC,mBAAD,CAAoBS,KAAK,QAAQjC,MAAM,qBAAwB+B,K,kBCtBrFG,MArEf,WAAsB,IAAD,EACD/C,mBAASgD,EAAQ,MAA1BC,EADU,oBAuCjB,OACI,cAAC,IAAD,CACIC,eAVY,CAChBC,QAAS,EACTC,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,IAAK,GAMD7E,UAAU,kBACV8E,gBAAgB,yBAHpB,SAKMP,EAAMzD,KAAI,SAAAiE,GAAI,OAChB,cAAC,IAAD,CAAMC,GAAID,EAAK7E,IAAf,SACI,sBAAmBF,UAAU,YAA7B,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACK+E,EAAKlB,QAEV,qBAAK7D,UAAU,oBAAf,SACK+E,EAAKE,iBAGd,sBAAKjF,UAAU,kBAAf,UACI,qBAAKA,UAAU,aAAf,SACK+E,EAAKG,QAnDZf,EAqDYY,EAAKZ,KApDnB,SAATA,EAEK,qBAAKnE,UAAU,yBAAf,SACKmE,IAII,QAATA,EAEA,qBAAKnE,UAAU,wBAAf,SACKmE,IAII,UAATA,EAEA,qBAAKnE,UAAU,0BAAf,SACKmE,SAHR,QAyBaY,EAAKI,KADMJ,EAAKI,IAvCrB,IAAChB,QCOPiB,MAff,WAQI,OANAxB,SAASC,MAAQ,sBACjBtB,qBAAU,WACNnC,OAAOoC,SAAS,EAAG,KACpB,IAIC,8BACI,cAAC,EAAD,O,mCC0DG6C,MAhEf,WAEI,OACI,mCACA,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKxF,UAAU,eAAesD,QAAQ,OAAOmC,OAAO,MAApF,UAEI,cAACH,EAAA,EAAOI,MAAR,CAAcpF,KAAK,kCAAnB,0BAIA,cAACgF,EAAA,EAAOK,OAAR,CAAeC,gBAAc,0BAE7B,eAACN,EAAA,EAAOO,SAAR,CAAiBV,GAAG,wBAApB,UAEI,cAACW,EAAA,EAAD,CAAK9F,UAAU,UAAf,SACI,cAAC8F,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAMf,GAAG,YAAvB,yBAKJ,eAACc,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,CAASpC,MAAM,SAASqC,UAAU,SAASC,OAAK,EAAhD,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUzF,KAAK,kCAAkCN,UAAU,eAA3D,SACQ,cAAC,IAAD,QAGZ,cAACiG,EAAA,EAAD,CAASpC,MAAM,WAAWqC,UAAU,SAASC,OAAK,EAAlD,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUzF,KAAK,sDAAsDN,UAAU,eAA/E,SACQ,cAAC,IAAD,QAGZ,cAACiG,EAAA,EAAD,CAASpC,MAAM,0BAA0BqC,UAAU,SAASC,OAAK,EAACC,aAAW,EAA7E,SACI,cAACN,EAAA,EAAIC,KAAL,CAAUzF,KAAK,iCAAiCN,UAAU,eAA1D,SACQ,cAAC,IAAD,QAGZ,cAACiG,EAAA,EAAD,CAASpC,MAAM,aAAaqC,UAAU,SAASC,OAAK,EAApD,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUzF,KAAK,4CAA4CN,UAAU,eAArE,SACQ,cAAC,IAAD,QAGZ,cAACiG,EAAA,EAAD,CAASpC,MAAM,WAAWqC,UAAU,SAASC,OAAK,EAAlD,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUzF,KAAK,8CAA8CN,UAAU,eAAvE,SACQ,cAAC,IAAD,QAGZ,cAACiG,EAAA,EAAD,CAASpC,MAAM,YAAYqC,UAAU,SAASC,OAAK,EAAnD,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUzF,KAAK,2CAA2CN,UAAU,eAApE,SACQ,cAAC,IAAD,QAGZ,cAACiG,EAAA,EAAD,CAASpC,MAAM,UAAUqC,UAAU,SAASC,OAAK,EAAjD,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUzF,KAAK,wCAAwCN,UAAU,eAAjE,SACQ,cAAC,IAAD,oB,wBC4EjBqG,MAlIf,WAAyB,IAAD,EACE/E,mBAAS,IADX,mBACbpB,EADa,KACRoG,EADQ,OAEiBhF,mBAASiF,aAAaC,QAAQ,mBAAqB1D,KAAKC,MAAMwD,aAAaC,QAAQ,oBAAsB,IAF1H,mBAEbC,EAFa,KAEDC,EAFC,KAGdC,EAAWC,iBAAO,MACpBC,EAAUxF,cACduC,SAASC,MAAQ,2BAEjB,IAyCMiD,EAAsBL,EAAW3F,KAAI,SAAAC,GACnC,OACI,qBAAKgB,MAAO,CAACgF,QAAQ,gBAArB,SACI,sBAAK/G,UAAU,kBAAf,UACI,qBAAK+B,MAAO,CAACG,OAAO,WAAYjC,QAAS,kBATzC+G,EAS0DjG,OAR1E8F,EAAQnD,KAAK,aAAesD,GADb,IAACA,GASA,SACK,IAAMjG,IAEX,qBAAKf,UAAU,QAAf,SACI,cAACiG,EAAA,EAAD,CAASpC,MAAM,SAASqC,UAAU,SAASC,OAAK,EAAhD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAvBxB,SAAC+G,GAClB,IAAMC,EAAY,YAAIR,GAAYS,QAAO,SAAAC,GAAG,OAAIA,IAAQH,KACxDN,EAAcO,GACdV,aAAaa,QAAQ,kBAAmBtE,KAAKuE,UAAUJ,IAoBRK,CAAavG,oBAkBhE,OANAwB,qBAAU,WACHnC,OAAOmH,YAAc,MACpBZ,EAASa,QAAQC,WAKrB,gCACI,cAACC,EAAA,EAAD,UACI,0PAUJ,sBAAK1H,UAAU,eAAf,UACI,qBAAKA,UAAU,aAAf,uBACA,qBAAKA,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,qEACA,qBAAK3H,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,iDACA,qBAAK3H,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,4BACA,qBAAK3H,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,kBACA,qBAAK3H,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,uCACA,uBACA,sBAAM3H,UAAU,YAAY4H,SAtFnB,SAAAC,GACjBA,EAAEC,iBACF,IAAIC,EAAO7H,EACG,MAAXA,EAAI,KACH6H,EAAOA,EAAKC,UAAU,EAAGD,EAAKpE,SAGf,KADnBoE,EAAOA,EAAKE,MAAM,MACVtE,OACW,KAAZoE,EAAK,IACJlB,EAAQnD,KAAK,aAAeqE,EAAK,IAItB,aAAZA,EAAK,IACW,KAAZA,EAAK,IACJlB,EAAQnD,KAAK,aAAeqE,EAAK,KAuEehG,MAAO,CAACmG,aAAa,OAAzE,SACI,sBAAKlI,UAAU,YAAf,UACQ,uBACImE,KAAK,OACLgE,YAAY,eACZC,MAAOlI,EACPF,UAAU,aACVqI,SAAU,SAAAR,GAAC,OAAIvB,EAAOuB,EAAES,OAAOF,QAC/BG,IAAK5B,EACL5E,MAAO,CAACyG,SAAS,WAErB,wBAAQxI,UAAU,mBAAlB,qBAGZ,qBAAKA,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,gBACA,qBAAK3H,UAAU,kBAAkB+B,MAAO,CAACyG,SAAS,SAAUvI,QAAS,kBA1G1D,WACnB,IAAIwI,EAAI1E,KAAKE,SAASyE,SAAS,IAAIV,UAAU,GAC7CnB,EAAQnD,KAAK,aAAe+E,GAwGuDE,IAA3E,iCACClC,EAAW9C,OAAS,EACjB,qCACI,uBACA,qBAAK3D,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,+BACA,qBAAK3H,UAAU,wBAAwB+B,MAAO,CAACyG,SAAS,SAAxD,SACK1B,OAGP,Y,kDC1HlB8B,G,OAAiB,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAoDJ,M,WA9CX,aAAe,oBACXC,IAAIC,cAAcT,GAElBU,KAAKC,GAAKH,IAAII,Y,4DAiBDtJ,EAAK8C,GAClBsG,KAAKC,GAAGE,IAAR,mBAAwBvJ,IAAOwJ,IAAI,CAC/B1G,W,+EAKe9C,G,uFACDoJ,KAAKC,GAAGE,IAAR,mBAAwBvJ,IAAOwC,M,cAA3CiH,E,yBACCA,EAAIjH,IAAI,S,2IAGJxC,EAAK8C,GAChBsG,KAAKC,GAAGE,IAAR,iBAAsBvJ,IAAOwJ,IAAI,CAC7B1G,W,6EAKa9C,G,uFACCoJ,KAAKC,GAAGE,IAAR,iBAAsBvJ,IAAOwC,M,cAAzCiH,E,yBACCA,EAAIjH,IAAI,S,uHCkGRkH,MAvJf,WAAwB,IAAD,EACStI,mBAAS,IADlB,mBACZuI,EADY,KACJC,EADI,OAEKxI,mBAAS,mBAFd,mBAEZ0B,EAFY,KAEN+G,EAFM,OAGazI,mBAAS,IAHtB,mBAGZ0I,EAHY,KAGFC,EAHE,OAIO3I,oBAAS,GAJhB,mBAIZ4I,EAJY,KAILC,EAJK,OAyBwBzI,cAAnCD,EAzBW,EAyBXA,gBAAiB2I,EAzBN,EAyBMA,cACzBxG,SAASC,MAAQ,2BAEjB,IAKMlC,EAAS,SAAAC,GAAG,OACd,cAAC,IAAMC,SAAP,UACI,qCACA,qBAAK5B,QAAS,YARG,SAAC2B,GACtB2E,aAAaa,QAAQ,yBAAyB,GAC9CgD,EAAcxI,GAMYyI,CAAiBzI,IAAQG,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,UAAWC,aAAa,MAAOC,eAAe,YAAaC,WAAW,UAA9L,6BAGA,qBAAKrC,QAAS,WAAQmK,EAAcxI,IAAQG,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,UAAWE,eAAe,YAAaC,WAAW,UAAvK,2BA+ER,OA5DAC,qBAAU,WAEN,IAAIwF,EAAO3H,OAAOC,SAASsC,SAGE,MAA1BoF,EAAKA,EAAKpE,OAAS,KAClBoE,EAAOA,EAAKC,UAAU,EAAGD,EAAKpE,OAAS,GACvCvD,OAAOC,SAASsC,SAAWoF,IAI/BA,GAFAA,EAAOA,EAAKC,UAAU,EAAGD,EAAKpE,SAElBsE,MAAM,MAGVtE,OAAS,IACbvD,OAAOC,SAASsC,SAAW,IAAMoF,EAAK,GAAK,IAAMA,EAAK,IAG7B,aAA1BA,EAAK,GAAGuC,gBACPL,EAAYlC,EAAK,GAAGuC,eACpBC,EAASC,gBAAgBzC,EAAK,GAAGuC,eAAe1H,KAAKkH,EA/B1C,SAAC/B,GAChB,IAAI0C,EAAkBlE,aAAaC,QAAQ,mBAAqB1D,KAAKC,MAAMwD,aAAaC,QAAQ,oBAAsB,GACtHiE,EAAkB,YAAIA,GAAiBvD,QAAO,SAAAF,GAAQ,OAAIA,IAAae,MACvE0C,EAAe,CAAI1C,GAAJ,mBAAa0C,KACT9G,OAAS,GACxB8G,EAAgBC,MAEpBnE,aAAaa,QAAQ,kBAAmBtE,KAAKuE,UAAUoD,IAwBaE,CAAW5C,EAAK,QAGrF,IAGHxF,qBAAU,WACFgE,aAAaC,QAAQ,0BACrB/E,EAAgB,6EAA8E,CAC1F6B,QAAS,OACTsH,iBAAkB,IAClBjJ,aAGT,IAGHY,qBAAU,gBACQsI,IAAXhB,GACCU,EAASO,gBAAgBd,EAAU,mBACnCD,EAAQ,oBAGVA,EAAQF,KAEX,CAACA,IAgBA,sBAAK9H,MAAO,CAACgF,QAAQ,OAAQgE,SAAS,YAAtC,UACI,cAACrD,EAAA,EAAD,UACI,0PAUJ,0BACI1H,UAAU,gBACVgL,WAAW,QACX5C,MAAOpF,EACPqF,SAAU,SAAAR,GAAMkC,EAAQlC,EAAES,OAAOF,OAAQ+B,GAAS,MAGtD,sBAAKnK,UAAU,oBAAf,UACQ,wBAAQA,UAAU,sBAAsBC,QAAS,kBAhCzDiK,IACAK,EAASO,gBAAgBd,EAAUhH,GACnCmH,GAAS,GACTc,QAAQC,IAAI,gBAEhBzJ,EAAgB,6BAA8B,CAC1C6B,QAAS,aA0BD,oCAGA,wBAAQtD,UAAU,sBAAsBC,QAAS,YAvIzC,SAACkL,GACrB,IAAIC,EAASD,EAETE,EAAOzH,SAAS0H,cAAc,YAC9BC,EAAU3H,SAAS4H,eAAeJ,GACtCC,EAAKI,YAAYF,GAEjB3H,SAAS8H,KAAKD,YAAYJ,GAC1BA,EAAKM,SACL/H,SAASgI,YAAY,QACrBhI,SAAS8H,KAAKG,YAAYR,GAG1B5J,EADc,4BACW,CACrB6B,QAAS,YAyHuDwI,CAAgB1L,OAAOC,SAASC,OAAxF,SACI,cAAC,IAAD,a,OCxBTyL,MA3Hf,SAAkBC,GAAQ,IAAD,EACK1K,mBAAS0K,EAAMC,KAAOD,EAAMC,KAAK7D,MAAQ,IAD9C,mBACd8D,EADc,KACPC,EADO,KAEfxF,EAAWC,iBAAO,MAClBwF,EAAmB,CACrB,gBACA,kBACA,gBACA,kBACA,eACA,kBAEEC,EAAa,CACf,OACA,SACA,OACA,SACA,MACA,SAjBiB,EAmBqB/K,mBAAS0K,EAAMC,KAAKK,MAAQ,qBAnBjD,mBAmBdC,EAnBc,KAmBCC,EAnBD,OAoBiBlL,oBAAS,GApB1B,mBAoBdmL,EApBc,KAoBDC,EApBC,KAsBrBnK,qBAAU,WACHnC,OAAOmH,YAAc,MACpBZ,EAASa,QAAQC,WAKzB,IAAMkF,EAAe,SAAA9E,GACjBsE,EAAStE,EAAES,OAAOF,QAyClBwE,EAAgB,qBAAK5M,UAAWuM,EAAetM,QAAS,SAAC4H,GAAD,OANrC,SAAAA,GACnB,IAAMgF,EAAchF,EAAES,OAAOtI,UAAUiI,MAAM,KAC7CuE,EAAiBJ,GAAkBA,EAAiBU,QAASD,EAAY,GAAK,IAAMA,EAAY,IAAO,GAAKT,EAAiBzI,QAAW,qBAIzEoJ,CAAelF,IAAImF,cAAe,SAACnF,GAAD,OAZ5E,SAACA,GACtBA,EAAEC,iBACF4E,GAAe,GAUyFO,CAAiBpF,IAAzG,SACKwE,EAAWD,EAAiBU,QAAQP,EAAcW,MAAM,GAAI,QAgBrF,OAZGT,IACCG,EAAgBR,EAAiBtL,KAAI,SAACd,EAAWe,GAC7C,OACI,qBAAKf,UAAWA,EAAY,oBAA6CC,QAAS,SAAC4H,GAAO2E,EAAiB3E,EAAES,OAAOtI,WAAY0M,GAAe,IAA/I,SACKL,EAAWtL,IADsCsL,EAAWtL,QAUzE,sBAAMf,UAAU,YAAY4H,SAvDX,SAAAC,GACjBA,EAAEC,iBAECkE,EAAMC,KAAK9G,GACV6G,EAAMpE,SAAS,CACXzC,GAAIpB,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB1D,KAAM2L,EACNrL,KAAMmL,EAAMC,KAAKpL,KACjByL,MAAOC,EAAcW,MAAM,GAAI,MAInClB,EAAMpE,SAAS,CACXzC,GAAIpB,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB1D,KAAM2L,EACNrL,KAAM,OACNyL,MAAOF,EAAiBrI,KAAKC,MAAMD,KAAKE,SAAWmI,EAAiBzI,WAI5EwI,EAAS,KAmCT,SACCH,EAAMC,KAAK9G,GACR,sBAAKlF,QAAS,WAAOyM,GAAe,IAApC,UACI,sBAAK1M,UAAU,YAAf,UACI,uBACImE,KAAK,OACLgE,YAAY,mBACZC,MAAO8D,EACPlM,UAAU,aACVqI,SAAUsE,EACVpE,IAAK5B,IAET,wBAAQ3G,UAAU,mBAAlB,uBAEH4M,KAGL,qCACI,uBACIzI,KAAK,OACLgE,YAAY,aACZC,MAAO8D,EACPlM,UAAU,aACVqI,SAAUsE,EACVpE,IAAK5B,IAET,wBAAQ3G,UAAU,cAAlB,4B,yBC7CDmN,MAlEf,YAAyH,IAA1GC,EAAyG,EAAzGA,MAAOC,EAAkG,EAAlGA,WAAYC,EAAsF,EAAtFA,YAAaC,EAAyE,EAAzEA,WAAYC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,qBAAsBC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,cAAgB,EAC5FrM,mBAAS,CAC7B6D,GAAI,KACJiD,MAAO,GACPvH,KAAM,OACNyL,MAAO,KALyG,mBAC7GL,EAD6G,KACvG2B,EADuG,KAkBpH,OAAG3B,EAAK9G,GACG,cAAC,EAAD,CAAU8G,KAAMA,EAAMrE,SAXZ,SAAAQ,GACjBiF,EAAWpB,EAAK9G,GAAIiD,GACpBwF,EAAQ,CACJzI,GAAI,KACJiD,MAAO,GACPvH,KAAM,OACNyL,MAAO,QAQRc,EAAMtM,KAAI,SAAC+M,EAAM9M,GAAP,MAA+B,SAAd8M,EAAKhN,KACnC,sBAAKb,UAAW6N,EAAKvB,MAEjBwB,WAAW,EACXC,YAAa,SAAClG,GAAD,OAAO2F,EAAW3F,EAAG/E,KAAKuE,UAAUwG,KACjDG,UAAW,kBAAML,GAAc,IAC/BM,OAAQ,SAACpG,GAAD,OAAO4F,EAAqB5F,EAAGgG,IACvCK,WAAY,SAACrG,GAAD,OAAO6F,EAAU7F,IAC7BsG,cAAe,kBAAMP,EAAQ,CAAEzI,GAAI0I,EAAK1I,GAAIiD,MAAOyF,EAAKtN,KAAMM,KAAM,OAAQyL,MAAMuB,EAAKvB,SAP3F,UASI,8BACKuB,EAAKtN,MADAsN,EAAK1I,IAGf,sBAAKnF,UAAU,QAAf,UACI,cAACiG,EAAA,EAAD,CAASpC,MAAM,YAAYqC,UAAU,MAAMC,OAAK,EAAhD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAAM2N,EAAQ,CAAEzI,GAAI0I,EAAK1I,GAAIiD,MAAOyF,EAAKtN,KAAMM,KAAM,OAAQyL,MAAMuB,EAAKvB,SACjFtM,UAAU,kBAKtB,cAACiG,EAAA,EAAD,CAASpC,MAAM,gBAAgBqC,UAAU,MAAMC,OAAK,EAApD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAAMqN,EAAYO,EAAK1I,WAK5C,cAACc,EAAA,EAAD,CAASpC,MAAM,eAAeqC,UAAU,MAAMC,OAAK,EAAnD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAAMsN,EAAWM,EAAK1I,gBAhC1CpE,GAuCT,SCGOqN,MAlEf,YAAuH,IAAvGhB,EAAsG,EAAtGA,MAAOC,EAA+F,EAA/FA,WAAYgB,EAAmF,EAAnFA,SAAUd,EAAyE,EAAzEA,WAAYC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,qBAAsBC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,cAAgB,EAC1FrM,mBAAS,CAC7B6D,GAAI,KACJiD,MAAO,GACPvH,KAAM,QACNyL,MAAO,KALuG,mBAC3GL,EAD2G,KACrG2B,EADqG,KAkBlH,OAAG3B,EAAK9G,GACG,cAAC,EAAD,CAAU8G,KAAMA,EAAMrE,SAXZ,SAAAQ,GACjBiF,EAAWpB,EAAK9G,GAAIiD,GACpBwF,EAAQ,CACJzI,GAAI,KACJiD,MAAO,GACPvH,KAAM,QACNyL,MAAO,QAQRc,EAAMtM,KAAI,SAAC+M,EAAM9M,GAAP,MAA+B,UAAd8M,EAAKhN,KACnC,sBAAKb,UAAW6N,EAAKvB,MAEjBwB,WAAW,EACXC,YAAa,SAAClG,GAAD,OAAO2F,EAAW3F,EAAG/E,KAAKuE,UAAUwG,KACjDG,UAAW,kBAAML,GAAc,IAC/BM,OAAQ,SAACpG,GAAD,OAAO4F,EAAqB5F,EAAGgG,IACvCK,WAAY,SAACrG,GAAD,OAAO6F,EAAU7F,IAC7BsG,cAAe,kBAAMP,EAAQ,CAAEzI,GAAI0I,EAAK1I,GAAIiD,MAAOyF,EAAKtN,KAAMM,KAAM,QAASyL,MAAMuB,EAAKvB,SAP5F,UASI,8BACKuB,EAAKtN,MADAsN,EAAK1I,IAGf,sBAAKnF,UAAU,QAAf,UACI,cAACiG,EAAA,EAAD,CAASpC,MAAM,YAAYqC,UAAU,MAAMC,OAAK,EAAhD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAAM2N,EAAQ,CAAEzI,GAAI0I,EAAK1I,GAAIiD,MAAOyF,EAAKtN,KAAMM,KAAM,QAASyL,MAAMuB,EAAKvB,SAClFtM,UAAU,kBAKtB,cAACiG,EAAA,EAAD,CAASpC,MAAM,kBAAkBqC,UAAU,MAAMC,OAAK,EAAtD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAAMoO,EAASR,EAAK1I,WAKzC,cAACc,EAAA,EAAD,CAASpC,MAAM,eAAeqC,UAAU,MAAMC,OAAK,EAAnD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAAMsN,EAAWM,EAAK1I,gBAhC1CpE,GAuCT,SCtDOuN,MAdf,YAAkF,IAA3DlB,EAA0D,EAA1DA,MAAOmB,EAAmD,EAAnDA,cAAeb,EAAoC,EAApCA,UAAWc,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAEhE,OAAO,YAAIrB,GAAOlG,QAAO,SAAA2G,GAAI,MAAkB,SAAdA,EAAKhN,QAAiB8C,OAAS,GAAK8K,EACjE,wBACIzO,UAAU,oBACVC,QAASsO,EACTL,WAAY,SAACrG,GAAD,OAAO6F,EAAU7F,IAC7BoG,OAAQ,SAACpG,GAAD,OAAO2G,EAAW1L,KAAKC,MAAM8E,EAAE6G,aAAaC,QAAQ,SAASxJ,KAJzE,yBAQA,MC4DOyJ,MAlEf,YAAsH,IAAvGxB,EAAsG,EAAtGA,MAAOoB,EAA+F,EAA/FA,WAAYnB,EAAmF,EAAnFA,WAAYgB,EAAuE,EAAvEA,SAAUb,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,qBAAsBC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,cAAgB,EACzFrM,mBAAS,CAC7B6D,GAAI,KACJiD,MAAO,GACPvH,KAAM,OACNyL,MAAO,KALsG,mBAC1GL,EAD0G,KACpG2B,EADoG,KAkBjH,OAAG3B,EAAK9G,GACG,cAAC,EAAD,CAAU8G,KAAMA,EAAMrE,SAXZ,SAAAQ,GACjBiF,EAAWpB,EAAK9G,GAAIiD,GACpBwF,EAAQ,CACJzI,GAAI,KACJiD,MAAO,GACPvH,KAAM,OACNyL,MAAO,QAQRc,EAAMtM,KAAI,SAAC+M,EAAM9M,GAAP,MAA+B,SAAd8M,EAAKhN,KACnC,sBAAKb,UAAW6N,EAAKvB,MAEjBwB,WAAW,EACXC,YAAa,SAAClG,GAAD,OAAO2F,EAAW3F,EAAG/E,KAAKuE,UAAUwG,KACjDG,UAAW,kBAAML,GAAc,IAC/BM,OAAQ,SAACpG,GAAD,OAAO4F,EAAqB5F,EAAGgG,IACvCK,WAAY,SAACrG,GAAD,OAAO6F,EAAU7F,IAC7BsG,cAAe,kBAAMP,EAAQ,CAAEzI,GAAI0I,EAAK1I,GAAIiD,MAAOyF,EAAKtN,KAAMM,KAAM,OAAQyL,MAAMuB,EAAKvB,SAP3F,UASI,8BACKuB,EAAKtN,MADAsN,EAAK1I,IAGf,sBAAKnF,UAAU,QAAf,UACI,cAACiG,EAAA,EAAD,CAASpC,MAAM,YAAYqC,UAAU,MAAMC,OAAK,EAAhD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAAM2N,EAAQ,CAAEzI,GAAI0I,EAAK1I,GAAIiD,MAAOyF,EAAKtN,KAAMM,KAAM,OAAQyL,MAAMuB,EAAKvB,SACjFtM,UAAU,kBAKtB,cAACiG,EAAA,EAAD,CAASpC,MAAM,kBAAkBqC,UAAU,MAAMC,OAAK,EAAtD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAAMoO,EAASR,EAAK1I,WAKzC,cAACc,EAAA,EAAD,CAASpC,MAAM,eAAeqC,UAAU,MAAMC,OAAK,EAAnD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAAMuO,EAAWX,EAAK1I,gBAhC1CpE,GAuCT,SC6KO8N,MA1Of,WAAqB,IAAD,EACUvN,mBAAUiF,aAAaC,QAAQ,cAAgB1D,KAAKC,MAAMwD,aAAaC,QAAQ,eAAiB,IAD1G,mBACT4G,EADS,KACF0B,EADE,OAEoBxN,oBAAS,GAF7B,mBAETmN,EAFS,KAEGd,EAFH,KAGRlM,EAAoBC,cAApBD,gBAERc,qBAAU,WAENgE,aAAaa,QAAQ,aAActE,KAAKuE,UAAU+F,MACnD,CAACA,IAIJ7K,qBAAU,WACN,GAA8C,OAA3CgE,aAAaC,QAAQ,kBAA2B,CAE/C,IAAM4F,EAAmB,CACrB,gBACA,kBACA,gBACA,kBACA,eACA,kBAEA2C,EAAW,GACXC,EAAW,GAEf5B,EAAMtM,KAAI,SAAA+M,GAEFmB,EADDnB,EAAKoB,SACO,OAENpB,EAAKqB,MACC,QAGA,OAGf,IAAI7B,EAAa,CACblI,GAAI0I,EAAK1I,GACT5E,KAAMsN,EAAKtN,KACXM,KAAMmO,EACN1C,MAAOF,EAAiBrI,KAAKC,MAAMD,KAAKE,SAAWmI,EAAiBzI,UAExEoL,EAASrL,KAAK2J,MAGlByB,EAASC,GACTxI,aAAaa,QAAQ,iBAAkB,SAE5C,IAGH,IAUMiG,EAAa,SAAC8B,EAAQC,GACpBA,EAAS7O,OAAQ,QAAQ8O,KAAKD,EAAS7O,OAI3CuO,GAAS,SAAAQ,GAAI,OAAIA,EAAKxO,KAAI,SAAAyO,GAAI,OAAKA,EAAKpK,KAAOgK,EAASC,EAAWG,SAIjEf,EAAa,SAAArJ,GACf,IAAM8B,EAAY,YAAImG,GAAOlG,QAAO,SAAA2G,GAAI,OAAIA,EAAK1I,KAAOA,KAGxD2J,GAAS,SAAAU,GACL,OAAOV,EAAS7H,OAKlBoH,EAAW,SAAAlJ,GACb,IAAIsK,EAAerC,EAAMtM,KAAI,SAAA+M,GAIzB,OAHGA,EAAK1I,KAAOA,IACX0I,EAAKhN,KAAO,QAETgN,KAEXiB,EAASW,IAIPnC,EAAc,SAAAnI,GAChB,IAAIsK,EAAerC,EAAMtM,KAAI,SAAA+M,GAIzB,OAHGA,EAAK1I,KAAOA,IACX0I,EAAKhN,KAAO,SAETgN,KAEXiB,EAASW,IAIPlC,EAAa,SAAApI,GACf,IAAIsK,EAAerC,EAAMtM,KAAI,SAAA+M,GAIzB,OAHGA,EAAK1I,KAAOA,IACX0I,EAAKhN,KAAO,QAETgN,KAEXpM,EAAgB,kCAAmC,CAC/C6B,QAAS,YAEbwL,EAASW,IAUPjC,EAAa,SAAC3F,EAAGgG,GACnBhG,EAAE6G,aAAa3E,QAAQ,OAAQ8D,GAC/BF,GAAc,IAyBZF,EAAuB,SAAC5F,EAAG6H,GAC7B,IAAIC,EAAa7M,KAAKC,MAAM8E,EAAE6G,aAAaC,QAAQ,SACnDgB,EAAW9O,KAAO6O,EAAO7O,KAEzB,IACI+O,EADEb,EAAW,GAEjB,IAAIa,EAAI,EAAGA,EAAIxC,EAAMzJ,OAAQiM,IAEtBxC,EAAMwC,GAAGzK,KAAOwK,EAAWxK,IAC1B4J,EAASrL,KAAK0J,EAAMwC,IAErBxC,EAAMwC,GAAGzK,KAAOuK,EAAOvK,IACtB4J,EAASrL,KAAKiM,GAGtBhC,GAAc,GAEdmB,GAAS,SAAAQ,GACL,OAAOR,EAASC,OAKlBrB,EAAY,SAAC7F,GACfA,EAAEC,kBAIN,OACI,qCACA,sBAAK9H,UAAU,WAAWiO,OAAQ,SAACpG,GAAD,OAnDf,SAAAA,GACnB,IAAI1C,EAAKrC,KAAKC,MAAM8E,EAAE6G,aAAaC,QAAQ,SAASxJ,GACpDkJ,EAASlJ,GACTwI,GAAc,GAgD2BkC,CAAehI,IAAIqG,WAAY,SAACrG,GAAD,OAAO6F,EAAU7F,IAAzF,UACI,yCACA,cAAC,EAAD,CAAUD,SAlIF,SAAAiG,GACZ,GAAIA,EAAKtN,OAAQ,QAAQ8O,KAAKxB,EAAKtN,MAAnC,CAIA,IAAMwO,EAAQ,CAAIlB,GAAJ,mBAAaT,IAC3B0B,EAASC,KA4HwB9C,KAAM,CAACK,MAAO,iBAAkBwD,SAAS,IACtE,cAAC,EAAD,CACI1C,MAAOA,EACPC,WAAYA,EACZC,YAAaA,EACbC,WAAYA,EACZC,WAAYA,EACZC,qBAAsBA,EACtBC,UAAWA,EACXC,cAAeA,OAIvB,sBAAK3N,UAAU,WAAWiO,OAAQ,SAACpG,GAAD,OA3Dd,SAAAA,GACpB,IAAI1C,EAAKrC,KAAKC,MAAM8E,EAAE6G,aAAaC,QAAQ,SAASxJ,GACpDmI,EAAanI,GACbwI,GAAc,GAwD2BoC,CAAgBlI,IAAIqG,WAAY,SAACrG,GAAD,OAAO6F,EAAU7F,IAA1F,UACI,4CACA,cAAC,EAAD,CACIuF,MAAOA,EACPC,WAAYA,EACZgB,SAAUA,EACVd,WAAYA,EACZC,WAAYA,EACZC,qBAAsBA,EACtBC,UAAWA,EACXC,cAAeA,OAIvB,sBAAK3N,UAAU,yBAAyBiO,OAAQ,SAACpG,GAAD,OAlE7B,SAAAA,GACnB,IAAI1C,EAAKrC,KAAKC,MAAM8E,EAAE6G,aAAaC,QAAQ,SAASxJ,GACpDoI,EAAYpI,GACZwI,GAAc,GA+DyCqC,CAAenI,IAAIqG,WAAY,SAACrG,GAAD,OAAO6F,EAAU7F,IAAvG,UACI,0CACA,cAAC,EAAD,CACIuF,MAAOA,EACPoB,WAAYA,EACZnB,WAAYA,EACZgB,SAAUA,EACVb,WAAYA,EACZC,qBAAsBA,EACtBC,UAAWA,EACXC,cAAeA,IAEnB,cAAC,EAAD,CACIP,MAAOA,EACPmB,cA1GU,WAClB,IAAIkB,EAAe,YAAIrC,GAAOlG,QAAO,SAAA2G,GAAI,MAAkB,SAAdA,EAAKhN,QAClDiO,EAASW,IAyGD/B,UAAWA,EACXc,WAAYA,EACZC,WAAYA,WCnNbwB,OAnBf,WAOE,OALArM,SAASC,MAAQ,2BACjBtB,qBAAU,WACRnC,OAAOoC,SAAS,EAAG,KAClB,IAGD,mCACA,sBAAKxC,UAAU,sBAAf,UACE,cAAC,IAAD,CAAMgF,GAAG,iBAAT,SACE,6CAEF,cAAC,EAAD,U,4BC8ISkL,OA7Jf,YAAoD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,WAAYC,EAAS,EAATA,OAetC/N,qBAAU,WACN,IAAMgO,EAbV,SAAkBC,EAAIC,GAAK,IACnBC,EADkB,mBAEtB,OAAO,SAAAC,GACHC,aAAaF,GACbA,EAAQG,YAAW,SAAAF,GACfD,EAAQ,KACRF,EAAGM,MAAM,EAAMC,KAChBN,IAMuBO,EAAS,WACnCX,GAAW,KACZ,KAEHjQ,OAAO6Q,iBAAiB,SAAUV,MAItChO,qBAAU,WACNsO,YAAW,kBAAMR,GAAW,KAAQ,OACrC,CAACD,IAGJ,IAAMc,EAAa,SAACC,EAAKC,GAAN,OACfD,EAAIrQ,KAAI,SAACuQ,EAAMC,GACX,OAAY,IAATD,EACIA,IAASf,EAGJ,qBAAKtQ,UAAW,kBAAoBoR,EAAS1I,WAAa,IAAM4I,EAAU5I,WAAa,YAAvF,SAEK2I,GAFoG,IAAMD,EAAS1I,WAAa,IAAM4I,EAAU5I,YAQrJ,qBAAK1I,UAAW,kBAAoBoR,EAAS1I,WAAa,IAAM4I,EAAU5I,WAA1E,SAEK2I,GAFsF,IAAMD,EAAS1I,WAAa,IAAM4I,EAAU5I,YAS3I,qBAAK1I,UAAW,kBAAoBoR,EAAS1I,WAAa,IAAM4I,EAAU5I,WAAa,gBAAqB,IAAM0I,EAAS1I,WAAa,IAAM4I,EAAU5I,gBA8FxK,OACI,qBAAK1I,UAAU,iBAAf,SACI,sBAAKA,UAAU,gBAAf,UAvFGmQ,EAAKrP,KAAI,SAACqQ,EAAKC,GAAN,OACZ,qBAAKpR,UAAU,OAAf,SACKkR,EAAWC,EAAKC,IADM,IAAMA,EAAS1I,eAwFrC0H,EAAU,KA9EfD,EAAKrP,KAAI,SAACqQ,EAAKC,GACX,OACID,EAAIrQ,KAAI,SAACuQ,EAAMC,GACX,GAAY,IAATD,GAAcD,EAAWjB,EAAKxM,OAAS,EAAE,CAGxC,IAAI4N,EAAYD,EACZE,EAAaF,EAAYvN,KAAK0N,IAAI,EAAGtB,EAAKxM,OAAOyN,EAAS,GAI9D,GAAmC,IAAhCjB,EAAKiB,EAAS,GAAGG,IAAqD,IAAjCpB,EAAKiB,EAAS,GAAGI,GACrD,OACI,qCACA,cAAC,KAAD,CACIE,KAAM,IAAKN,EAAU1I,WAAa,IAAM4I,EAAU5I,WAClD1D,GAAI,KAAKoM,EAAS,GAAG1I,WAAa,IAAM6I,EAAU7I,WAClDiJ,QApBvB,EAqBuBC,YAAY,uBACZC,YAAa,GAGR,IAAKT,EAAU1I,WAAW,IAAI4I,EAAU5I,WAAW,KAAK0I,EAAS,GAAG1I,WAAW,IAAI6I,EAAU7I,YAEtG,cAAC,KAAD,CACIgJ,KAAM,IAAKN,EAAU1I,WAAa,IAAM4I,EAAU5I,WAClD1D,GAAI,KAAKoM,EAAS,GAAG1I,WAAa,IAAM8I,EAAW9I,WACnDiJ,QA9BvB,EA+BuBC,YAAY,uBACZC,YAAa,GAGR,IAAKT,EAAU1I,WAAW,IAAI4I,EAAU5I,WAAW,KAAK0I,EAAS,GAAG1I,WAAW,IAAI8I,EAAW9I,eAK1G,GAAmC,IAAhCyH,EAAKiB,EAAS,GAAGG,GACrB,OACI,cAAC,KAAD,CACIG,KAAM,IAAKN,EAAU1I,WAAa,IAAM4I,EAAU5I,WAClD1D,GAAI,KAAKoM,EAAS,GAAG1I,WAAa,IAAM6I,EAAU7I,WAClDiJ,QA7CvB,EA8CuBC,YAAY,uBACZC,YAAa,GAGR,IAAKT,EAAU1I,WAAW,IAAI4I,EAAU5I,WAAW,KAAK0I,EAAS,GAAG1I,WAAW,IAAI6I,EAAU7I,YAIzG,GAAoC,IAAjCyH,EAAKiB,EAAS,GAAGI,GACrB,OACI,cAAC,KAAD,CACIE,KAAM,IAAKN,EAAU1I,WAAa,IAAM4I,EAAU5I,WAClD1D,GAAI,KAAKoM,EAAS,GAAG1I,WAAa,IAAM8I,EAAW9I,WACnDiJ,QA3DvB,EA4DuBC,YAAY,uBACZC,YAAa,GAGR,IAAKT,EAAU1I,WAAW,IAAI4I,EAAU5I,WAAW,KAAK0I,EAAS,GAAG1I,WAAW,IAAI8I,EAAW9I,yB,SCxIrIoJ,GACF,WAAY9O,GACX,oBACGsG,KAAKtG,KAAOA,EACZsG,KAAKyI,KAAO,KACZzI,KAAK0I,MAAQ,MAKRC,GAAb,WACI,WAAYC,GAAO,oBACf5I,KAAK6I,KAAOD,EACZ5I,KAAK8I,UAAY,GAHzB,yDAQQ9I,KAAK6I,KAAO,OARpB,oCAaQ,OAAO7I,KAAK6I,OAbpB,iCAiBenP,GACP,IAAIqP,EAAU,IAAIP,GAAK9O,GAWvB,OAVAsG,KAAK8I,UAAY,GAEA,OAAd9I,KAAK6I,WAA+BtH,IAAdvB,KAAK6I,KAC1B7I,KAAK6I,KAAOE,EAGZ/I,KAAKgJ,gBAAgBhJ,KAAK6I,KAAME,GAGpC/I,KAAK8I,UAAU1O,KAAKV,GACbsG,KAAK8I,YA7BpB,sCAiCoBG,EAAMF,GAClB/I,KAAK8I,UAAU1O,KAAK6O,EAAKvP,MAEtBqP,EAAQrP,KAAOuP,EAAKvP,KACF,OAAduP,EAAKR,WAA+BlH,IAAd0H,EAAKR,KAC1BQ,EAAKR,KAAOM,EAGZ/I,KAAKgJ,gBAAgBC,EAAKR,KAAMM,GAIlB,OAAfE,EAAKP,YAAgCnH,IAAd0H,EAAKR,KAC3BQ,EAAKP,MAAQK,EAGb/I,KAAKgJ,gBAAgBC,EAAKP,MAAMK,KAjDhD,2CAuDyBE,GAEjB,IADA,IAAIC,EAAWD,EAAKvP,KACD,MAAbuP,EAAKR,MACPS,EAAWD,EAAKR,KAAK/O,KACrBuP,EAAOA,EAAKR,KAEhB,OAAOS,IA7Df,iCAiEexP,GACPsG,KAAK6I,KAAO7I,KAAKmJ,gBAAgBnJ,KAAK6I,KAAMnP,KAlEpD,sCAsEoBuP,EAAMvP,GAClB,GAAa,OAATuP,EACA,OAAOA,EAEX,GAAGvP,EAAOuP,EAAKvP,KACXuP,EAAKR,KAAOzI,KAAKmJ,gBAAgBF,EAAKR,KAAM/O,QAE3C,GAAGA,EAAOuP,EAAKvP,KAChBuP,EAAKP,MAAQ1I,KAAKmJ,gBAAgBF,EAAKP,MAAOhP,OAE9C,CACA,GAAiB,OAAduP,EAAKR,KACJ,OAAOQ,EAAKP,MAEX,GAAkB,OAAfO,EAAKP,MACT,OAAOO,EAAKR,KAGZQ,EAAKvP,KAAOsG,KAAKoJ,qBAAqBH,EAAKP,OAC3CO,EAAKP,MAAQ1I,KAAKmJ,gBAAgBF,EAAKP,MAAOO,EAAKvP,MAI3D,OAAOuP,IA7Ff,+BAiGaA,GACL,GAAY,OAATA,QAA0B1H,IAAT0H,EAChB,MAAO,GAGX,IAAII,EAAW,CAAC,CAACJ,IACbK,EAAa,CAAC,CAACL,EAAKvP,OAElB6P,EAAavJ,KAAKuJ,WAAWN,GAC/B3C,EAAI,EAAGkD,EAAI,EAEf,IAAIlD,EAAI,EAAGA,EAAIiD,EAAYjD,IAAI,CAC3B,IAAImD,EAAU,GACVC,EAAW,GACf,IAAIF,EAAI,EAAGA,EAAI/O,KAAK0N,IAAI,EAAG7B,GAAIkD,IACL,OAAnBH,EAAS/C,GAAGkD,SAAkCjI,IAAnB8H,EAAS/C,GAAGkD,IACtCC,EAAQrP,KAAK,MACbqP,EAAQrP,KAAK,MAEbsP,EAAStP,KAAK,GACdsP,EAAStP,KAAK,KAGdqP,EAAQrP,KAAKiP,EAAS/C,GAAGkD,GAAGf,MAC5BgB,EAAQrP,KAAKiP,EAAS/C,GAAGkD,GAAGd,OAE5BgB,EAAStP,KAAKiP,EAAS/C,GAAGkD,GAAGf,KAAOY,EAAS/C,GAAGkD,GAAGf,KAAK/O,KAAO,GAC/DgQ,EAAStP,KAAKiP,EAAS/C,GAAGkD,GAAGd,MAAQW,EAAS/C,GAAGkD,GAAGd,MAAMhP,KAAO,IAGzE2P,EAASjP,KAAKqP,GACdH,EAAWlP,KAAKsP,GAIpB,OAAOJ,IApIf,iCAwIeL,GACP,GAAY,MAARA,EACA,OAAQ,EAGR,IAAIU,EAAS3J,KAAKuJ,WAAWN,EAAKR,MAC9BmB,EAAS5J,KAAKuJ,WAAWN,EAAKP,OAElC,OAAIiB,EAASC,EACDD,EAAS,EAETC,EAAS,MAnJjC,KCiOeC,OAnOf,WAAgB,IAAD,EAEa7R,mBAAS,IAFtB,mBAEJ6O,EAFI,KAEEiD,EAFF,OAGmB9R,oBAAS,GAH5B,mBAGJ8O,EAHI,KAGKC,EAHL,OAIe/O,mBAAS,IAJxB,mBAIJ4K,EAJI,KAIGC,EAJH,KAKJ1K,EAAmBC,cAAnBD,gBALI,EAMiBH,oBAAU,GAN3B,mBAMJgP,EANI,KAMI+C,EANJ,OAO+B/R,oBAAS,GAPxC,mBAOJgS,EAPI,KAOWC,EAPX,OAQYjS,mBAAS,IAAI2Q,GAAkB1L,aAAaC,QAAQ,WAAa1D,KAAKC,MAAMwD,aAAaC,QAAQ,YAAc,OAR3H,mBAQJ2M,EARI,aASyB7R,mBAAS6R,EAAIK,SAASL,EAAIM,iBATnD,mBASJC,EATI,KASQC,EATR,KAWXpR,qBAAU,WACNqR,IACArN,aAAaa,QAAQ,UAAWtE,KAAKuE,UAAU8L,EAAIM,kBACpD,CAACC,IAGJ,IAAME,EAAiB,WACnB,IAAIhE,EAAGkD,EAAGe,EACNC,EAAS,GACPC,EAASZ,EAAIN,WAAWM,EAAIM,eAAiB,EAEnD,IAAI7D,EAAI,EAAGA,EAAImE,EAAQnE,IAAK,CACxB,IAAIoE,EAAoBjQ,KAAK0N,IAAI,EAAGsC,EAAOnE,GAAK,EAC5CqE,EAAW,GACf,IAAInB,EAAI,EAAGA,EAAIY,EAAW9D,GAAGjM,OAAQmP,IAEjC,GADAmB,EAASvQ,KAAKgQ,EAAW9D,GAAGkD,IACzBA,EAAIY,EAAW9D,GAAGjM,OAAS,EAC1B,IAAIkQ,EAAI,EAAGA,EAAIG,EAAmBH,IAC9BI,EAASvQ,KAAK,GAI1BoQ,EAAOpQ,KAAKuQ,GAEhBb,EAAQU,IAGNI,EAAO,SAACC,GAAD,2BAAWC,EAAX,iCAAWA,EAAX,yBAAoB,IAAIC,SAAQ,SAAAC,GAAO,OAAIzD,WAAU,WAAV,GAAWyD,EAASH,GAApB,OAA8BC,QAClFG,EAAgB,EACdC,EAAe,uCAAG,WAAMC,GAAN,SAAAjF,EAAA,sEACd0E,EAAK,KADS,UAEpBb,EAAUoB,EAAQF,QAClBA,EACoBE,EAAQ9Q,QAJR,gCAKV6Q,EAAgBC,GALN,2CAAH,sDAUfC,EAAiB,SAAC1R,GACpB,IAAI4M,EAAGkD,EACP,IAAIlD,EAAI,EAAGA,EAAI8D,EAAW/P,OAAQiM,IAC9B,IAAIkD,EAAI,EAAGA,EAAIY,EAAW9D,GAAGjM,OAAQmP,IACjC,GAAGY,EAAW9D,GAAGkD,KAAO9P,EACpB,OAAO,EAInB,OAAO,GA3DA,4CA+DX,WAA4BA,GAA5B,eAAAwM,EAAA,0DACOkF,EAAe1R,GADtB,uBAEQvB,EAAgBuB,EAAM,yBAA0B,CAC5CM,QAAS,UAHrB,8BAQQqR,EAAYxB,EAAIyB,WAAW5R,IACrBU,KAAK4M,GACfqD,EAAcR,EAAIK,SAASL,EAAIM,gBAC/BhS,EAAgBuB,EAAO,gCAAiC,CACpDM,QAAS,aAEVgQ,EAdP,kCAeckB,EAAgBG,GAf9B,6CA/DW,sBAoFX,IAqCME,EAAe,SAAChN,GAClBA,EAAEC,iBACF,IAvCoB9E,EAuChB8R,EAAYjN,EAAES,OAAOF,MAEzB,MAAiB,gBAAd0M,GACCzB,GAAW,GACXlH,EAAS,SACTkE,GAAW,IAIE,cAAdyE,GACC3B,EAAI4B,aACJpB,EAAcR,EAAIK,SAASL,EAAIM,qBAC/BpD,GAAW,IAID,KAAXnE,GAAiBA,GAAS,GACzBzK,EAAgB,mBAAoB,CAChC6B,QAAS,eAEb6I,EAAS,UAGI,WAAd2I,IAlJI,oCAmJHE,CAAaC,SAAS/I,IACtBC,EAAS,IACTkE,GAAW,IAEO,WAAdyE,GAnEY9R,EAoEDiS,SAAS/I,GAnExBwI,EAAe1R,IAOnBmQ,EAAI+B,WAAWlS,GACf2Q,EAAcR,EAAIK,SAASL,EAAIM,gBAE/BhS,EAAgBuB,EAAO,oCAAqC,CACxDM,QAAS,aAVT7B,EAAgBuB,EAAO,gBAAiB,CACpCM,QAAS,UAkEb6I,EAAS,IACTkE,GAAW,IAEO,WAAdyE,KAvDS,SAAC9R,GAClB,IAAI4M,EAAGkD,EACP,IAAIlD,EAAI,EAAGA,EAAI8D,EAAW/P,OAAQiM,IAC9B,IAAIkD,EAAI,EAAGA,EAAIY,EAAW9D,GAAGjM,OAAQmP,IACjC,GAAGY,EAAW9D,GAAGkD,KAAO9P,EAKpB,OAJAqQ,EAAUrQ,QACVvB,EAAgBuB,EAAO,gCAAiC,CACpDM,QAAS,YAOzB7B,EAAgBuB,EAAO,gBAAiB,CACpCM,QAAS,UAyCT6R,CAAaF,SAAS/I,IACtBC,EAAS,IACTkE,GAAW,MAWnB,OACI,sBAAKrQ,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,uBACImF,GAAG,YACHhB,KAAK,SACLgE,YAAY,OACZC,MAAO8D,EACPlM,UAAU,kBACVqI,SAdK,SAAAR,GACjBsE,EAAStE,EAAES,OAAOF,UAeV,wBAAQnI,QAAS4U,EAAc7U,UAAU,mBAAmBoI,MAAM,SAAlE,oBACA,wBAAQnI,QAAS4U,EAAc7U,UAAU,mBAAmBoI,MAAM,SAAlE,oBACA,wBAAQnI,QAAS4U,EAAc7U,UAAU,mBAAmBoI,MAAM,SAAlE,oBAEA,wBACInI,QAAS4U,EACT7U,UAAU,kBACV+B,MAAO,CAACqT,WAAW,QACnBhN,MAAM,cAJV,0BAOA,wBACInI,QAAS4U,EACT7U,UAAU,kBACVoI,MAAM,YAHV,wBAOA,+BAAM,cAACnC,EAAA,EAAD,CAASpC,MAAM,iBAAiBqC,UAAU,SAASC,OAAK,EAAxD,SACF,wBAAOnG,UAAU,SAAjB,UACI,uBAAOmE,KAAK,WAAWkR,QAAS/B,EAAejL,SAAU,WAAOkL,GAAkBD,MAClF,sBAAMtT,UAAU,wBAGxB,cAACiG,EAAA,EAAD,CAASpC,MAAM,gBAAgBqC,UAAU,SAASC,OAAK,EAAvD,SACI,+BACI,wBAAQlG,QAAS,WAAOoQ,GAAW,IAAQrQ,UAAU,kBAArD,SACI,cAAC,KAAD,CAAkB+B,MAAO,CAACuT,SAAS,gBAI/C,cAACrP,EAAA,EAAD,CAASpC,MAAM,cAAcqC,UAAU,SAASC,OAAK,EAArD,SACI,+BACI,wBAAQlG,QAAS,WAAOG,OAAOC,SAASC,KAAO,6DAA8DN,UAAU,kBAAvH,SACI,cAAC,IAAD,CAAQ+B,MAAO,CAACuT,SAAS,mBAOzC,cAAC,GAAD,CAAMnF,KAAMA,EAAMC,QAASA,EAASC,WAAYA,EAAYC,OAAQA,QC7KjEiF,OAlDf,WAAmB,IAAD,EAC6B7T,cAAnCD,EADM,EACNA,gBAAiB2I,EADX,EACWA,cACzBxG,SAASC,MAAQ,mCAEjB,IAKMlC,EAAS,SAAAC,GAAG,OACd,cAAC,IAAMC,SAAP,UACI,qCACA,qBAAK5B,QAAS,YARG,SAAC2B,GACtB2E,aAAaa,QAAQ,qBAAqB,GAC1CgD,EAAcxI,GAMYyI,CAAiBzI,IAAQG,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,UAAWC,aAAa,MAAOC,eAAe,YAAaC,WAAW,UAA9L,6BAGA,qBAAKrC,QAAS,WAAQmK,EAAcxI,IAAQG,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,UAAWE,eAAe,YAAaC,WAAW,UAAvK,2BAiBR,OAVAC,qBAAU,WACFgE,aAAaC,QAAQ,sBACrB/E,EAAgB,yDAA0D,CACtE6B,QAAS,UACTsH,iBAAkB,IAClBjJ,aAGT,IAGC,gCACI,cAAC+F,EAAA,EAAD,UACI,0PAUJ,cAAC,GAAD,QCqNG8N,OAjQf,WAAoB,IAAD,EACqBlU,mBAASiF,aAAaC,QAAQ,WAAa1D,KAAKC,MAAMwD,aAAaC,QAAQ,YAAc,IAD9G,mBACRkN,EADQ,KACIC,EADJ,OAESrS,mBAAS,IAFlB,mBAER6O,EAFQ,KAEFiD,EAFE,OAGe9R,oBAAS,GAHxB,mBAGR8O,EAHQ,KAGCC,EAHD,OAIW/O,mBAAS,IAJpB,mBAIR4K,EAJQ,KAIDC,EAJC,KAKP1K,EAAoBC,cAApBD,gBALO,EAMaH,oBAAU,GANvB,mBAMRgP,EANQ,KAMA+C,EANA,KASf9Q,qBAAU,WACNqR,IACArN,aAAaa,QAAQ,UAAWtE,KAAKuE,UAAUqM,MAChD,CAACA,IAGJ,IAAME,EAAiB,WACnB,IAAIhE,EAAGkD,EAAGe,EACNC,EAAS,GACPC,EAASkB,SAASlR,KAAK0R,KAAK/B,EAAW/P,SAAW,EAExD,IAAIiM,EAAI,EAAGA,EAAImE,EAAQnE,IAAK,CACxB,IAAIoE,EAAoBjQ,KAAK0N,IAAI,EAAGsC,EAAOnE,GAAK,EAC5CqE,EAAW,GAEf,IAAInB,EAAI,EAAGA,EAAI/O,KAAK0N,IAAI,EAAG7B,GAAIkD,IAAK,CAChC,IAAI4C,EAAU3R,KAAK0N,IAAI,EAAG7B,GAAK,EAAIkD,EAQnC,GAPG4C,EAAUhC,EAAW/P,OACpBsQ,EAASvQ,KAAKgQ,EAAWgC,IAGzBzB,EAASvQ,KAAK,GAGfoP,IAAM/O,KAAK0N,IAAI,EAAG7B,GAAK,EACtB,IAAIiE,EAAI,EAAGA,EAAIG,EAAmBH,IAC9BI,EAASvQ,KAAK,GAI1BoQ,EAAOpQ,KAAKuQ,GAEhBb,EAAQU,IAmHNe,EAAe,SAAChN,GAClBA,EAAEC,iBACF,IAAIgN,EAAYjN,EAAES,OAAOF,MAEzB,MAAiB,gBAAd0M,GACCzB,GAAW,GACXlH,EAAS,SACTkE,GAAW,IAIE,cAAdyE,GACCnB,EAAc,SACdtD,GAAW,IAIE,WAAdyE,GAtGgB,WACnB,GAAyB,IAAtBpB,EAAW/P,OAAd,CAOA,IACoC0H,EAI5BkG,EAAWC,EALfmE,EAAO,YAAOjC,GACdkC,EAAUD,EAAQjL,MAAOkF,EAAI,EAEjC,GAAG+F,EAAQhS,OAAS,EAIhB,IAHAgS,EAAQ/F,GAAKgG,EAKTpE,EAAe,EAAF5B,EAAM,KADnB2B,EAAc,EAAF3B,EAAM,IAGF+F,EAAQhS,SAJjB,CAOF,GAAG6N,GAAcmE,EAAQhS,OAAO,CAC9BgS,EAAQpE,GAAaoE,EAAQ/F,KAC5BvE,EAAOsK,EAAQ/F,GACf+F,EAAQ/F,GAAK+F,EAAQpE,GACrBoE,EAAQpE,GAAalG,GAEzB,MAGA,GAAGsK,EAAQpE,IAAcoE,EAAQnE,GAAY,CACzC,KAAGmE,EAAQpE,GAAaoE,EAAQ/F,IAQ5B,MAPAvE,EAAOsK,EAAQ/F,GACf+F,EAAQ/F,GAAK+F,EAAQpE,GACrBoE,EAAQpE,GAAalG,EAErBuE,EAAI2B,MAMR,CACA,KAAGoE,EAAQnE,GAAcmE,EAAQ/F,IAQ7B,MAPAvE,EAAOsK,EAAQ/F,GACf+F,EAAQ/F,GAAK+F,EAAQnE,GACrBmE,EAAQnE,GAAcnG,EAEtBuE,EAAI4B,GAUxBmC,EAAcgC,GACdlU,EAAgB,kCAAmC,CAC/C6B,QAAS,iBA3DT7B,EAAgB,oBAAqB,CACjC6B,QAAS,UAoGbuS,QACAxF,GAAW,IAID,KAAXnE,GAAiBA,GAAS,GACzBzK,EAAgB,mBAAoB,CAChC6B,QAAS,eAEb6I,EAAS,UAII,WAAd2I,IA9Ic,SAAC9R,GAClB,IACwB8S,EAAUzK,EAD9BsK,EAAO,YAAOjC,GACd9D,EAAI+F,EAAQhS,OAGhB,IAFAgS,EAAQjS,KAAKV,GAED,IAAN4M,IACFkG,EAAWb,UAAUrF,EAAE,GAAG,GACvB+F,EAAQ/F,GAAK+F,EAAQG,KACpBzK,EAAOsK,EAAQ/F,GACf+F,EAAQ/F,GAAK+F,EAAQG,GACrBH,EAAQG,GAAYzK,EACpBuE,EAAIkG,EAOZnC,EAAcgC,GACdlU,EAAgBuB,EAAO,gCAAiC,CACpDM,QAAS,YA2HT0R,CAAaC,SAAS/I,IACtBC,EAAS,IACTkE,GAAW,IAEO,WAAdyE,KAtDS,SAAC9R,GAClB,IAAI4M,EACJ,IAAIA,EAAI,EAAGA,EAAI8D,EAAW/P,OAAQiM,IAC9B,GAAG8D,EAAW9D,KAAO5M,EAKjB,OAJAqQ,EAAUrQ,QACVvB,EAAgBuB,EAAO,gCAAiC,CACpDM,QAAS,YAMrB7B,EAAgBuB,EAAO,gBAAiB,CACpCM,QAAS,UA0CT6R,CAAaF,SAAS/I,IACtBC,EAAS,IACTkE,GAAW,MAUnB,OACI,sBAAKrQ,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,wBAAQA,UAAU,kBAAkB+B,MAAO,CAACgU,YAAY,QAAxD,sBACA,uBACI5Q,GAAG,YACHhB,KAAK,SACLgE,YAAY,OACZC,MAAO8D,EACPlM,UAAU,kBACVqI,SAfK,SAAAR,GACjBsE,EAAStE,EAAES,OAAOF,UAgBV,wBAAQnI,QAAS4U,EAAc7U,UAAU,mBAAmBoI,MAAM,SAAlE,oBACA,wBAAQnI,QAAS4U,EAAc7U,UAAU,mBAAmBoI,MAAM,SAAlE,oBACA,wBAAQnI,QAAS4U,EAAc7U,UAAU,mBAAmB+B,MAAO,CAACqT,WAAW,QAAUhN,MAAM,SAA/F,yBAGA,wBACInI,QAAS4U,EACT7U,UAAU,kBACV+B,MAAO,CAACqT,WAAW,QACnBhN,MAAM,cAJV,0BAOA,wBACInI,QAAS4U,EACT7U,UAAU,kBACVoI,MAAM,YAHV,wBAMA,cAACnC,EAAA,EAAD,CAASpC,MAAM,gBAAgBqC,UAAU,SAASC,OAAK,EAAvD,SACI,+BACI,wBAAQlG,QAAS,WAAOoQ,GAAW,IAAQrQ,UAAU,kBAArD,SACI,cAAC,KAAD,CAAkB+B,MAAO,CAACuT,SAAS,gBAI/C,cAACrP,EAAA,EAAD,CAASpC,MAAM,cAAcqC,UAAU,SAASC,OAAK,EAArD,SACI,+BACI,wBAAQlG,QAAS,WAAOG,OAAOC,SAASC,KAAO,sDAAuDN,UAAU,kBAAhH,SACI,cAAC,IAAD,CAAQ+B,MAAO,CAACuT,SAAS,mBAOzC,cAAC,GAAD,CAAMnF,KAAMA,EAAMC,QAASA,EAASC,WAAYA,EAAYC,OAAQA,QC3MjE0F,OAlDf,WAAuB,IAAD,EACyBtU,cAAnCD,EADU,EACVA,gBAAiB2I,EADP,EACOA,cACzBxG,SAASC,MAAQ,wCAEjB,IAKMlC,EAAS,SAAAC,GAAG,OACd,cAAC,IAAMC,SAAP,UACI,qCACA,qBAAK5B,QAAS,YARG,SAAC2B,GACtB2E,aAAaa,QAAQ,qBAAqB,GAC1CgD,EAAcxI,GAMYyI,CAAiBzI,IAAQG,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,UAAWC,aAAa,MAAOC,eAAe,YAAaC,WAAW,UAA9L,6BAGA,qBAAKrC,QAAS,WAAQmK,EAAcxI,IAAQG,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,UAAWE,eAAe,YAAaC,WAAW,UAAvK,2BAiBR,OAVAC,qBAAU,WACFgE,aAAaC,QAAQ,sBACrB/E,EAAgB,yDAA0D,CACtE6B,QAAS,UACTsH,iBAAkB,IAClBjJ,aAGT,IAGC,gCACI,cAAC+F,EAAA,EAAD,UACI,0PAUJ,cAAC,GAAD,QCoNGuO,OAhQf,WAAoB,IAAD,EACqB3U,mBAASiF,aAAaC,QAAQ,WAAa1D,KAAKC,MAAMwD,aAAaC,QAAQ,YAAc,IAD9G,mBACRkN,EADQ,KACIC,EADJ,OAESrS,mBAAS,IAFlB,mBAER6O,EAFQ,KAEFiD,EAFE,OAGe9R,oBAAS,GAHxB,mBAGR8O,EAHQ,KAGCC,EAHD,OAIW/O,mBAAS,IAJpB,mBAIR4K,EAJQ,KAIDC,EAJC,KAKP1K,EAAoBC,cAApBD,gBALO,EAMaH,oBAAU,GANvB,mBAMRgP,EANQ,KAMA+C,EANA,KASf9Q,qBAAU,WACNqR,IACArN,aAAaa,QAAQ,UAAWtE,KAAKuE,UAAUqM,MAChD,CAACA,IAGJ,IAAME,EAAiB,WACnB,IAAIhE,EAAGkD,EAAGe,EACNC,EAAS,GACPC,EAASkB,SAASlR,KAAK0R,KAAK/B,EAAW/P,SAAW,EAExD,IAAIiM,EAAI,EAAGA,EAAImE,EAAQnE,IAAK,CACxB,IAAIoE,EAAoBjQ,KAAK0N,IAAI,EAAGsC,EAAOnE,GAAK,EAC5CqE,EAAW,GAEf,IAAInB,EAAI,EAAGA,EAAI/O,KAAK0N,IAAI,EAAG7B,GAAIkD,IAAK,CAChC,IAAI4C,EAAU3R,KAAK0N,IAAI,EAAG7B,GAAK,EAAIkD,EAQnC,GAPG4C,EAAUhC,EAAW/P,OACpBsQ,EAASvQ,KAAKgQ,EAAWgC,IAGzBzB,EAASvQ,KAAK,GAGfoP,IAAM/O,KAAK0N,IAAI,EAAG7B,GAAK,EACtB,IAAIiE,EAAI,EAAGA,EAAIG,EAAmBH,IAC9BI,EAASvQ,KAAK,GAI1BoQ,EAAOpQ,KAAKuQ,GAEhBb,EAAQU,IAmHNe,EAAe,SAAChN,GAClBA,EAAEC,iBACF,IAAIgN,EAAYjN,EAAES,OAAOF,MAEzB,MAAiB,gBAAd0M,GACCzB,GAAW,GACXlH,EAAS,SACTkE,GAAW,IAIE,cAAdyE,GACCnB,EAAc,SACdtD,GAAW,IAIE,WAAdyE,GAtGgB,WACnB,GAAyB,IAAtBpB,EAAW/P,OAAd,CAOA,IACoC0H,EAI5BkG,EAAWC,EALfmE,EAAO,YAAOjC,GACdkC,EAAUD,EAAQjL,MAAOkF,EAAI,EAEjC,GAAG+F,EAAQhS,OAAS,EAIhB,IAHAgS,EAAQ/F,GAAKgG,EAKTpE,EAAe,EAAF5B,EAAM,KADnB2B,EAAc,EAAF3B,EAAM,IAGF+F,EAAQhS,SAJjB,CAOF,GAAG6N,GAAcmE,EAAQhS,OAAO,CAC9BgS,EAAQpE,GAAaoE,EAAQ/F,KAC5BvE,EAAOsK,EAAQ/F,GACf+F,EAAQ/F,GAAK+F,EAAQpE,GACrBoE,EAAQpE,GAAalG,GAEzB,MAGA,GAAGsK,EAAQpE,IAAcoE,EAAQnE,GAAY,CACzC,KAAGmE,EAAQpE,GAAaoE,EAAQ/F,IAQ5B,MAPAvE,EAAOsK,EAAQ/F,GACf+F,EAAQ/F,GAAK+F,EAAQpE,GACrBoE,EAAQpE,GAAalG,EAErBuE,EAAI2B,MAMR,CACA,KAAGoE,EAAQnE,GAAcmE,EAAQ/F,IAQ7B,MAPAvE,EAAOsK,EAAQ/F,GACf+F,EAAQ/F,GAAK+F,EAAQnE,GACrBmE,EAAQnE,GAAcnG,EAEtBuE,EAAI4B,GAUxBmC,EAAcgC,GACdlU,EAAgB,kCAAmC,CAC/C6B,QAAS,iBA3DT7B,EAAgB,oBAAqB,CACjC6B,QAAS,UAoGbuS,QACAxF,GAAW,IAID,KAAXnE,GAAiBA,GAAS,GACzBzK,EAAgB,mBAAoB,CAChC6B,QAAS,eAEb6I,EAAS,UAII,WAAd2I,IA9Ic,SAAC9R,GAClB,IACwB8S,EAAUzK,EAD9BsK,EAAO,YAAOjC,GACd9D,EAAI+F,EAAQhS,OAGhB,IAFAgS,EAAQjS,KAAKV,GAED,IAAN4M,IACFkG,EAAWb,UAAUrF,EAAE,GAAG,GACvB+F,EAAQ/F,GAAK+F,EAAQG,KACpBzK,EAAOsK,EAAQ/F,GACf+F,EAAQ/F,GAAK+F,EAAQG,GACrBH,EAAQG,GAAYzK,EACpBuE,EAAIkG,EAOZnC,EAAcgC,GACdlU,EAAgBuB,EAAO,gCAAiC,CACpDM,QAAS,YA2HT0R,CAAaC,SAAS/I,IACtBC,EAAS,IACTkE,GAAW,IAEO,WAAdyE,KAtDS,SAAC9R,GAClB,IAAI4M,EACJ,IAAIA,EAAI,EAAGA,EAAI8D,EAAW/P,OAAQiM,IAC9B,GAAG8D,EAAW9D,KAAO5M,EAKjB,OAJAqQ,EAAUrQ,QACVvB,EAAgBuB,EAAO,gCAAiC,CACpDM,QAAS,YAMrB7B,EAAgBuB,EAAO,gBAAiB,CACpCM,QAAS,UA0CT6R,CAAaF,SAAS/I,IACtBC,EAAS,IACTkE,GAAW,MAUnB,OACI,sBAAKrQ,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,wBAAQA,UAAU,kBAAkB+B,MAAO,CAACgU,YAAY,QAAxD,sBACA,uBACI5Q,GAAG,YACHhB,KAAK,SACLgE,YAAY,OACZC,MAAO8D,EACPlM,UAAU,kBACVqI,SAfK,SAAAR,GACjBsE,EAAStE,EAAES,OAAOF,UAgBV,wBAAQnI,QAAS4U,EAAc7U,UAAU,mBAAmBoI,MAAM,SAAlE,oBACA,wBAAQnI,QAAS4U,EAAc7U,UAAU,mBAAmBoI,MAAM,SAAlE,oBACA,wBAAQnI,QAAS4U,EAAc7U,UAAU,mBAAmB+B,MAAO,CAACqT,WAAW,QAAUhN,MAAM,SAA/F,yBAEA,wBACInI,QAAS4U,EACT7U,UAAU,kBACV+B,MAAO,CAACqT,WAAW,QACnBhN,MAAM,cAJV,0BAOA,wBACInI,QAAS4U,EACT7U,UAAU,kBACVoI,MAAM,YAHV,wBAMA,cAACnC,EAAA,EAAD,CAASpC,MAAM,gBAAgBqC,UAAU,SAASC,OAAK,EAAvD,SACI,+BACI,wBAAQlG,QAAS,WAAOoQ,GAAW,IAAQrQ,UAAU,kBAArD,SACI,cAAC,KAAD,CAAkB+B,MAAO,CAACuT,SAAS,gBAI/C,cAACrP,EAAA,EAAD,CAASpC,MAAM,cAAcqC,UAAU,SAASC,OAAK,EAArD,SACI,+BACI,wBAAQlG,QAAS,WAAOG,OAAOC,SAASC,KAAO,sDAAuDN,UAAU,kBAAhH,SACI,cAAC,IAAD,CAAQ+B,MAAO,CAACuT,SAAS,mBAOzC,cAAC,GAAD,CAAMnF,KAAMA,EAAMC,QAASA,EAASC,WAAYA,EAAYC,OAAQA,QC1MjE4F,OAlDf,WAAuB,IAAD,EACyBxU,cAAnCD,EADU,EACVA,gBAAiB2I,EADP,EACOA,cACzBxG,SAASC,MAAQ,wCAEjB,IAKMlC,EAAS,SAAAC,GAAG,OACd,cAAC,IAAMC,SAAP,UACI,qCACA,qBAAK5B,QAAS,YARG,SAAC2B,GACtB2E,aAAaa,QAAQ,qBAAqB,GAC1CgD,EAAcxI,GAMYyI,CAAiBzI,IAAQG,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,UAAWC,aAAa,MAAOC,eAAe,YAAaC,WAAW,UAA9L,6BAGA,qBAAKrC,QAAS,WAAQmK,EAAcxI,IAAQG,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,UAAWE,eAAe,YAAaC,WAAW,UAAvK,2BAiBR,OAVAC,qBAAU,WACFgE,aAAaC,QAAQ,sBACrB/E,EAAgB,yDAA0D,CACtE6B,QAAS,UACTsH,iBAAkB,IAClBjJ,aAGT,IAGC,gCACI,cAAC+F,EAAA,EAAD,UACI,0PAUJ,cAAC,GAAD,QCmFGyO,OAjIf,WAAuB,IAAD,EACI7U,mBAAS,IADb,mBACXpB,EADW,KACNoG,EADM,OAEmBhF,mBAASiF,aAAaC,QAAQ,gBAAkB1D,KAAKC,MAAMwD,aAAaC,QAAQ,iBAAmB,IAFtH,mBAEXC,EAFW,KAECC,EAFD,KAGZC,EAAWC,iBAAO,MACpBC,EAAUxF,cA2CR+U,EAAmB3P,EAAW3F,KAAI,SAAAC,GAChC,OACI,qBAAKgB,MAAO,CAACgF,QAAQ,gBAArB,SACI,sBAAK/G,UAAU,kBAAf,UACI,qBAAK+B,MAAO,CAACG,OAAO,WAAYjC,QAAS,kBATzCoW,EAS0DtV,OAR1E8F,EAAQnD,KAAK,WAAa2S,GADX,IAACA,GASA,SACK,IAAMtV,IAEX,qBAAKf,UAAU,QAAf,SACI,cAACiG,EAAA,EAAD,CAASpC,MAAM,SAASqC,UAAU,SAASC,OAAK,EAAhD,SACI,+BACI,cAAC,IAAD,CACIlG,QAAS,kBAvBxB,SAACoW,GAClB,IAAMpP,EAAY,YAAIR,GAAYS,QAAO,SAAAC,GAAG,OAAIA,IAAQkP,KACxD3P,EAAcO,GACdV,aAAaa,QAAQ,eAAgBtE,KAAKuE,UAAUJ,IAoBLK,CAAavG,oBAkBhE,OANAwB,qBAAU,WACHnC,OAAOmH,YAAc,MACpBZ,EAASa,QAAQC,WAKrB,gCACI,cAACC,EAAA,EAAD,UACI,0PAUJ,sBAAK1H,UAAU,eAAf,UACI,qBAAKA,UAAU,aAAf,sBACA,qBAAKA,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,uEACA,qBAAK3H,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,+CACA,qBAAK3H,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,2BACA,qBAAK3H,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,kBACA,qBAAK3H,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,uCACA,uBACA,sBAAM3H,UAAU,YAAY4H,SAtFnB,SAAAC,GACjBA,EAAEC,iBACF,IAAIC,EAAO7H,EACG,MAAXA,EAAI,KACH6H,EAAOA,EAAKC,UAAU,EAAGD,EAAKpE,SAGf,KADnBoE,EAAOA,EAAKE,MAAM,MACVtE,OACW,KAAZoE,EAAK,IACJlB,EAAQnD,KAAK,WAAaqE,EAAK,IAIpB,WAAZA,EAAK,IACW,KAAZA,EAAK,IACJlB,EAAQnD,KAAK,WAAaqE,EAAK,KAuEiBhG,MAAO,CAACmG,aAAa,OAAzE,SACI,sBAAKlI,UAAU,YAAf,UACQ,uBACImE,KAAK,OACLgE,YAAY,eACZC,MAAOlI,EACPF,UAAU,aACVqI,SAAU,SAAAR,GAAC,OAAIvB,EAAOuB,EAAES,OAAOF,QAC/BG,IAAK5B,EACL5E,MAAO,CAACyG,SAAS,WAErB,wBAAQxI,UAAU,mBAAlB,qBAGZ,qBAAKA,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,gBACA,qBAAK3H,UAAU,kBAAkB+B,MAAO,CAACyG,SAAS,SAAUvI,QAAS,kBA1G1D,WACnB,IAAIwI,EAAI1E,KAAKE,SAASyE,SAAS,IAAIV,UAAU,GAC7CnB,EAAQnD,KAAK,WAAa+E,GAwGyDE,IAA3E,iCACClC,EAAW9C,OAAS,EACjB,qCACI,uBACA,qBAAK3D,UAAU,YAAY+B,MAAO,CAAC4F,UAAU,UAA7C,+BACA,qBAAK3H,UAAU,wBAAwB+B,MAAO,CAACyG,SAAS,SAAxD,SACK4N,OAGP,Y,oBCgFPE,OAvMf,WACI,IAAMD,EAASzP,mBADE,EAE0BlF,cAAnCD,EAFS,EAETA,gBAAiB2I,EAFR,EAEQA,cACzBxG,SAASC,MAAQ,2BAEjB,IAKMlC,EAAS,SAAAC,GAAG,OACd,cAAC,IAAMC,SAAP,UACI,qCACA,qBAAK5B,QAAS,YARG,SAAC2B,GACtB2E,aAAaa,QAAQ,uBAAuB,GAC5CgD,EAAcxI,GAMYyI,CAAiBzI,IAAQG,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,UAAWC,aAAa,MAAOC,eAAe,YAAaC,WAAW,UAA9L,6BAGA,qBAAKrC,QAAS,WAAQmK,EAAcxI,IAAQG,MAAO,CAACC,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,UAAWE,eAAe,YAAaC,WAAW,UAAvK,2BAORC,qBAAU,WACFgE,aAAaC,QAAQ,wBACrB/E,EAAgB,yDAA0D,CACtE6B,QAAS,UACTsH,iBAAkB,IAClBjJ,aAGT,IA/Bc,MAiCiBL,mBAAS,GAjC1B,mBAiCViV,EAjCU,KAiCCC,EAjCD,OAkCelV,mBAAS,IAlCxB,mBAkCV0I,EAlCU,KAkCAC,EAlCA,OAmCW3I,mBAAS,IAnCpB,mBAmCVuI,EAnCU,KAmCFC,EAnCE,OAoCSxI,mBAAS,CAACmV,IAAK,YApCxB,mBAoCVtU,EApCU,KAoCHuU,EApCG,OAqCmBpV,mBAAS,MArC5B,mBAqCVqV,EArCU,KAqCEC,EArCF,KAiIjB,OA/CArU,qBAAU,WAEN,IAAIwF,EAAO3H,OAAOC,SAASsC,SAGE,MAA1BoF,EAAKA,EAAKpE,OAAS,KAClBoE,EAAOA,EAAKC,UAAU,EAAGD,EAAKpE,OAAS,GACvCvD,OAAOC,SAASsC,SAAWoF,IAI/BA,GAFAA,EAAOA,EAAKC,UAAU,EAAGD,EAAKpE,SAElBsE,MAAM,MAGVtE,OAAS,IACbvD,OAAOC,SAASsC,SAAW,IAAMoF,EAAK,GAAK,IAAMA,EAAK,IAG7B,WAA1BA,EAAK,GAAGuC,gBACPL,EAAYlC,EAAK,GAAGuC,eACpBC,EAASsM,cAAc9O,EAAK,GAAGuC,eAAe1H,KAAKkH,EA/BxC,SAAC/B,GAChB,IAAI+O,EAAevQ,aAAaC,QAAQ,gBAAkB1D,KAAKC,MAAMwD,aAAaC,QAAQ,iBAAmB,GAC7GsQ,EAAe,YAAIA,GAAc5P,QAAO,SAAAmP,GAAM,OAAIA,IAAWtO,MAC7D+O,EAAY,CAAI/O,GAAJ,mBAAa+O,KACTnT,OAAS,GACrBmT,EAAapM,MAEjBnE,aAAaa,QAAQ,eAAgBtE,KAAKuE,UAAUyP,IAwBcnM,CAAW5C,EAAK,QAGnF,IAGHxF,qBAAU,gBACQsI,IAAXhB,GACCU,EAASwM,cAAc/M,EAAU,CAAC,MAAQ,GAAG,MAAQ,OAAO,OAAS,SACrE4M,EAAc,CAAC,MAAQ,GAAG,MAAQ,OAAO,OAAS,UAGpDA,EAAc/M,KAGjB,CAACA,IAaA,gCACI,cAACnC,EAAA,EAAD,UACI,0PAUJ,sBAAK1H,UAAU,kBAAf,UACI,uBACImF,GAAG,YACHhB,KAAK,SACLgE,YAAY,OACZC,MAAOmO,EACPvW,UAAU,oBACVqI,SAxFQ,SAAAR,GACjBA,EAAES,OAAOF,MAAQ,GAChBoO,EAAa,IAGbA,EAAa3O,EAAES,OAAOF,UAsFlB,qBAAKrG,MAAO,CAACiV,MAAM,QAAS5U,aAAa,QAAzC,SACI,cAAC,KAAD,CAAcD,MAAOA,EAAO8U,iBA/FlB,SAAA9U,GAAK,OAAIuU,EAASvU,QAiGhC,wBACInC,UAAU,sBACVC,QAAS,WAAOoW,EAAO7O,QAAQ0P,QAFnC,oCAOA,wBACIlX,UAAU,sBACVC,QAAS,WAAOoW,EAAO7O,QAAQ2P,SAFnC,qCAOA,wBACInX,UAAU,sBACVC,QAnDG,SAAA4H,GACf0C,EAASwM,cAAc/M,EAAUqM,EAAO7O,QAAQ4P,eAChDnM,QAAQC,IAAI,UACZzJ,EAAgB,6BAA8B,CAC1C6B,QAAS,aA6CL,oCAMA,wBAAQtD,UAAU,sBAAsBC,QAAS,YAxIrC,SAACkL,GACrB,IAAIC,EAASD,EAETE,EAAOzH,SAAS0H,cAAc,YAC9BC,EAAU3H,SAAS4H,eAAeJ,GACtCC,EAAKI,YAAYF,GAEjB3H,SAAS8H,KAAKD,YAAYJ,GAC1BA,EAAKM,SACL/H,SAASgI,YAAY,QACrBhI,SAAS8H,KAAKG,YAAYR,GAG1B5J,EADc,4BACW,CACrB6B,QAAS,YA0HmDwI,CAAgB1L,OAAOC,SAASC,OAAxF,SACI,cAAC,IAAD,SAGR,qBAAKN,UAAU,aAAf,SACC2W,EACG,cAAC,KAAD,CACIpO,IAAK8N,EACLgB,UAAQ,EACRC,SAAUX,EACVY,gBAAiB,cACjBC,WAAYrV,EAAMsU,IAClBgB,YAAalB,EACbmB,WAAY,EACZC,YAAa,SACbC,aAAc,UACb,qBAAK7V,MAAO,CAACI,MAAO,oBAApB,+BCvHN0V,OAhEf,WAOI,OAJAtV,qBAAU,WACNgE,aAAauR,WAAW,gBACzB,CAHCC,YAMA,eAAC,IAAD,WACI,cAAC,EAAD,IAEA,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOhQ,KAAK,UAAZ,SACI,cAAC,EAAD,MAOJ,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOiQ,OAAK,EAACjQ,KAAK,YAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOiQ,OAAK,EAACjQ,KAAK,UAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,0BAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,0BAAZ,SACI,cAAC,GAAD,MAIJ,eAAC,IAAD,CAAOA,KAAK,IAAZ,UAEQxB,aAAaC,QAAQ,cAAgB,cAAC,IAAD,CAAUxB,GAAIuB,aAAaC,QAAQ,gBACtE,KAGN,cAAC,EAAD,cC7DLyJ,OARf,WACE,OACE,8BACE,cAAC,GAAD,OCCNxN,IAAMwV,SAASC,QAAU,wCAGzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CACEC,SAAU,EACV/U,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdmH,iBAAkB,IANpB,SAQE,cAAC,GAAD,QAGJhH,SAAS2U,eAAe,U","file":"static/js/main.24b2c1db.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst BlogButton = ({details}) => {\r\n\r\n    const handleClick = (url) => {\r\n        window.location.href = url;\r\n    }\r\n\r\n    return (\r\n        <button className=\"redirect-button\" onClick={() => handleClick(details.click)} >\r\n            {details.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BlogButton\r\n","import React from 'react'\r\n\r\nconst BlogImage = ({details}) => {\r\n    return (\r\n        <div className=\"blog-image-div\" >\r\n            <img src={details.src} className=\"blog-image\" alt={details.alt} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogImage\r\n","import React from 'react'\r\n\r\nconst BlogList = ({details}) => {\r\n\r\n    const makeList = details.list.map(index =>\r\n            <li key={index}>\r\n                {index}\r\n            </li>\r\n    )\r\n\r\n    return (\r\n        <div className=\"blog-list\" >\r\n            <ul className=\"blog-list-ul\">\r\n                {makeList}\r\n            </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogList\r\n","import React from 'react'\r\n\r\nconst BlogPara = ({details}) => {\r\n    return (\r\n        <div className=\"blog-para\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogPara\r\n","import React from 'react'\r\n\r\nconst BlogSubheading = ({details}) => {\r\n    return (\r\n        <div className=\"blog-subheading\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogSubheading\r\n","import React from 'react'\r\n\r\nconst BlogTitle = ({details}) => {\r\n    return (\r\n        <div className=\"blog-title\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTitle\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport BlogButton from './BlogButton'\r\nimport BlogImage from './BlogImage'\r\nimport BlogList from './BlogList'\r\nimport BlogPara from './BlogPara'\r\nimport BlogSubheading from './BlogSubheading'\r\nimport BlogTitle from './BlogTitle'\r\nimport { SemipolarLoading } from 'react-loadingg';\r\nimport { useHistory } from 'react-router'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nfunction BlogTemplate() {\r\n    const histoy = useHistory(); //\r\n    const [blogData, setBlogData] = useState([]);\r\n    const { enqueueSnackbar } = useSnackbar()\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { window.location.reload() }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"rgb(251, 255, 3)\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Reload ?\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        // console.log(blogurl)\r\n        axios.get(window.location.pathname)\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                setBlogData(JSON.parse(res.data.blogDetail))\r\n            })\r\n            .catch(err => {\r\n                // console.log(err.request.status)\r\n                if(err.request.status === 0){\r\n                    enqueueSnackbar(\"Something went wrong !!\", {\r\n                        variant: 'error',\r\n                        anchorOrigin:{\r\n                            vertical:\"top\",\r\n                            horizontal:\"center\"\r\n                        },\r\n                        action\r\n                    })\r\n                }\r\n                else{\r\n                    enqueueSnackbar(\"Blog not found\", {\r\n                        variant: 'error',\r\n                        anchorOrigin:{\r\n                            vertical:\"top\",\r\n                            horizontal:\"center\"\r\n                        }\r\n                    })\r\n                    histoy.push(\"/\")\r\n                }\r\n            })\r\n\r\n        if(blogData.length > 0){\r\n            document.title = \"Blogs | \" + blogData[0].text + \" | Shlok Zanwar\";\r\n        }\r\n    }, [])\r\n    \r\n\r\n    const getRandomNumber = () =>{\r\n        return Math.floor(Math.random() * 100000);\r\n    }\r\n\r\n    const blog = blogData.map(index => {\r\n        if(index.type === \"title\"){\r\n            return <BlogTitle details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"paragraph\"){\r\n            return <BlogPara details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"subheading\"){\r\n            return <BlogSubheading details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"button\"){\r\n            return <BlogButton details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"list\"){\r\n            return <BlogList details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"image\"){\r\n            return <BlogImage details={index} key={getRandomNumber()} />\r\n        }\r\n        else{\r\n            return <div className=\"blog-para\"> ------ Could not render ------ </div>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"main-blog-div\">\r\n            {blogData.length === 0 ? <SemipolarLoading   size=\"large\" color=\"rgb(251, 255, 3)\" /> : blog}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTemplate\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Masonry from 'react-masonry-css'\r\n\r\nfunction HomeCards() {\r\n    const [cards] = useState(require('./CardDetails.json'))\r\n\r\n    // const handleClickCards = (url) =>{\r\n    //     window.location.href = \r\n    // }\r\n\r\n    const cardType = (type) => {\r\n        if(type === \"Blog\"){\r\n            return (\r\n                <div className=\"card-type green-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n        else if(type === \"App\"){\r\n            return (\r\n                <div className=\"card-type blue-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n        else if(type === \"Model\"){\r\n            return (\r\n                <div className=\"card-type yellow-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const breakpoints = {\r\n        default: 5,\r\n        1600: 4,\r\n        1250: 3,\r\n        940: 2,\r\n        700: 1\r\n    };\r\n\r\n    return ( \r\n        <Masonry\r\n            breakpointCols={breakpoints}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n            { cards.map(card =>\r\n            <Link to={card.url} key={card.id}>\r\n                <div key={card.id} className=\"cards-box\">\r\n                    <div className=\"cards-info\">\r\n                        <div className=\"cards-title\">\r\n                            {card.title}\r\n                        </div>\r\n                        <div className=\"cards-description\">\r\n                            {card.description}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-bottom-bar\">\r\n                        <div className=\"card-date \">\r\n                            {card.date}\r\n                        </div>\r\n                        {cardType(card.type)}               \r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            )}\r\n        </Masonry>\r\n    )\r\n}\r\n\r\nexport default HomeCards\r\n","import React, { useEffect } from 'react'\r\nimport HomeCards from './HomeCards'\r\n\r\nfunction Home() {\r\n    \r\n    document.title = \"Home | Shlok Zanwar\"\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <HomeCards />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport {Navbar, Nav} from \"react-bootstrap\"\r\nimport { SiHackerrank, SiGithub, SiInstagram, SiLinkedin, SiGmail, SiCodechef, SiTwitter } from \"react-icons/si\";\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\n\r\nfunction MyNavbar() {\r\n\r\n    return (\r\n        <>\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-color\" variant=\"dark\" sticky=\"top\">\r\n\r\n            <Navbar.Brand href=\"https://shlok-zanwar.github.io/\" >\r\n                Shlok Zanwar\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/todo-app\">\r\n                            To-Do App\r\n                    </Nav.Link>\r\n                </Nav>\r\n                \r\n                <Nav>\r\n                    <Tooltip title='Github' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://github.com/Shlok-Zanwar\" className=\"navbar-icons\">\r\n                                <SiGithub />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Linkedin' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.linkedin.com/in/shlok-zanwar-0124961ba/\" className=\"navbar-icons\">\r\n                                <SiLinkedin />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='shlokzanwar14@gmail.com' placement='bottom' arrow interactive>\r\n                        <Nav.Link href=\"mailto:shlokzanwar14@gmail.com\" className=\"navbar-icons\">\r\n                                <SiGmail />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Hackerrank' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.hackerrank.com/shlok_21910163\" className=\"navbar-icons\">\r\n                                <SiHackerrank />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='CodeChef' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.codechef.com/users/shlok_zanwar\" className=\"navbar-icons\">\r\n                                <SiCodechef />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Instagram' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.instagram.com/shlok__zanwar/\" className=\"navbar-icons\">\r\n                                <SiInstagram />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Twitter' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.twitter.com/zanwar_shlok/\" className=\"navbar-icons\">\r\n                                <SiTwitter />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    \r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyNavbar","import React, { useEffect, useRef, useState } from 'react'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction PasteBinHome() {\r\n    const [url, setUrl] = useState('');\r\n    const [recentBins, setRecentBins] =  useState(localStorage.getItem('recentPasteBins') ? JSON.parse(localStorage.getItem('recentPasteBins')) : []);\r\n    const inputRef = useRef(null);\r\n    let history = useHistory();\r\n    document.title = \"Paste Bin | Shlok Zanwar\"\r\n\r\n    const generateNewURL = () => {\r\n        let r = Math.random().toString(36).substring(4);\r\n        history.push(\"/pastebin/\" + r);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        var path = url;\r\n        if(url[0] === \"/\"){\r\n            path = path.substring(1, path.length);\r\n        }\r\n        path = path.split(\"/\");\r\n        if(path.length === 1){\r\n            if(path[0] !== \"\"){\r\n                history.push(\"/pastebin/\" + path[0]);\r\n            }\r\n        }\r\n        else{\r\n            if(path[0] === \"pastebin\"){\r\n                if(path[1] !== \"\"){\r\n                    history.push(\"/pastebin/\" + path[1]);\r\n                }\r\n            }\r\n        }\r\n        // console.log(path);\r\n\r\n    }\r\n\r\n    \r\n    const removeRecent = (pasteBin) => {\r\n        const removeArr = [...recentBins].filter(bin => bin !== pasteBin);\r\n        setRecentBins(removeArr);\r\n        localStorage.setItem('recentPasteBins', JSON.stringify(removeArr))\r\n    }\r\n\r\n    \r\n    const gotoRecent = (pasteBin) => {\r\n        history.push(\"/pastebin/\" + pasteBin);\r\n    }\r\n\r\n\r\n    const loadRecentPasteBins = recentBins.map(index => {\r\n            return (\r\n                <div style={{display:\"inline-table\"}} >\r\n                    <div className=\"recent-pastebin\">\r\n                        <div style={{cursor:\"pointer\"}} onClick={() => gotoRecent(index)}>\r\n                            {\"/\" + index}\r\n                        </div>\r\n                        <div className=\"icons\">\r\n                            <Tooltip title='Delete' placement='bottom' arrow>\r\n                                <span>\r\n                                    <RiDeleteBin5Line \r\n                                        onClick={() => removeRecent(index)}\r\n                                    />\r\n                                </span>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    })\r\n    \r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n    return ( \r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"main-blog-di\">\r\n                <div className=\"blog-title\">Paste Bin</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>A pastebin for sharing data without any authentication.</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Go to some URl like \"/pastebin/any\"</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Write anything</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Save</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Share the URL with anyone</div>\r\n                <br />\r\n                <form className=\"todo-form\" onSubmit={handleSubmit} style={{marginBottom:\"6px\"}}>\r\n                    <div className=\"edit-form\" >\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Type any url\" \r\n                                value={url}\r\n                                className=\"todo-input\"\r\n                                onChange={e => setUrl(e.target.value)}\r\n                                ref={inputRef}\r\n                                style={{maxWidth:\"275px\"}}\r\n                            />\r\n                            <button className=\"todo-button edit\">Go</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}} >OR</div> \r\n                <div className=\"redirect-button\" style={{maxWidth:\"230px\"}} onClick={() => generateNewURL()} >Generate random URL</div>\r\n                {recentBins.length > 0 ?\r\n                    <>\r\n                        <br />\r\n                        <div className=\"blog-para\" style={{textAlign:\"center\"}}>Recent Paste Bins</div>\r\n                        <div className=\"recent-pastebin-outer\" style={{maxWidth:\"500px\"}}>\r\n                            {loadRecentPasteBins}\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasteBinHome\r\n","import app from \"firebase/app\";\r\n// import 'firebase/database'\r\n// import 'firebase/auth'\r\nimport 'firebase/firebase-firestore'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA3_2rnMA0F-RcBYObb9v5aKhQdB5rMYdU\",\r\n    authDomain: \"shlok-website.firebaseapp.com\",\r\n    projectId: \"shlok-website\",\r\n    storageBucket: \"shlok-website.appspot.com\",\r\n    messagingSenderId: \"993579237604\", \r\n    appId: \"1:993579237604:web:9f13901ca731fed1f82cf1\",\r\n    measurementId: \"G-CNF32VVWZE\"\r\n};\r\n\r\n\r\nclass Firebase {\r\n\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n        // this.auth = app.auth();\r\n        this.db = app.firestore();\r\n    }\r\n    \r\n \r\n    // login(email, password) {\r\n\t// \treturn this.auth.signInWithEmailAndPassword(email, password)\r\n\t// }\r\n\r\n\r\n    // async register(name, email, password) {\r\n\t// \tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n\t// \treturn this.auth.currentUser.updateProfile({\r\n\t// \t\tdisplayName: name\r\n\t// \t})\r\n\t// }\r\n\r\n\r\n    addPasteBinData (url, data) {\r\n        this.db.doc(`pastebin/${url}`).set({\r\n            data\r\n        })\r\n    }\r\n\r\n\r\n    async getPasteBinData (url) {\r\n        const abc = await this.db.doc(`pastebin/${url}`).get();\r\n        return abc.get('data');\r\n    }\r\n\r\n    addCanvasData (url, data) {\r\n        this.db.doc(`canvas/${url}`).set({\r\n            data\r\n        })\r\n    }\r\n\r\n\r\n    async getCanvasData (url) {\r\n        const abc = await this.db.doc(`canvas/${url}`).get();\r\n        return abc.get('data');\r\n    }\r\n\r\n}\r\n\r\nexport default new Firebase()","import React, { useEffect, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport firebase from '../firebase';\r\nimport { useSnackbar } from 'notistack';\r\nimport { FaShare } from \"react-icons/fa\";\r\n\r\n\r\nfunction PasteBinApp() {\r\n    const [result, setResult] = useState('');\r\n    const [data, setData] = useState('Write and Share');\r\n    const [savePath, setSavePath] = useState(\"\")\r\n    const [saved, setSaved] = useState(true);\r\n\r\n\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = command;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Paste Bin | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowPastebinSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n\r\n\r\n    const saveRecent = (path) => {\r\n        var recentPasteBins = localStorage.getItem('recentPasteBins') ? JSON.parse(localStorage.getItem('recentPasteBins')) : [];\r\n        recentPasteBins = [...recentPasteBins].filter(pasteBin => pasteBin !== path);\r\n        recentPasteBins = [path, ...recentPasteBins];\r\n        if(recentPasteBins.length > 6){\r\n            recentPasteBins.pop();\r\n        }\r\n        localStorage.setItem('recentPasteBins', JSON.stringify(recentPasteBins));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(window.location.pathname);\r\n        var path = window.location.pathname;\r\n        // console.log(path[path.length - 1]);\r\n\r\n        if(path[path.length - 1] === \"/\"){\r\n            path = path.substring(0, path.length - 1);\r\n            window.location.pathname = path;\r\n        }\r\n        path = path.substring(1, path.length);\r\n        // console.log(path)\r\n        path = path.split(\"/\");\r\n        // console.log(path)\r\n\r\n        if(path.length > 2){\r\n            window.location.pathname = \"/\" + path[0] + \"/\" + path[1];\r\n        }\r\n\r\n        if(path[0].toLowerCase() === \"pastebin\"){\r\n            setSavePath(path[1].toLowerCase());\r\n            firebase.getPasteBinData(path[1].toLowerCase()).then(setResult, saveRecent(path[1]));\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowPastebinSnack\")){\r\n            enqueueSnackbar(\"Paste bin is publically visible.\\nPlease do not share private information.\", {\r\n                variant: 'info',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(result === undefined){\r\n            firebase.addPasteBinData(savePath, \"Write and Share\");\r\n            setData(\"Write and Share\");\r\n        }\r\n        else{\r\n          setData(result);\r\n        }\r\n    }, [result])\r\n\r\n\r\n    const saveData = () => {\r\n        if(!saved){\r\n            firebase.addPasteBinData(savePath, data);\r\n            setSaved(true);\r\n            console.log(\"Saving\");\r\n        }\r\n        enqueueSnackbar(\"Details saved successfully\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{display:\"flex\", position:\"relative\"}}>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <textarea \r\n                className=\"pastebin-text\" \r\n                spellCheck=\"false\" \r\n                value={data} \r\n                onChange={e => {setData(e.target.value); setSaved(false)}}\r\n            >\r\n            </textarea>\r\n            <div className=\"pastebin-controls\"> \r\n                    <button className=\"save-share-pastebin\" onClick={() => saveData()}>\r\n                        &nbsp;&nbsp; Save &nbsp;&nbsp; \r\n                    </button>\r\n                    <button className=\"save-share-pastebin\" onClick={() => {copyToClipboard(window.location.href)}}>\r\n                        <FaShare /> \r\n                    </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasteBinApp\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n    const availableClasses = [\r\n        \"todo-row blue\", \r\n        \"todo-row orange\", \r\n        \"todo-row pink\", \r\n        \"todo-row purple\",\r\n        \"todo-row red\",\r\n        \"todo-row green\"\r\n    ];\r\n    const colorNames = [\r\n        \"Blue\",\r\n        \"Orange\",\r\n        \"Pink\",\r\n        \"Purple\",\r\n        \"Red\",\r\n        \"Green\"\r\n    ]\r\n    const [classSelector, setClassSelector] = useState(props.edit.class + \" color-select-div\");\r\n    const [selectColor, setSelectColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(props.edit.id){\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: props.edit.list,\r\n                class: classSelector.slice(0, -17)\r\n            });\r\n        }\r\n        else{\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: \"todo\",\r\n                class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n            });\r\n        }\r\n\r\n        setInput('');\r\n\r\n    };\r\n\r\n    \r\n    const handleRightClick = (e) => {\r\n        e.preventDefault();\r\n        setSelectColor(true);\r\n    }\r\n\r\n\r\n    const nextClassColor = e => {\r\n        const classesUsed = e.target.className.split(\" \");\r\n        setClassSelector(availableClasses[(availableClasses.indexOf((classesUsed[0] + \" \" + classesUsed[1])) + 1) % availableClasses.length ] + \" color-select-div\");\r\n    }\r\n\r\n\r\n    var colorSelector = <div className={classSelector} onClick={(e) => nextClassColor(e)} onContextMenu={(e) => handleRightClick(e)}>\r\n                            {colorNames[availableClasses.indexOf(classSelector.slice(0, -17))]}\r\n                        </div>\r\n\r\n\r\n    if(selectColor){\r\n        colorSelector = availableClasses.map((className, index) => {\r\n            return(\r\n                <div className={className + \" color-select-div\"} key={colorNames[index]} onClick={(e) => {setClassSelector(e.target.className); setSelectColor(false)}} >\r\n                    {colorNames[index]}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n        {props.edit.id ? (\r\n            <div onClick={() => {setSelectColor(false);}}>\r\n                <div className=\"edit-form\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Update your todo\" \r\n                        value={input}\r\n                        className=\"todo-input\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className=\"todo-button edit\">Update</button>\r\n                </div>\r\n                {colorSelector}\r\n            </div>\r\n            ) : (\r\n            <>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add a todo\" \r\n                    value={input}\r\n                    className=\"todo-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\">Add Todo</button>\r\n            </>\r\n        )}\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Todo({todos, updateTodo, sendToDoing, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"todo\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"todo\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"todo\" ? (\r\n        <div className={todo.class}\r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Doing' placement='top' arrow>\r\n                    <span>\r\n                        <FiSend\r\n                            onClick={() => sendToDoing(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Doing({todos, updateTodo, sendToDo, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"doing\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"doing\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"doing\" ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Doing\r\n","import React from 'react'\r\n\r\nfunction DeleteButton({todos, deleteAllDone, allowDrop, removeTodo, showDelete}) {\r\n    \r\n    return [...todos].filter(todo => todo.list === \"done\").length > 1 || showDelete ? (\r\n        <button \r\n            className=\"delete-all-button\" \r\n            onClick={deleteAllDone} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDrop={(e) => removeTodo(JSON.parse(e.dataTransfer.getData(\"todo\")).id)} \r\n        >\r\n            Delete Done\r\n        </button>\r\n    ) : null\r\n}\r\n\r\nexport default DeleteButton\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Done({todos, removeTodo, updateTodo, sendToDo, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"done\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"done\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"done\"  ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Delete To-do' placement='top' arrow>\r\n                    <span>\r\n                        <RiDeleteBin5Line \r\n                            onClick={() => removeTodo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Done\r\n","import React, {useState, useEffect} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\nimport Doing from './Doing'\r\nimport DeleteButton from './DeleteButton';\r\nimport Done from './Done';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState( localStorage.getItem('savedTodos') ? JSON.parse(localStorage.getItem('savedTodos')) : []);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        // Saving data to local storage every time Todos are updated\r\n        localStorage.setItem('savedTodos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    // Preventing previously created todos from getting destroyed after update\r\n    useEffect(() => {\r\n        if(localStorage.getItem('update_version') !== \"v1\"){\r\n\r\n            const availableClasses = [\r\n                \"todo-row blue\", \r\n                \"todo-row orange\", \r\n                \"todo-row pink\", \r\n                \"todo-row purple\",\r\n                \"todo-row red\",\r\n                \"todo-row green\"\r\n            ];\r\n            var newTodos = [];\r\n            var todoType = \"\";\r\n\r\n            todos.map(todo => {\r\n                if(todo.todoList){\r\n                    todoType = \"todo\";\r\n                }\r\n                else if (todo.doing){\r\n                    todoType = \"doing\";\r\n                }\r\n                else{\r\n                    todoType = \"done\";\r\n                }\r\n\r\n                var updateTodo = {\r\n                    id: todo.id,\r\n                    text: todo.text,\r\n                    list: todoType,\r\n                    class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n                }\r\n                newTodos.push(updateTodo);\r\n            });\r\n            \r\n            setTodos(newTodos);\r\n            localStorage.setItem(\"update_version\", \"v1\"); \r\n        }\r\n    }, [])\r\n\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos)\r\n    }\r\n    \r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(a => {\r\n            return setTodos(removeArr);\r\n        })\r\n    }\r\n\r\n\r\n    const sendToDo = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"todo\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const sendToDoing = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"doing\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n    \r\n\r\n    const sendToDone = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"done\";\r\n            }\r\n            return todo;\r\n        })\r\n        enqueueSnackbar(\"Yayyy !! You completed a todo. \", {\r\n            variant: 'success',\r\n        });\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const deleteAllDone = () => {\r\n        let updatedTodos = [...todos].filter(todo => todo.list !== \"done\")\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const handleDrag = (e, todo) => {\r\n        e.dataTransfer.setData(\"todo\", todo);\r\n        setShowDelete(true);\r\n    }\r\n\r\n\r\n    const handleToDoDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDo(id);\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoingDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDoing((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoneDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDone((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handlePositionChange = (e, onTodo) => {\r\n        var changeTodo = JSON.parse(e.dataTransfer.getData(\"todo\"));\r\n        changeTodo.list = onTodo.list;\r\n\r\n        const newTodos = [];\r\n        var i;\r\n        for(i = 0; i < todos.length; i ++){\r\n            \r\n            if(todos[i].id !== changeTodo.id){\r\n                newTodos.push(todos[i]);\r\n            }\r\n            if(todos[i].id === onTodo.id){\r\n                newTodos.push(changeTodo);\r\n            }\r\n        }\r\n        setShowDelete(false);\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(prev => {\r\n            return setTodos(newTodos);\r\n        });\r\n    }\r\n    \r\n\r\n    const allowDrop = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"todo-app\" onDrop={(e) => handleToDoDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2>To Do's</h2>\r\n            <TodoForm onSubmit={addTodo} edit={{class: \"todo-row blue\"}} newTodo={true}/>\r\n            <Todo \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDoing={sendToDoing} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app\" onDrop={(e) => handleDoingDrop(e)} onDragOver={(e) => allowDrop(e)} >\r\n            <h2>Doing ....</h2>\r\n            <Doing \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag}\r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app extra-padding\" onDrop={(e) => handleDoneDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2>Done !!!</h2>\r\n            <Done \r\n                todos={todos} \r\n                removeTodo={removeTodo} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n            <DeleteButton \r\n                todos={todos}\r\n                deleteAllDone={deleteAllDone} \r\n                allowDrop={allowDrop} \r\n                removeTodo={removeTodo} \r\n                showDelete={showDelete} \r\n            />\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoList\r\n","import './TodoApp.css';\nimport TodoList from './components/TodoList';\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from 'react';\n\nfunction App() {\n\n  document.title = \"To-Do App | Shlok Zanwar\"\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <>\n    <div className=\"main-outer-todo-div\">\n      <Link to=\"blogs/todo-app\">\n        <h1>To-Do App</h1>\n      </Link>\n      <TodoList />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useEffect } from 'react'\r\nimport LineTo from 'react-lineto'\r\n\r\nfunction Grid({grid, loading, setLoading, search}) {\r\n\r\n\r\n    function debounce(fn, ms) {\r\n        let timer\r\n        return _ => {\r\n            clearTimeout(timer)\r\n            timer = setTimeout(_ => {\r\n                timer = null\r\n                fn.apply(this, arguments)\r\n            }, ms)\r\n        };\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const debouncedHandleResize = debounce(function handleResize() {\r\n            setLoading(true);\r\n        }, 500)\r\n        \r\n        window.addEventListener('resize', debouncedHandleResize)\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setLoading(false), 100);\r\n    }, [loading])\r\n\r\n\r\n    const makeOneRow = (row, rowIndex) => \r\n        row.map((cell, cellIndex) => {\r\n            if(cell !== 0){\r\n                if(cell === search){\r\n\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" searched\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString()} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            else{\r\n                return(\r\n                    <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" transparent\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                        {}\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n\r\n    const makeRows = () => {\r\n        return grid.map((row, rowIndex) => (\r\n            <div className=\"rows\" key={\"r\" + rowIndex.toString()}>\r\n                {makeOneRow(row, rowIndex)}\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    \r\n    var zIndex = -1;\r\n    var makeArrows = () => {\r\n        return(\r\n            grid.map((row, rowIndex) => {\r\n                return(\r\n                    row.map((cell, cellIndex) => {\r\n                        if(cell !== 0 && rowIndex < grid.length - 1){\r\n                            // console.log(\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString() + \"   \" + \"r\"+(rowIndex+1).toString() + \"c\" + cellIndex.toString() );\r\n                            \r\n                            var leftChild = cellIndex;\r\n                            var rightChild = cellIndex + Math.pow(2, grid.length-rowIndex-1);\r\n\r\n                            // console.log(rowIndex, \" \", leftChild, \" \" , rightChild);\r\n\r\n                            if(grid[rowIndex+1][leftChild] !== 0 && grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <>\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()} \r\n                                    />\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()} \r\n                                    />\r\n                                    </>\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][leftChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}\r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"   \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"tree-outer-div\">\r\n            <div className=\"tree-main-div\">\r\n                {makeRows()}\r\n                {loading ? null : makeArrows() }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Grid;\r\n","class Node { \r\n    constructor(data) \r\n    { \r\n        this.data = data; \r\n        this.left = null; \r\n        this.right = null; \r\n    } \r\n} \r\n\r\n\r\nexport class BinarySearchTree { \r\n    constructor(start){ \r\n        this.root = start; \r\n        this.traversal = [];\r\n    } \r\n\r\n\r\n    deleteTree() {\r\n        this.root = null;\r\n    }\r\n\r\n\r\n    getRootNode() { \r\n        return this.root; \r\n    } \r\n\r\n\r\n    insertNode(data){ \r\n        var newNode = new Node(data); \r\n        this.traversal = [];\r\n\r\n        if(this.root === null || this.root === undefined) {\r\n            this.root = newNode; \r\n        }\r\n        else{\r\n            this.insertRecursive(this.root, newNode); \r\n        }\r\n\r\n        this.traversal.push(data);\r\n        return this.traversal;\r\n    } \r\n    \r\n\r\n    insertRecursive(node, newNode) { \r\n        this.traversal.push(node.data);\r\n\r\n        if(newNode.data < node.data) {\r\n            if(node.left === null || node.left === undefined){ \r\n                node.left = newNode; \r\n            }\r\n            else{\r\n                this.insertRecursive(node.left, newNode);  \r\n            }\r\n        } \r\n        else{ \r\n            if(node.right === null || node.left === undefined) {\r\n                node.right = newNode;\r\n            } \r\n            else{\r\n                this.insertRecursive(node.right,newNode); \r\n            }\r\n        } \r\n    } \r\n\r\n\r\n    findInorderSuccessor(node){\r\n        let minValue = node.data;\r\n        while(node.left != null){\r\n            minValue = node.left.data;\r\n            node = node.left;\r\n        }\r\n        return minValue;\r\n    }\r\n\r\n\r\n    deleteNode(data){\r\n        this.root = this.deleteRecursive(this.root, data);\r\n    }\r\n\r\n\r\n    deleteRecursive(node, data){\r\n        if (node === null){\r\n            return node;\r\n        }\r\n        if(data < node.data){\r\n            node.left = this.deleteRecursive(node.left, data);\r\n        }\r\n        else if(data > node.data){\r\n            node.right = this.deleteRecursive(node.right, data);\r\n        }\r\n        else{\r\n            if(node.left === null){\r\n                return node.right;\r\n            }\r\n            else if(node.right === null){\r\n                return node.left;\r\n            }\r\n            else{\r\n                node.data = this.findInorderSuccessor(node.right);\r\n                node.right = this.deleteRecursive(node.right, node.data);\r\n            }\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    breathFT(node){\r\n        if(node === null || node === undefined){\r\n            return [];\r\n        }\r\n\r\n        var bstArray = [[node]];\r\n        var valueArray = [[node.data]];\r\n\r\n        const treeHeight = this.treeHeight(node);\r\n        let i = 0, j = 0;\r\n\r\n        for(i = 0; i < treeHeight; i++){\r\n            var rowNode = [];\r\n            var rowValue = [];\r\n            for(j = 0; j < Math.pow(2, i); j++ ){\r\n                if(bstArray[i][j] === null || bstArray[i][j] === undefined ){\r\n                    rowNode.push(null);\r\n                    rowNode.push(null);\r\n\r\n                    rowValue.push(0);\r\n                    rowValue.push(0);\r\n                }\r\n                else{\r\n                    rowNode.push(bstArray[i][j].left);\r\n                    rowNode.push(bstArray[i][j].right);\r\n\r\n                    rowValue.push(bstArray[i][j].left ? bstArray[i][j].left.data : 0);\r\n                    rowValue.push(bstArray[i][j].right ? bstArray[i][j].right.data : 0);\r\n                }\r\n            }\r\n            bstArray.push(rowNode);\r\n            valueArray.push(rowValue);\r\n        }\r\n        // console.log(\"BFT : \", bstArray);\r\n        // console.log(\"Value BFT : \", valueArray);\r\n        return valueArray;\r\n    }\r\n\r\n\r\n    treeHeight(node){\r\n        if (node == null)\r\n            return -1;\r\n        else\r\n        {\r\n            var lDepth = this.treeHeight(node.left);\r\n            var rDepth = this.treeHeight(node.right);\r\n    \r\n            if (lDepth > rDepth)\r\n                return (lDepth + 1);\r\n            else\r\n                return (rDepth + 1);\r\n        }\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\nimport {BinarySearchTree} from './Tree'\r\n\r\nfunction BST() {\r\n    \r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n    const [showAnimation, setShowAnimation] = useState(true);\r\n    const [BST, setBST] =  useState(new BinarySearchTree( localStorage.getItem(\"BSTRoot\") ? JSON.parse(localStorage.getItem(\"BSTRoot\")) : null ));\r\n    const [binaryTree, setBinaryTree] = useState(BST.breathFT(BST.getRootNode()));\r\n\r\n    useEffect(() => {\r\n        makeVisualTree();\r\n        localStorage.setItem('BSTRoot', JSON.stringify(BST.getRootNode()));\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n        const height = BST.treeHeight(BST.getRootNode()) + 1;\r\n\r\n        for(i = 0; i < height; i ++){\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n    const wait = (delay, ...args) => new Promise(resolve => setTimeout(resolve, delay, ...args));\r\n    var iForAnimation = 0; \r\n    const createAnimation = async(compare) => {\r\n        await wait(700);\r\n        setSearch(compare[iForAnimation]);\r\n        iForAnimation ++;                   \r\n        if (iForAnimation < compare.length) {          \r\n            await createAnimation(compare);             \r\n        }\r\n    }\r\n\r\n\r\n    const checkIfPresent = (data) => {\r\n        var i, j;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    async function insertToTree(data){\r\n        if(checkIfPresent(data)){\r\n            enqueueSnackbar(data +\" is already present !!\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        let animation = BST.insertNode(data);\r\n        animation.push(search);\r\n        setBinaryTree(BST.breathFT(BST.getRootNode()));\r\n        enqueueSnackbar(data + \" added to binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n        if(showAnimation){\r\n            await createAnimation(animation);\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    const deleteFromTree = (data) => {\r\n        if(!checkIfPresent(data)){\r\n            enqueueSnackbar(data + \" not found !!\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n    \r\n        BST.deleteNode(data);\r\n        setBinaryTree(BST.breathFT(BST.getRootNode()));\r\n\r\n        enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        var i, j;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    setSearch(data);\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            BST.deleteTree();\r\n            setBinaryTree(BST.breathFT(BST.getRootNode()));\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        if(operation === \"Insert\"){\r\n            insertToTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Delete\"){\r\n            deleteFromTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            searchInTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Delete\" >Delete</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"80px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                \r\n                <span><Tooltip title='Show Animation' placement='bottom' arrow>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" checked={showAnimation} onChange={() => {setShowAnimation(!showAnimation)}} />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </Tooltip></span>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Binary-Tree-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                \r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BST\r\n","import './TreeCss.css';\r\nimport BST from './Components/BST';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\n\r\nfunction BSTApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"BST Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <BST />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BSTApp;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\n\r\nfunction MaxHeap() {\r\n    const [binaryTree, setBinaryTree] = useState(localStorage.getItem(\"maxHeap\") ? JSON.parse(localStorage.getItem(\"maxHeap\")) : [])\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n\r\n    useEffect(() => {\r\n        makeVisualTree();\r\n        localStorage.setItem(\"maxHeap\", JSON.stringify(binaryTree));\r\n    }, [binaryTree])\r\n\r\n\r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n        const height = parseInt(Math.log2(binaryTree.length)) + 1;\r\n\r\n        for(i = 0; i < height; i ++){\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n\r\n            for(j = 0; j < Math.pow(2, i); j ++){\r\n                var myIndex = Math.pow(2, i) - 1 + j;\r\n                if(myIndex < binaryTree.length){\r\n                    tempList.push(binaryTree[myIndex]);\r\n                }\r\n                else{\r\n                    tempList.push(0)\r\n                }\r\n\r\n                if(j !== Math.pow(2, i) - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        var i = newTree.length, myParent, temp;\r\n        newTree.push(data);\r\n\r\n        while(i !== 0){\r\n            myParent = parseInt((i-1)/2);\r\n            if(newTree[i] > newTree[myParent]){\r\n                temp = newTree[i];\r\n                newTree[i] = newTree[myParent];\r\n                newTree[myParent] = temp;\r\n                i = myParent;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(data + \" added to binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        if(binaryTree.length === 0){\r\n            enqueueSnackbar(\"Nothing to delete\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        var newTree = [...binaryTree];\r\n        var newHead = newTree.pop(), i = 0, temp;\r\n\r\n        if(newTree.length > 0){\r\n            newTree[i] = newHead;\r\n            var leftChild, rightChild\r\n\r\n            while(true){\r\n                leftChild = i*2 + 1;\r\n                rightChild = i*2 + 2;\r\n\r\n                if(leftChild >= newTree.length){\r\n                    break;\r\n                }\r\n                else if(rightChild >= newTree.length){\r\n                    if(newTree[leftChild] > newTree[i]){\r\n                        temp = newTree[i];\r\n                        newTree[i] = newTree[leftChild];\r\n                        newTree[leftChild] = temp;\r\n                    }\r\n                    break;\r\n                }\r\n                else{\r\n                    if(newTree[leftChild] >= newTree[rightChild]){\r\n                        if(newTree[leftChild] > newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[leftChild];\r\n                            newTree[leftChild] = temp;\r\n\r\n                            i = leftChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                    else{\r\n                        if(newTree[rightChild] > newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[rightChild];\r\n                            newTree[rightChild] = temp;\r\n\r\n                            i = rightChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(\"Deleted root node successfully.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        var i;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            if(binaryTree[i] === data){\r\n                setSearch(data);\r\n                enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                    variant: 'success',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            setBinaryTree([]);\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            searchInTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Max Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n                \r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                \r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MaxHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MaxHeap from './Components/MaxHeap';\r\n\r\n\r\nfunction MaxHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Max Heap Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MaxHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MaxHeapApp;","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\n\r\nfunction MinHeap() {\r\n    const [binaryTree, setBinaryTree] = useState(localStorage.getItem(\"minHeap\") ? JSON.parse(localStorage.getItem(\"minHeap\")) : [])\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n\r\n    useEffect(() => {\r\n        makeVisualTree();\r\n        localStorage.setItem(\"minHeap\", JSON.stringify(binaryTree));\r\n    }, [binaryTree])\r\n\r\n\r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n        const height = parseInt(Math.log2(binaryTree.length)) + 1;\r\n\r\n        for(i = 0; i < height; i ++){\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n\r\n            for(j = 0; j < Math.pow(2, i); j ++){\r\n                var myIndex = Math.pow(2, i) - 1 + j;\r\n                if(myIndex < binaryTree.length){\r\n                    tempList.push(binaryTree[myIndex]);\r\n                }\r\n                else{\r\n                    tempList.push(0)\r\n                }\r\n\r\n                if(j !== Math.pow(2, i) - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        var i = newTree.length, myParent, temp;\r\n        newTree.push(data);\r\n\r\n        while(i !== 0){\r\n            myParent = parseInt((i-1)/2);\r\n            if(newTree[i] < newTree[myParent]){\r\n                temp = newTree[i];\r\n                newTree[i] = newTree[myParent];\r\n                newTree[myParent] = temp;\r\n                i = myParent;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(data + \" added to binary search tree.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        if(binaryTree.length === 0){\r\n            enqueueSnackbar(\"Nothing to delete\", {\r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        var newTree = [...binaryTree];\r\n        var newHead = newTree.pop(), i = 0, temp;\r\n\r\n        if(newTree.length > 0){\r\n            newTree[i] = newHead;\r\n            var leftChild, rightChild\r\n\r\n            while(true){\r\n                leftChild = i*2 + 1;\r\n                rightChild = i*2 + 2;\r\n\r\n                if(leftChild >= newTree.length){\r\n                    break;\r\n                }\r\n                else if(rightChild >= newTree.length){\r\n                    if(newTree[leftChild] < newTree[i]){\r\n                        temp = newTree[i];\r\n                        newTree[i] = newTree[leftChild];\r\n                        newTree[leftChild] = temp;\r\n                    }\r\n                    break;\r\n                }\r\n                else{\r\n                    if(newTree[leftChild] <= newTree[rightChild]){\r\n                        if(newTree[leftChild] < newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[leftChild];\r\n                            newTree[leftChild] = temp;\r\n\r\n                            i = leftChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                    else{\r\n                        if(newTree[rightChild] < newTree[i]){\r\n                            temp = newTree[i];\r\n                            newTree[i] = newTree[rightChild];\r\n                            newTree[rightChild] = temp;\r\n\r\n                            i = rightChild;\r\n                        }\r\n                        else{\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setBinaryTree(newTree);\r\n        enqueueSnackbar(\"Deleted root node successfully.\", {\r\n            variant: 'success',\r\n        });\r\n        return;\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        var i;\r\n        for(i = 0; i < binaryTree.length; i ++){\r\n            if(binaryTree[i] === data){\r\n                setSearch(data);\r\n                enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                    variant: 'success',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            setBinaryTree([]);\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            searchInTree(parseInt(input));\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Min Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                \r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MinHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MinHeap from './Components/MinHeap';\r\n\r\n\r\nfunction MinHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Min Heap Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MinHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MinHeapApp;","import React, { useEffect, useRef, useState } from 'react'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction CanvasHome() {\r\n    const [url, setUrl] = useState('');\r\n    const [recentBins, setRecentBins] =  useState(localStorage.getItem('recentCanvas') ? JSON.parse(localStorage.getItem('recentCanvas')) : []);\r\n    const inputRef = useRef(null);\r\n    let history = useHistory();\r\n\r\n    const generateNewURL = () => {\r\n        let r = Math.random().toString(36).substring(4);\r\n        history.push(\"/canvas/\" + r);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        var path = url;\r\n        if(url[0] === \"/\"){\r\n            path = path.substring(1, path.length);\r\n        }\r\n        path = path.split(\"/\");\r\n        if(path.length === 1){\r\n            if(path[0] !== \"\"){\r\n                history.push(\"/canvas/\" + path[0]);\r\n            }\r\n        }\r\n        else{\r\n            if(path[0] === \"canvas\"){\r\n                if(path[1] !== \"\"){\r\n                    history.push(\"/canvas/\" + path[1]);\r\n                }\r\n            }\r\n        }\r\n        // console.log(path);\r\n\r\n    }\r\n\r\n    \r\n    const removeRecent = (canvas) => {\r\n        const removeArr = [...recentBins].filter(bin => bin !== canvas);\r\n        setRecentBins(removeArr);\r\n        localStorage.setItem('recentCanvas', JSON.stringify(removeArr))\r\n    }\r\n\r\n    \r\n    const gotoRecent = (canvas) => {\r\n        history.push(\"/canvas/\" + canvas);\r\n    }\r\n\r\n\r\n    const loadRecentCanvas = recentBins.map(index => {\r\n            return (\r\n                <div style={{display:\"inline-table\"}} >\r\n                    <div className=\"recent-pastebin\">\r\n                        <div style={{cursor:\"pointer\"}} onClick={() => gotoRecent(index)}>\r\n                            {\"/\" + index}\r\n                        </div>\r\n                        <div className=\"icons\">\r\n                            <Tooltip title='Delete' placement='bottom' arrow>\r\n                                <span>\r\n                                    <RiDeleteBin5Line \r\n                                        onClick={() => removeRecent(index)}\r\n                                    />\r\n                                </span>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    })\r\n    \r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n    return ( \r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"main-blog-di\">\r\n                <div className=\"blog-title\">Draw Bin</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>A canvas for sharing drawings without any authentication.</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Go to some URl like \"/canvas/any\"</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Draw anything</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Save</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Share the URL with anyone</div>\r\n                <br />\r\n                <form className=\"todo-form\" onSubmit={handleSubmit} style={{marginBottom:\"6px\"}}>\r\n                    <div className=\"edit-form\" >\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Type any url\" \r\n                                value={url}\r\n                                className=\"todo-input\"\r\n                                onChange={e => setUrl(e.target.value)}\r\n                                ref={inputRef}\r\n                                style={{maxWidth:\"275px\"}}\r\n                            />\r\n                            <button className=\"todo-button edit\">Go</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}} >OR</div> \r\n                <div className=\"redirect-button\" style={{maxWidth:\"230px\"}} onClick={() => generateNewURL()} >Generate random URL</div>\r\n                {recentBins.length > 0 ?\r\n                    <>\r\n                        <br />\r\n                        <div className=\"blog-para\" style={{textAlign:\"center\"}}>Recent Paste Bins</div>\r\n                        <div className=\"recent-pastebin-outer\" style={{maxWidth:\"500px\"}}>\r\n                            {loadRecentCanvas}\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasHome\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport firebase from '../firebase';\r\nimport { useSnackbar } from 'notistack';\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport CanvasDraw from 'react-canvas-draw';\r\nimport { SliderPicker } from 'react-color';\r\n\r\nfunction CanvasApp() {\r\n    const canvas = useRef();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Paste Bin | Shlok Zanwar\";\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowCanvasSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowCanvasSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    const [brushSize, setBrushSize] = useState(3);\r\n    const [savePath, setSavePath] = useState(\"\");\r\n    const [result, setResult] = useState('');\r\n    const [color, setColor] = useState({hex: \"#52BF23\"});\r\n    const [canvasData, setCanvasData] = useState(null);\r\n\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = command;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    \r\n    const handleColorChange = color => setColor(color);\r\n\r\n\r\n    const handleBrushSize = e => {\r\n        if(e.target.value > 10){\r\n            setBrushSize(10);\r\n        }\r\n        else{\r\n            setBrushSize(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n    const saveRecent = (path) => {\r\n        var recentCanvas = localStorage.getItem('recentCanvas') ? JSON.parse(localStorage.getItem('recentCanvas')) : [];\r\n        recentCanvas = [...recentCanvas].filter(canvas => canvas !== path);\r\n        recentCanvas = [path, ...recentCanvas];\r\n        if(recentCanvas.length > 6){\r\n            recentCanvas.pop();\r\n        }\r\n        localStorage.setItem('recentCanvas', JSON.stringify(recentCanvas));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(window.location.pathname);\r\n        var path = window.location.pathname;\r\n        // console.log(path[path.length - 1]);\r\n\r\n        if(path[path.length - 1] === \"/\"){\r\n            path = path.substring(0, path.length - 1);\r\n            window.location.pathname = path;\r\n        }\r\n        path = path.substring(1, path.length);\r\n        // console.log(path)\r\n        path = path.split(\"/\");\r\n        // console.log(path)\r\n\r\n        if(path.length > 2){\r\n            window.location.pathname = \"/\" + path[0] + \"/\" + path[1];\r\n        }\r\n\r\n        if(path[0].toLowerCase() === \"canvas\"){\r\n            setSavePath(path[1].toLowerCase());\r\n            firebase.getCanvasData(path[1].toLowerCase()).then(setResult, saveRecent(path[1]));\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(result === undefined){\r\n            firebase.addCanvasData(savePath, {\"lines\":[],\"width\":\"100%\",\"height\":\"100%\"});\r\n            setCanvasData({\"lines\":[],\"width\":\"100%\",\"height\":\"100%\"});\r\n        }\r\n        else{\r\n          setCanvasData(result);\r\n        //   console.log(result);\r\n        }\r\n    }, [result])\r\n\r\n\r\n    const saveCanvas = e => {\r\n        firebase.addCanvasData(savePath, canvas.current.getSaveData());\r\n        console.log(\"Saving\");\r\n        enqueueSnackbar(\"Details saved successfully\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"canvas-controls\">\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Size\" \r\n                    value={brushSize}\r\n                    className=\"canvas-brush-size\"\r\n                    onChange={handleBrushSize}\r\n                />\r\n\r\n                <div style={{width:\"210px\", paddingRight:\"10px\"}}>\r\n                    <SliderPicker color={color} onChangeComplete={handleColorChange} />\r\n                </div>\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={() => {canvas.current.undo()}}\r\n                >\r\n                    &nbsp;&nbsp; Undo &nbsp;&nbsp; \r\n                </button>\r\n\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={() => {canvas.current.clear()}}\r\n                >\r\n                    &nbsp;&nbsp; Clear &nbsp;&nbsp; \r\n                </button>\r\n\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={saveCanvas}\r\n                >\r\n                    &nbsp;&nbsp; Save &nbsp;&nbsp; \r\n                </button>\r\n                <button className=\"save-share-pastebin\" onClick={() => {copyToClipboard(window.location.href)}} >\r\n                    <FaShare /> \r\n                </button>\r\n            </div >\r\n            <div className=\"canvas-div\">\r\n            {canvasData ? \r\n                <CanvasDraw\r\n                    ref={canvas}\r\n                    hideGrid\r\n                    saveData={canvasData}\r\n                    backgroundColor={\"transparent\"}\r\n                    brushColor={color.hex}\r\n                    brushRadius={brushSize}\r\n                    lazyRadius={0}\r\n                    canvasWidth={\"1500px\"}\r\n                    canvasHeight={\"790px\"}\r\n                /> : <div style={{color: \"rgb(82, 192, 31)\"}}>Loading ...</div> \r\n            }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasApp\r\n\r\n","import React, { useEffect } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport BlogTemplate from './BlogTemplates/BlogTemplate';\r\nimport Home from './HomeComponents/Home';\r\nimport MyNavbar from \"./MyNavbar\";\r\nimport PasteBinHome from './PasteBinComponents/PasteBinHome';\r\nimport PasteBinApp from './PasteBinComponents/PasteBinApp';\r\nimport TodoApp from \"./TodoAppComponents/TodoApp\"\r\nimport BSTApp from './TreeComponents/BSTApp';\r\nimport MaxHeapApp from './TreeComponents/MaxHeapApp';\r\nimport MinHeapApp from './TreeComponents/MinHeapApp';\r\nimport CanvasHome from './CanvasComponents/CanvasHome';\r\nimport CanvasApp from './CanvasComponents/CanvasApp';\r\n// import ImageModel from './ModelApps/ImageModel';\r\n\r\n\r\nfunction RoutePaths() {\r\n\r\n    var forUseEffect;\r\n    useEffect(() => {\r\n        localStorage.removeItem(\"redirectTo\");\r\n    }, [forUseEffect])\r\n\r\n    return (\r\n        <Router>\r\n            <MyNavbar />\r\n\r\n            <Switch>\r\n\r\n                <Route path=\"/blogs/\">\r\n                    <BlogTemplate />\r\n                </Route>\r\n\r\n                {/* <Route path=\"/models/10animals\">\r\n                    <ImageModel modelInfo={require(\"./ModelApps/ModelDetails/10Animals.json\")} />\r\n                </Route> */}\r\n\r\n                <Route path=\"/todo-app\">\r\n                    <TodoApp />\r\n                </Route>\r\n\r\n                <Route exact path=\"/pastebin\">\r\n                    <PasteBinHome />\r\n                </Route>\r\n                <Route path=\"/pastebin/\">\r\n                    <PasteBinApp />\r\n                </Route>\r\n\r\n                <Route exact path=\"/canvas\">\r\n                    <CanvasHome />\r\n                </Route>\r\n                <Route path=\"/canvas/\">\r\n                    <CanvasApp />\r\n                </Route>\r\n\r\n                <Route path=\"/bst-visualization\">\r\n                    <BSTApp />\r\n                </Route>\r\n                <Route path=\"/max-heap-visualization\">\r\n                    <MaxHeapApp />\r\n                </Route>\r\n                <Route path=\"/min-heap-visualization\">\r\n                    <MinHeapApp />\r\n                </Route>\r\n\r\n\r\n                <Route path=\"/\">\r\n                    {\r\n                        localStorage.getItem('redirectTo') ? <Redirect to={localStorage.getItem('redirectTo')} /> \r\n                        : null\r\n                        \r\n                    }\r\n                    <Home />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RoutePaths\r\n","import './App.css';\nimport RoutePaths  from './RoutePaths'\n\nfunction App() {\n  return (\n    <div>\n      <RoutePaths />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { SnackbarProvider } from 'notistack';\nimport axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:8000';\naxios.defaults.baseURL = 'https://shlok-m-server.herokuapp.com/';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider\n      maxSnack={2}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={3000}\n    >\n      <App />\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}