{"version":3,"sources":["Functions/Components.js","ExpenseTracker/ExpenseTrackerById.js"],"names":["InputWithLabel","label","children","isInline","labelWidth","divStyle","style","display","flexDirection","alignItems","width","color","fontWeight","marginRight","justifyContent","RangePicker","DatePicker","ExpenseTrackerById","id","useParams","document","title","React","useState","appLoading","setAppLoading","password","localStorage","expenseTrackerPasswords","JSON","parse","is_protected","isAuthenticated","isProtected","changePasswordOpen","userDetails","setUserDetails","transactionId","description","amount","tags","timestamp","moment","unix","editTransaction","setEditTransaction","subtract","startOf","endOf","dateRange","setDateRange","transactions","setTransactions","setTags","tagsMap","setTagsMap","filteredTransactions","setFilteredTransactions","textSearch","setTextSearch","selectedTags","setSelectedTags","showExpType","setShowExpType","checkInitialLogin","a","axios","post","route_name","then","res","data","catch","err","console","log","request","status","useEffect","setItem","getTags","get","params","tMpas","tag","key","getTransactions","start_time","end_time","sort","b","editOpen","filter","transaction","length","toLowerCase","indexOf","padding","paddingBottom","Helmet","size","maxWidth","rowGap","HandlePasswordChange","HandleEditTransaction","columnGap","value","onChange","date","format","allowClear","type","icon","onClick","onConfirm","removeItem","window","location","pathname","okText","cancelText","background","marginTop","placeholder","Option","e","target","flexFlow","mode","minWidth","showSearch","filterOption","input","option","name","map","fontSize","textAlign","reduce","acc","curr","Math","abs","maxHeight","overflow","index","Transaction","TagWiseGraph","loading","setLoading","tempDetails","setTempDetails","enqueueSnackbar","useSnackbar","handleSubmit","trim","variant","updateLocalStorage","stringify","new_password","message","error","visible","okButtonProps","disabled","onOk","cancelButtonProps","onCancel","checked","Password","border","onDoubleClick","wordBreak","t","closable","marginBottom","transactionType","setTransactionType","transaction_id","parseInt","handleCancel","setTagLoading","tagName","setTagName","handleAddTag","tag_id","footer","TextArea","showTime","dropdownRender","menu","margin","tagWiseGraphData","setTagWiseGraphData","processData","Object","values","xField","yField","legend","content","originData","offset","minBarWidth","maxBarWidth","height"],"mappings":"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","file":"static/js/28.e6b7e319.chunk.js","sourcesContent":["export const InputWithLabel = ({ \r\n    label, \r\n    children, \r\n    isInline = false, \r\n    labelWidth = \"auto\",\r\n    divStyle = {}\r\n}) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"inline-flex\",\r\n                flexDirection: isInline ? \"row\" : \"column\",\r\n                alignItems: isInline ? \"center\" : \"flex-start\",\r\n                width: \"100%\",\r\n                ...divStyle\r\n            }}\r\n        >\r\n            <label\r\n                style={{\r\n                    color: \"var(--inputLabelColor)\",\r\n                    fontWeight: \"bold\",\r\n                    marginRight: \"10px\",\r\n                    width: labelWidth,\r\n                    display: \"inline-flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                }}\r\n            >\r\n                {label}\r\n            </label>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n","import { Button, DatePicker, Divider, Input, message, Modal, Popconfirm, Select, Space, Switch, Tag } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Helmet } from 'react-helmet';\r\nimport { useParams } from 'react-router-dom';\r\nimport { InputWithLabel } from '../Functions/Components';\r\nimport moment from 'moment';\r\nimport { MdModeEditOutline, MdAdd, MdExitToApp } from 'react-icons/md';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Bar } from '@ant-design/charts';\r\nimport { SemipolarLoading } from 'react-loadingg';\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\nexport default function ExpenseTrackerById() {\r\n    const id = useParams().id;\r\n    document.title = \"Expense tracker | Shlok Zanwar\";\r\n\r\n    const [appLoading, setAppLoading] = React.useState(true);\r\n    const [userDetails, setUserDetails] = React.useState({\r\n        id: id,\r\n        password: localStorage.expenseTrackerPasswords? JSON.parse(localStorage.expenseTrackerPasswords)[id] || '' : '',\r\n        is_protected: false,\r\n\r\n        isAuthenticated: false,\r\n        isProtected: false,\r\n        changePasswordOpen: false,\r\n    });\r\n    const [editTransaction, setEditTransaction] = React.useState({\r\n        transactionId: null,\r\n\r\n        title: '',\r\n        description: '',\r\n        amount: 0,\r\n        tags: [],\r\n        timestamp: moment().unix(),\r\n\r\n        tags: [],\r\n        editOpen: false,\r\n    });\r\n    const [dateRange, setDateRange] = React.useState([\r\n        moment().subtract(7, 'days').startOf('day'),\r\n        moment().endOf('day'),\r\n    ])\r\n\r\n    const [transactions, setTransactions] = React.useState([]);\r\n    const [tags, setTags] = React.useState([]);\r\n    const [tagsMap, setTagsMap] = React.useState({});\r\n    const [filteredTransactions, setFilteredTransactions] = React.useState([]);\r\n\r\n    const [textSearch, setTextSearch] = React.useState('');\r\n    const [selectedTags, setSelectedTags] = React.useState([]);\r\n    const [showExpType, setShowExpType] = React.useState('all');\r\n    \r\n\r\n    const checkInitialLogin = async () => {\r\n        setAppLoading(true);\r\n\r\n        await axios.post(`/ep_tracker/login`, {\r\n            route_name: userDetails.id,\r\n            password: userDetails.password,\r\n        })\r\n            .then(res => {\r\n                setUserDetails({\r\n                    ...userDetails,\r\n                    isAuthenticated: true,\r\n                    isProtected: res.data.is_protected,\r\n                    changePasswordOpen: false,\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                if (err.request.status === 404) {\r\n                    // TODO: Handle route not found Error \r\n                    setUserDetails({\r\n                        ...userDetails,\r\n                        isAuthenticated: true,\r\n                        password: '',\r\n                        isProtected: false,\r\n                    });\r\n                }\r\n                else if (err.request.status === 401) {\r\n                    // TODO: Handle unauthorized Error\r\n                    setUserDetails({\r\n                        ...userDetails,\r\n                        isAuthenticated: false,\r\n                        isProtected: true,\r\n                    });\r\n                }\r\n            })\r\n\r\n        setAppLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkInitialLogin();\r\n        localStorage.setItem(\"lastUsedExpenseTracker\", id);\r\n    }, [id]);\r\n\r\n\r\n    const getTags = async () => {\r\n        await axios.get('/ep_tracker/get_tags', {\r\n            params: {\r\n                route_name: userDetails.id,\r\n            }\r\n        })\r\n            .then(res => {\r\n                // console.log(res.data.tags);\r\n                setTags(res.data.tags);\r\n\r\n                var tMpas = {...tagsMap};\r\n                for(let tag of res.data.tags){\r\n                    tMpas[tag.key] = tag;\r\n                }\r\n                setTagsMap(tMpas);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const getTransactions = async () => {\r\n        await axios.get('/ep_tracker/get_transactions', {\r\n            params: {\r\n                route_name: userDetails.id,\r\n                start_time: dateRange[0].startOf('day').unix(),\r\n                end_time: dateRange[1].endOf('day').unix(),\r\n            }\r\n        })\r\n            .then(res => {\r\n                // Sort the transactions by timestamp\r\n                var data = res.data.transactions.sort((a, b) => {\r\n                    return b.timestamp - a.timestamp;\r\n                });\r\n                setTransactions(data);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(userDetails.isAuthenticated && !editTransaction.editOpen){\r\n            getTransactions();\r\n        }\r\n    } , [dateRange, editTransaction.editOpen, userDetails.isAuthenticated]);\r\n    \r\n\r\n    useEffect(() => {\r\n        if(!userDetails.isAuthenticated){\r\n            return;\r\n        }\r\n        getTags();\r\n        // getTransactions();\r\n    } , [userDetails.isAuthenticated]);\r\n\r\n\r\n    const applyFiltersToTransactions = () => {\r\n        setFilteredTransactions(\r\n            transactions.filter(transaction => {\r\n                if(showExpType === 'expense' && transaction.amount > 0){\r\n                    return false;\r\n                }\r\n                if(showExpType === 'income' && transaction.amount < 0){\r\n                    return false;\r\n                }\r\n\r\n\r\n                if(textSearch.length > 0){\r\n                    if(transaction.title.toLowerCase().indexOf(textSearch.toLowerCase()) === -1\r\n                        && transaction.description.toLowerCase().indexOf(textSearch.toLowerCase()) === -1\r\n                    ){\r\n                        return false;\r\n                    }\r\n                }\r\n                if(selectedTags.length > 0){\r\n                    //  Check if any of the transaction tags match any of the selected tags\r\n                    for(let tag of transaction.tags){\r\n                        if(selectedTags.indexOf(tag) !== -1){\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(\"tags\", tags);\r\n        // console.log(\"transactions\", transactions);\r\n        applyFiltersToTransactions();\r\n    } , [tags, transactions, textSearch, selectedTags, showExpType]);\r\n\r\n    return (\r\n        <div style={{padding: '10px', paddingBottom: '300px'}}>\r\n            <Helmet>\r\n                <style>\r\n                    {`            \r\n                    body {\r\n                        text-align: center;\r\n                        background-color: #161a2b;\r\n                        background-image: none;\r\n                    }\r\n\r\n                    ::selection {\r\n                        background: rgba(0, 0, 0, 0.489);\r\n                    }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            {\r\n                appLoading ? (\r\n                    <SemipolarLoading size=\"large\" color=\"rgba(255, 84, 17, 1)\" />\r\n                ) : (\r\n                    !userDetails.isAuthenticated ? (\r\n                        <HandlePasswordChange\r\n                            userDetails={userDetails}\r\n                            setUserDetails={setUserDetails}\r\n                        />\r\n                    ) : (\r\n                        <div style={{width: '100%', display: 'inline-flex', flexDirection: 'column', maxWidth: '600px', rowGap: '10px'}}>\r\n                            {\r\n                                userDetails.changePasswordOpen && (\r\n                                    <HandlePasswordChange\r\n                                        userDetails={userDetails}\r\n                                        setUserDetails={setUserDetails}\r\n                                    />\r\n                                )\r\n                            }\r\n                            {\r\n                                editTransaction.editOpen && (\r\n                                    <HandleEditTransaction\r\n                                        userDetails={userDetails}\r\n                                        editTransaction={editTransaction}\r\n                                        setEditTransaction={setEditTransaction}\r\n\r\n                                        tags={tags}\r\n                                        setTags={setTags}\r\n                                        getTags={getTags}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                            <h3 style={{color: '#fff'}}>\r\n                                ID : {userDetails.id} | {userDetails.isProtected ? 'Protected' : 'Public'}\r\n                            </h3>\r\n\r\n                            <div style={{display: 'inline-flex', columnGap: '10px', width: '100%', justifyContent: 'space-between', color: '#fff', alignItems: 'flex-end'}}>\r\n                                <InputWithLabel label=\"Select Date Range\">\r\n                                    <RangePicker\r\n                                        value={dateRange}\r\n                                        onChange={(date) => {\r\n                                            setDateRange(date);\r\n                                            // console.log(date);\r\n                                        }}\r\n                                        format=\"MMM Do, YYYY\"\r\n                                        allowClear={false}\r\n                                        // style={{width: '100%'}}\r\n                                    />\r\n                                </InputWithLabel>\r\n                                <Button \r\n                                    type='primary'\r\n                                    icon={<MdModeEditOutline />} \r\n                                    onClick={() => {\r\n                                        setUserDetails({\r\n                                            ...userDetails,\r\n                                            changePasswordOpen: true,\r\n                                        });\r\n                                    }} \r\n                                />\r\n                                <Popconfirm\r\n                                    title=\"Are you sure you want to logout?\"\r\n                                    onConfirm={() => {\r\n                                        localStorage.removeItem(\"lastUsedExpenseTracker\");\r\n                                        window.location.pathname = '/apps/expense-tracker';\r\n                                    }}\r\n                                    okText=\"Yes\"\r\n                                    cancelText=\"No\"\r\n                                >\r\n                                    <Button\r\n                                        type='danger'\r\n                                        icon={<MdExitToApp />}\r\n                                    />\r\n                                </Popconfirm>\r\n                                \r\n                            </div>\r\n\r\n                            <Divider style={{background: '#fff'}} />\r\n\r\n                            <div style={{display: 'inline-flex', flexDirection: 'row', width: '100%', columnGap: '10px', color: '#fff', alignItems: 'flex-start', marginTop: '0px', justifyContent: 'space-between'}}>\r\n                                \r\n                                <InputWithLabel label=\"Type\" divStyle={{width: 'auto'}}>\r\n                                    <Select\r\n                                        style={{width: '100px'}}\r\n                                        placeholder='Select Type'\r\n                                        value={showExpType}\r\n                                        onChange={(type) => {\r\n                                            setShowExpType(type);\r\n                                        }}\r\n                                    >\r\n                                        <Select.Option value='all'>All</Select.Option>\r\n                                        <Select.Option value='expense'>Expense</Select.Option>\r\n                                        <Select.Option value='income'>Income</Select.Option>\r\n                                    </Select>\r\n                                </InputWithLabel>\r\n\r\n                                <InputWithLabel label=\"Search\" divStyle={{width: '100%'}}>\r\n                                    <Input\r\n                                        placeholder='Search'\r\n                                        value={textSearch}\r\n                                        onChange={(e) => {\r\n                                            setTextSearch(e.target.value);\r\n                                        } }\r\n                                        style={{width: '100%'}}\r\n                                    />\r\n                                </InputWithLabel>\r\n\r\n                            </div>\r\n                            <div style={{display: 'inline-flex', flexDirection: 'row', width: '100%', rowGap: '10px', columnGap: '10px', color: '#fff', alignItems: 'flex-start', marginTop: '10px', justifyContent: 'space-between', flexFlow: 'wrap'}}>\r\n\r\n                                <InputWithLabel label=\"Filter by Tags\">\r\n                                    <Select\r\n                                        mode='multiple'\r\n                                        style={{width: '100%', minWidth: '200px'}}\r\n                                        placeholder='Select Tags'\r\n                                        value={selectedTags}\r\n                                        onChange={(tags) => {\r\n                                            setSelectedTags(tags);\r\n                                        }}\r\n                                        showSearch={true}\r\n                                        filterOption={(input, option) => option.name.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {tags.map(tag => (\r\n                                            <Select.Option key={tag.key} value={tag.key} name={tag.tag}>{tag.tag}</Select.Option>\r\n                                        ))}\r\n                                    </Select>\r\n                                </InputWithLabel>\r\n                            </div>\r\n\r\n                            <div style={{marginTop: '50px', color: '#fff', fontSize: '18px', display: 'inline-flex', justifyContent: 'space-between', alignItems: 'flex-end'}}>\r\n                                <div style={{display: 'inline-flex', flexDirection: 'column', textAlign: 'left'}}>\r\n                                    <div>\r\n                                        <div style={{display: 'inline-flex', minWidth: '150px'}}>\r\n                                            Amount Received\r\n                                        </div>\r\n                                        <span style={{color: \"rgb(69, 163, 25)\"}}>\r\n                                            {filteredTransactions.reduce((acc, curr) => {\r\n                                                return curr.amount > 0 ? acc + curr.amount : acc;\r\n                                            } , 0)}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div style={{display: 'inline-flex', minWidth: '150px'}}>\r\n                                            Amount Spent\r\n                                        </div>\r\n                                        <span style={{color: \"rgb(255, 20, 79)\"}}>\r\n                                            {\r\n                                                Math.abs(filteredTransactions.reduce((acc, curr) => {\r\n                                                    return curr.amount < 0 ? acc + curr.amount : acc;\r\n                                                } , 0))\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <Button\r\n                                    type='primary'\r\n                                    icon={<MdAdd />}\r\n                                    onClick={() => {\r\n                                        setEditTransaction({\r\n                                            transactionId: null,\r\n\r\n                                            title: '',\r\n                                            description: '',\r\n                                            amount: 0,\r\n                                            tags: [],\r\n                                            timestamp: moment().unix(),\r\n\r\n                                            tags: [],\r\n                                            editOpen: true,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    Add\r\n                                </Button>\r\n\r\n                            </div>\r\n                            <div style={{marginTop: '10px', maxHeight: '400px', overflow: 'auto'}}>\r\n                                {\r\n                                    filteredTransactions.map((transaction, index) => {\r\n                                        return (\r\n                                            <Transaction\r\n                                                key={index}\r\n                                                transaction={transaction}\r\n                                                userDetails={userDetails}\r\n                                                editTransaction={editTransaction}\r\n                                                setEditTransaction={setEditTransaction}\r\n                                                tagsMap={tagsMap}\r\n                                                getTags={getTags}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <Divider style={{background: '#fff', marginTop: '50px'}} />\r\n\r\n                            <div style={{marginTop: '0px'}}>\r\n                                <TagWiseGraph\r\n                                    tags={tags}\r\n                                    tagsMap={tagsMap}\r\n                                    filteredTransactions={filteredTransactions}\r\n                                />\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction HandlePasswordChange({userDetails, setUserDetails}) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [tempDetails, setTempDetails] = useState({\r\n        ...userDetails,\r\n\r\n        // Password\r\n        // isProtected\r\n    });\r\n    const {enqueueSnackbar} = useSnackbar();\r\n\r\n    const handleSubmit = async() => {\r\n        // Check if password is not '' after trim\r\n        if(tempDetails.isProtected && tempDetails.password.trim() === ''){\r\n            enqueueSnackbar('Please enter a password', {variant: 'error'});\r\n            return;\r\n        }\r\n\r\n        \r\n\r\n        setLoading(true);\r\n        if(!userDetails.isAuthenticated && tempDetails.isProtected){\r\n            await axios.post(`/ep_tracker/login`, {\r\n                route_name: userDetails.id,\r\n                password: tempDetails.password,\r\n            })\r\n                .then(res => {\r\n                    setUserDetails({\r\n                        ...userDetails,\r\n                        isAuthenticated: true,\r\n                        isProtected: res.data.is_protected,\r\n                        changePasswordOpen: false,\r\n                    });\r\n                    var updateLocalStorage = localStorage.expenseTrackerPasswords ? JSON.parse(localStorage.expenseTrackerPasswords) : {};\r\n                    updateLocalStorage[userDetails.id] = tempDetails.password;\r\n                    localStorage.setItem('expenseTrackerPasswords', JSON.stringify(updateLocalStorage));\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"err\", err.request.status);\r\n                    if (err.request.status === 404) {\r\n                        // TODO: Handle route not found Error \r\n                        setUserDetails({\r\n                            ...userDetails,\r\n                            isAuthenticated: false,\r\n                            password: '',\r\n                            isProtected: false,\r\n                        });\r\n                    }\r\n                    else if (err.request.status === 401) {\r\n                        // conso\r\n                        enqueueSnackbar('Incorrect password', {variant: 'error'});\r\n                    }\r\n                })\r\n    \r\n        }\r\n        else{\r\n            await axios.post('/ep_tracker/change-password', {\r\n                route_name: userDetails.id,\r\n                is_protected: tempDetails.isProtected,\r\n                password: localStorage.expenseTrackerPasswords? JSON.parse(localStorage.expenseTrackerPasswords)[userDetails.id] : '',\r\n                new_password: tempDetails.password,\r\n            })\r\n                .then(res => {\r\n                    setUserDetails({\r\n                        ...userDetails,\r\n                        changePasswordOpen: false,\r\n    \r\n                        isAuthenticated: true,\r\n    \r\n                        isProtected: tempDetails.isProtected,\r\n                        password: tempDetails.password,\r\n                    });\r\n                    var updateLocalStorage = localStorage.expenseTrackerPasswords ? JSON.parse(localStorage.expenseTrackerPasswords) : {};\r\n                    updateLocalStorage[userDetails.id] = tempDetails.password;\r\n                    localStorage.setItem('expenseTrackerPasswords', JSON.stringify(updateLocalStorage));\r\n                })\r\n                .catch(err => {\r\n                    message.error(\"Error changing password\");\r\n                })\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n    const handleCancel = () => {\r\n        if(!userDetails.isAuthenticated){\r\n            return;\r\n        }\r\n        setUserDetails({...userDetails, changePasswordOpen: false});\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Login\"\r\n            visible={true}\r\n            okButtonProps={{ disabled: loading, loading: loading }}\r\n            okText=\"Save\"\r\n            onOk={() => {\r\n                handleSubmit();\r\n            }}\r\n            cancelButtonProps={{ disabled: loading || !userDetails.isAuthenticated, loading: loading }}\r\n            cancelText=\"Cancel\"\r\n            onCancel={() => {\r\n                handleCancel()\r\n            }}\r\n        >\r\n            <div style={{display: 'inline-flex', flexFlow: 'wrap', columnGap: '10px'}}>\r\n            {\r\n                (!userDetails.isProtected || userDetails.isAuthenticated) && (\r\n                    <InputWithLabel label=\"Is Protected\" >\r\n                        <Switch     \r\n                            checked={tempDetails.isProtected} \r\n                            onChange={(e) => {\r\n                                setTempDetails({...tempDetails, isProtected: e})\r\n                            }}\r\n                        />\r\n                    </InputWithLabel>\r\n                )\r\n            }\r\n                <InputWithLabel label={userDetails.isAuthenticated ? 'New Password' : 'Password'} isInline={false}>\r\n                    <Input.Password\r\n                        placeholder=\"Password\"\r\n                        value={tempDetails.password}\r\n                        // disabled={!tempDetails.isProtected}\r\n                        onChange={(e) => {\r\n                            setTempDetails({...tempDetails, password: e.target.value})\r\n                        }}\r\n                    />\r\n                </InputWithLabel>\r\n            </div>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\n\r\nfunction Transaction({transaction, userDetails, editTransaction, setEditTransaction, tagsMap}) {\r\n    const [showTags, setShowTags] = React.useState(true);\r\n\r\n    const handleEdit = () => {\r\n        setEditTransaction({\r\n            ...editTransaction,\r\n            transactionId: transaction.key,\r\n            title: transaction.title,\r\n            description: transaction.description,\r\n            amount: transaction.amount,\r\n            tags: transaction.tags,\r\n            timestamp: transaction.timestamp,\r\n            editOpen: true,\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <div\r\n            style={{\r\n                display: 'inline-flex',\r\n                border: '1px solid #fff',\r\n                color: '#fff',\r\n                padding: '10px',\r\n                width: '100%',\r\n                maxWidth: '600px',\r\n            }}\r\n            onDoubleClick={handleEdit}\r\n        >\r\n            <div \r\n                style={{\r\n                    display: 'inline-flex',\r\n                    width: '100%',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'flex-end',\r\n                    wordBreak: 'break-all',\r\n                }}\r\n            >\r\n                {/* <span style={{display: 'flex'}}>\r\n                    <MdAttachMoney />\r\n                </span> */}\r\n                <div style={{display: 'inline-flex', flexDirection: 'column', textAlign: 'left', width: '100%'}}>\r\n                    <span style={{fontSize: '20px'}}>\r\n                        {transaction.title}\r\n                    </span>\r\n                    <span>\r\n                        {transaction.description}\r\n                    </span>\r\n                    <div style={{display: 'inline-flex', width: '100%', flexFlow: 'wrap'}}>\r\n                        {\r\n                            transaction.tags.map((t, index) => {\r\n                                return (\r\n                                    <Tag\r\n                                        color={\"green\"}\r\n                                        // onMouseDown={onPreventMouseDown}\r\n                                        closable={false}\r\n                                        // onClose={onClose}\r\n                                        style={{ marginRight: 3, marginBottom: 3 }}\r\n                                    >\r\n                                        {tagsMap[t]?.tag}\r\n                                    </Tag>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div style={{display: 'inline-flex', flexDirection: 'column', textAlign: 'right', width: '100%'}}>\r\n                    <span style={{color: transaction.amount > 0 ? \"rgb(69, 163, 25)\" : \"rgb(255, 20, 79)\", fontSize: '25px'}}>\r\n                        {Math.abs(transaction.amount)}\r\n                    </span>\r\n                    <span>\r\n                        {moment.unix(transaction.timestamp).format('MMM DD, YYYY [at] hh:mm a')}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction HandleEditTransaction({userDetails, editTransaction, setEditTransaction, tags, setTags, getTags}){\r\n    const [loading, setLoading] = useState(false);\r\n    const [transactionType, setTransactionType] = useState(editTransaction.amount <= 0 ? 'expense' : 'income');\r\n\r\n    useEffect(() => {\r\n        setEditTransaction({\r\n            ...editTransaction,\r\n            amount: Math.abs(editTransaction.amount),\r\n        });\r\n    } , []);\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setLoading(true);\r\n        // console.log(editTransaction);\r\n        if(!editTransaction.transactionId){\r\n            await axios.post(`/ep_tracker/add_transaction`, {\r\n                route_name: userDetails.id,\r\n                password: userDetails.password,\r\n                transaction_id: editTransaction.transactionId || \"New\",\r\n                title: editTransaction.title,\r\n                description: editTransaction.description,\r\n                amount:  (transactionType === \"expense\" ? -1 : 1) *parseInt(editTransaction.amount),\r\n                timestamp: editTransaction.timestamp,\r\n                tags: editTransaction.tags,\r\n            })\r\n                .then(res => {\r\n                    setEditTransaction({\r\n                        ...editTransaction,\r\n                        editOpen: false,\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n        else{\r\n            await axios.post(`/ep_tracker/edit_transaction`, {\r\n                route_name: userDetails.id,\r\n                password: userDetails.password,\r\n                transaction_id: editTransaction.transactionId || \"New\",\r\n                title: editTransaction.title,\r\n                description: editTransaction.description,\r\n                amount:  (transactionType === \"expense\" ? -1 : 1) *parseInt(editTransaction.amount),\r\n                timestamp: editTransaction.timestamp,\r\n                tags: editTransaction.tags,\r\n            })\r\n                .then(res => {\r\n                    setEditTransaction({\r\n                        ...editTransaction,\r\n                        editOpen: false,\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setEditTransaction({...editTransaction, editOpen: false});\r\n    }\r\n\r\n    const [tagLoading, setTagLoading] = React.useState(false);\r\n    const [tagName, setTagName] = React.useState('');\r\n    const handleAddTag = async () => {\r\n        setTagLoading(true);\r\n        await axios.post('/ep_tracker/create_tag', {\r\n            route_name: userDetails.id,\r\n            password: userDetails.password,\r\n\r\n            tag_id: tagName,\r\n            tag: tagName\r\n        })\r\n            .then(res => {\r\n                // setTags(t => (\r\n                //     [\r\n                //         ...t, \r\n                //         {\r\n                //             \"key\": res.data.tag_id,\r\n                //             \"tag\": tagName,\r\n                //             \"is_deleted\": 0,\r\n                //             \"route\": userDetails.id,\r\n                //         }\r\n                //     ]\r\n                // ));\r\n                getTags();\r\n                setTagName('');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n        setTagLoading(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title={`${editTransaction.transactionId ? \"Edit\" : \"Add\"} Transaction`}\r\n            visible={true}\r\n            // okButtonProps={{ disabled: loading, loading: loading }}\r\n            // okText={editTransaction.transactionId ? \"Save\" : \"Add\"}\r\n            // onOk={() => {\r\n            //     handleSubmit();\r\n            // }}\r\n            // cancelButtonProps={{ disabled: loading, loading: loading }}\r\n            // cancelText=\"Cancel\"\r\n            onCancel={() => {\r\n                handleCancel()\r\n            }}\r\n\r\n            footer={[\r\n                (\r\n                    <Button \r\n                        key=\"back\" \r\n                        disabled={loading}\r\n                        loading={loading}\r\n                        onClick={() => {\r\n                            handleCancel()\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                ),\r\n                (\r\n                    editTransaction.transactionId && (\r\n                        <Popconfirm\r\n                            title=\"Are you sure you want to delete this transaction?\"\r\n                            onConfirm={async() => {\r\n                                setLoading(true);\r\n                                await axios.get(`/ep_tracker/delete_transaction`, {\r\n                                    params: {\r\n                                        route_name: userDetails.id,\r\n                                        password: userDetails.password,\r\n                                        transaction_id: editTransaction.transactionId,\r\n                                    }\r\n                                })\r\n                                    .then(res => {\r\n                                        setEditTransaction({\r\n                                            ...editTransaction,\r\n                                            editOpen: false,\r\n                                        });\r\n                                    })\r\n                                    .catch(err => {\r\n                                        console.log(err);\r\n                                    })\r\n                                setLoading(false);\r\n                            }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button\r\n                                key=\"delete\"\r\n                                disabled={loading}\r\n                                loading={loading}\r\n                                type=\"danger\"\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Popconfirm>\r\n                    )\r\n                ),\r\n                (\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={() => {\r\n                        handleSubmit();\r\n                    } }>\r\n                        Save\r\n                    </Button>\r\n                )\r\n            ]}\r\n\r\n        >\r\n            <div style={{display: 'inline-flex', flexDirection: 'column', flexFlow: 'wrap', rowGap: '20px', width: '100%'}}>\r\n                <InputWithLabel label=\"Title\" >\r\n                    <Input\r\n                        placeholder=\"Title\"\r\n                        value={editTransaction.title}\r\n                        onChange={(e) => {\r\n                            setEditTransaction({...editTransaction, title: e.target.value})\r\n                        }}\r\n                        disabled={loading}\r\n                    />\r\n                </InputWithLabel>\r\n                <InputWithLabel label=\"Description\" >\r\n                    <Input.TextArea\r\n                        placeholder=\"Description\"\r\n                        value={editTransaction.description}\r\n                        onChange={(e) => {\r\n                            setEditTransaction({...editTransaction, description: e.target.value})\r\n                        }}\r\n                        disabled={loading}\r\n                    />\r\n                </InputWithLabel>\r\n                <div style={{display: 'inline-flex', columnGap: '10px'}}>\r\n                    <InputWithLabel label=\"Transaction Type\" >\r\n                        <Select\r\n                            placeholder=\"Type\"\r\n                            value={transactionType}\r\n                            onChange={(e) => {\r\n                                setTransactionType(e);\r\n                            }}\r\n                            disabled={loading}\r\n                        >\r\n                            <Select.Option value=\"expense\">Expense</Select.Option>\r\n                            <Select.Option value=\"income\">Income</Select.Option>\r\n                        </Select>\r\n                    </InputWithLabel>\r\n                    <InputWithLabel label=\"Amount\" >\r\n                        <Input\r\n                            placeholder=\"Amount\"\r\n                            type={'number'}\r\n                            value={Math.abs(editTransaction.amount)}\r\n                            onChange={(e) => {\r\n                                setEditTransaction({...editTransaction, amount: Math.abs(e.target.value)})\r\n                            }}\r\n                            disabled={loading}\r\n                        />\r\n                    </InputWithLabel>\r\n                </div>\r\n\r\n                <InputWithLabel label=\"Time Stamp\" >\r\n                    <DatePicker\r\n                        disabled={loading}\r\n                        value={moment.unix(editTransaction.timestamp)}\r\n                        showTime={{ format: 'hh:mm A' }}\r\n                        format=\"DD MMM YYYY, hh:mm A\"\r\n                        allowClear={false}\r\n                        onChange={(e) => {\r\n                            setEditTransaction({...editTransaction, timestamp: e.unix()})\r\n                        }}\r\n                    />\r\n                </InputWithLabel>\r\n                  \r\n                <InputWithLabel label=\"Tags\" >\r\n                    <Select\r\n                        mode=\"multiple\"\r\n                        placeholder=\"Tags\"\r\n                        \r\n                        value={editTransaction.tags}\r\n                        style={{ width: '100%', minWidth: '200px' }}\r\n                        onChange={(e) => {\r\n                            setEditTransaction({...editTransaction, tags: e});\r\n                        }}\r\n                        disabled={loading}\r\n                        dropdownRender={menu => (\r\n                            <>\r\n                            {menu}\r\n                            <Divider style={{ margin: '8px 0' }} />\r\n                            <Space style={{ padding: '0 8px 4px' }}>\r\n                                <Input\r\n                                    placeholder=\"Add Tag\"\r\n                                    // ref={node => {\r\n                                    //     this.searchInput = node;\r\n                                    // }}\r\n                                    value={tagName}\r\n                                    onChange={(e) => {\r\n                                        setTagName(e.target.value);\r\n                                    }}\r\n                                    disabled={loading}\r\n                                    width={'100%'}\r\n                                />\r\n                                <Button onClick={() => {handleAddTag()}}>\r\n                                    Add\r\n                                </Button>\r\n                            </Space>\r\n                            </>\r\n                        )}\r\n                    >\r\n                        {tags.map(tag => (\r\n                            <Select.Option key={tag.key} value={tag.key}>{tag.tag}</Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                </InputWithLabel>\r\n\r\n            </div>\r\n\r\n        </Modal>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nfunction TagWiseGraph({tags, tagsMap, filteredTransactions}) {\r\n    const [tagWiseGraphData, setTagWiseGraphData] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        var processData = {};\r\n        // for(let tag of tags) {\r\n        //     processData[tag.key] = {\r\n        //         \"key\": tag.key,\r\n        //         tag: tag.tag,\r\n        //         amount: 0,\r\n        //     }\r\n        // }\r\n        for(let transaction of filteredTransactions) {\r\n            if(transaction.amount > 0){\r\n                continue;\r\n            }\r\n            for(let tag of transaction.tags) {\r\n                if(!processData[tag]) {\r\n                    processData[tag] = {\r\n                        \"key\": tag,\r\n                        tag: tagsMap[tag]?.tag,\r\n                        amount: 0,\r\n                    }\r\n                }\r\n                processData[tag].amount += Math.abs(transaction.amount);\r\n            }\r\n        }\r\n        // console.log(processData);\r\n        setTagWiseGraphData(Object.values(processData));\r\n        \r\n    }, [tagsMap, filteredTransactions]);\r\n\r\n    return (\r\n        <>\r\n            <h3 style={{color: '#fff'}}>\r\n                Tag Wise Graph (Expenses)\r\n            </h3>\r\n            <Bar\r\n                data={tagWiseGraphData}\r\n                xField=\"amount\"\r\n                yField=\"tag\"\r\n                legend={true}\r\n                // legend={{\r\n                //     position: 'top',\r\n                //     offset: 0,\r\n                //     itemGap: 20,\r\n                //     itemWidth: 100,\r\n                //     itemHeight: 20,\r\n                //     textStyle: {\r\n                //         fontSize: 12,\r\n                //         fill: '#333',\r\n                //     },\r\n                // }}\r\n                label={{\r\n                    content: (originData) => {\r\n                        return originData.amount;\r\n                    },\r\n                    offset: 10,\r\n                }}\r\n                minBarWidth={30}\r\n                maxBarWidth={30}\r\n\r\n                style={{\r\n                    maxWidth: '100%',\r\n                    height: '100%',\r\n                    margin: 'auto',\r\n                }}\r\n                // forceFit={true}\r\n                // padding={[20, 20, 20, 20]}\r\n                // animate={true}\r\n                // onClick={(e) => {\r\n                //     console.log(e);\r\n                // }}\r\n\r\n\r\n            />\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\n"],"sourceRoot":""}