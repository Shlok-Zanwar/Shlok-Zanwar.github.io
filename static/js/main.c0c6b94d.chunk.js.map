{"version":3,"sources":["BlogTemplates/BlogButton.js","BlogTemplates/BlogImage.js","BlogTemplates/BlogList.js","BlogTemplates/BlogPara.js","BlogTemplates/BlogSubheading.js","BlogTemplates/BlogTitle.js","BlogTemplates/BlogTemplate.js","HomeComponents/HomeCards.js","HomeComponents/Home.js","MyNavbar.js","TodoAppComponents/components/TodoForm.js","TodoAppComponents/components/Todo.js","TodoAppComponents/components/Doing.js","TodoAppComponents/components/DeleteButton.js","TodoAppComponents/components/Done.js","TodoAppComponents/components/TodoList.js","TodoAppComponents/TodoApp.js","TreeComponents/Components/Grid.js","TreeComponents/Components/BST.js","TreeComponents/BSTApp.js","TreeComponents/Components/MaxHeap.js","TreeComponents/MaxHeapApp.js","TreeComponents/Components/MinHeap.js","TreeComponents/MinHeapApp.js","RoutePaths.js","App.js","index.js"],"names":["BlogButton","details","className","onClick","url","click","window","location","href","text","BlogImage","src","alt","BlogList","makeList","list","map","index","BlogPara","BlogSubheading","BlogTitle","BlogTemplate","blogData","useEffect","scrollTo","document","title","getRandomNumber","Math","floor","random","blog","type","HomeCards","useState","require","cards","breakpointCols","default","1600","1250","940","700","columnClassName","card","to","description","date","id","Home","MyNavbar","Navbar","collapseOnSelect","expand","variant","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","Tooltip","placement","arrow","interactive","TodoForm","props","edit","value","input","setInput","inputRef","useRef","availableClasses","colorNames","class","classSelector","setClassSelector","selectColor","setSelectColor","innerWidth","current","focus","handleChange","e","target","colorSelector","classesUsed","split","indexOf","length","nextClassColor","onContextMenu","preventDefault","handleRightClick","slice","onSubmit","placeholder","onChange","ref","Todo","todos","updateTodo","sendToDoing","sendToDone","handleDrag","handlePositionChange","allowDrop","setShowDelete","setEdit","todo","draggable","onDragStart","JSON","stringify","onDragEnd","onDrop","onDragOver","onDoubleClick","Doing","sendToDo","DeleteButton","deleteAllDone","removeTodo","showDelete","filter","parse","dataTransfer","getData","Done","TodoList","localStorage","getItem","setTodos","enqueueSnackbar","useSnackbar","setItem","newTodos","todoType","todoList","doing","push","todoId","newValue","test","prev","item","removeArr","a","updatedTodos","setData","onTodo","changeTodo","i","handleToDoDrop","newTodo","handleDoingDrop","handleDoneDrop","App","Grid","grid","loading","setLoading","search","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","makeOneRow","row","rowIndex","cell","cellIndex","toString","leftChild","rightChild","pow","from","zIndex","borderColor","borderWidth","BST","binaryTree","setBinaryTree","height","setHeight","setGrid","setSearch","makeVisualTree","j","k","myList","noOfZerosInMiddle","tempList","afterDeletePosi","oldI","oldJ","newI","newJ","newTree","deleteFromTree","data","parseInt","startI","startJ","handleSubmit","operation","max","insertToTree","searchInTree","style","marginLeft","fontSize","BSTApp","closeSnackbar","action","key","Fragment","background","border","cursor","color","autoHideDuration","Helmet","MaxHeap","myInsertPosition","myRow","myColumn","temp","myParentRow","myParentCol","greaterCol","col","myDeletePosition","marginRight","MaxHeapApp","MinHeap","smallerCol","MinHeapApp","RoutePaths","removeItem","forUseEffect","path","ReactDOM","render","StrictMode","maxSnack","anchorOrigin","vertical","horizontal","getElementById"],"mappings":"m+UAeeA,EAbI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAMjB,OACI,wBAAQC,UAAU,kBAAkBC,QAAS,kBAL5BC,EAK8CH,EAAQI,WAJvEC,OAAOC,SAASC,KAAOJ,GADP,IAACA,GAKjB,SACKH,EAAQQ,QCANC,EARG,SAAC,GAAe,IAAdT,EAAa,EAAbA,QAChB,OACI,qBAAKC,UAAU,iBAAf,SACI,qBAAKS,IAAKV,EAAQU,IAAKT,UAAU,aAAaU,IAAKX,EAAQW,SCcxDC,EAjBE,SAAC,GAAe,IAEvBC,EAFsB,EAAbb,QAEUc,KAAKC,KAAI,SAAAC,GAAK,OAC/B,6BACKA,GADIA,MAKjB,OACI,qBAAKf,UAAU,YAAf,SACI,oBAAIA,UAAU,eAAd,SACKY,OCHFI,EARE,SAAC,GAAe,IAAdjB,EAAa,EAAbA,QACf,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAQQ,QCKNU,EARQ,SAAC,GAAe,IAAdlB,EAAa,EAAbA,QACrB,OACI,qBAAKC,UAAU,kBAAf,SACKD,EAAQQ,QCKNW,EARG,SAAC,GAAe,IAAdnB,EAAa,EAAbA,QAChB,OACI,qBAAKC,UAAU,aAAf,SACKD,EAAQQ,QC6CNY,MA1Cf,YAAmC,IAAZC,EAAW,EAAXA,SAEnBC,qBAAU,WACNjB,OAAOkB,SAAS,EAAG,KACpB,IACHC,SAASC,MAAQ,WAAaJ,EAAS,GAAGb,KAAO,kBAEjD,IAAMkB,EAAkB,WACpB,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WAGrBC,EAAOT,EAASN,KAAI,SAAAC,GACtB,MAAkB,UAAfA,EAAMe,KACE,cAAC,EAAD,CAAW/B,QAASgB,GAAYU,KAEpB,cAAfV,EAAMe,KACH,cAAC,EAAD,CAAU/B,QAASgB,GAAYU,KAEnB,eAAfV,EAAMe,KACH,cAAC,EAAD,CAAgB/B,QAASgB,GAAYU,KAEzB,WAAfV,EAAMe,KACH,cAAC,EAAD,CAAY/B,QAASgB,GAAYU,KAErB,SAAfV,EAAMe,KACH,cAAC,EAAD,CAAU/B,QAASgB,GAAYU,KAEnB,UAAfV,EAAMe,KACH,cAAC,EAAD,CAAW/B,QAASgB,GAAYU,KAGhC,qBAAKzB,UAAU,YAAf,iDAIf,OACI,qBAAKA,UAAU,gBAAf,SACK6B,K,wBCqBEE,MA9Df,WAAsB,IAAD,EACDC,mBAASC,EAAQ,KAA1BC,EADU,oBAgCjB,OACI,cAAC,IAAD,CACIC,eAVY,CAChBC,QAAS,EACTC,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,IAAK,GAMDxC,UAAU,kBACVyC,gBAAgB,yBAHpB,SAKMP,EAAMpB,KAAI,SAAA4B,GAAI,OAChB,cAAC,IAAD,CAAMC,GAAID,EAAKxC,IAAf,SACI,sBAAmBF,UAAU,YAA7B,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACK0C,EAAKlB,QAEV,qBAAKxB,UAAU,oBAAf,SACK0C,EAAKE,iBAGd,sBAAK5C,UAAU,kBAAf,UACI,qBAAKA,UAAU,aAAf,SACK0C,EAAKG,QA5CZf,EA8CYY,EAAKZ,KA7CnB,SAATA,EAEK,qBAAK9B,UAAU,yBAAf,SACK8B,IAII,QAATA,EAEA,qBAAK9B,UAAU,wBAAf,SACK8B,SAHR,QAyBaY,EAAKI,KADMJ,EAAKI,IAhCrB,IAAChB,QCOPiB,MAff,WAQI,OANAxB,SAASC,MAAQ,sBACjBH,qBAAU,WACNjB,OAAOkB,SAAS,EAAG,KACpB,IAIC,8BACI,cAAC,EAAD,O,mCCgDG0B,MAtDf,WAEI,OACI,mCACA,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKnD,UAAU,eAAeoD,QAAQ,OAAOC,OAAO,MAApF,UAEI,cAACJ,EAAA,EAAOK,MAAR,CAAchD,KAAK,kCAAnB,0BAIA,cAAC2C,EAAA,EAAOM,OAAR,CAAeC,gBAAc,0BAE7B,eAACP,EAAA,EAAOQ,SAAR,CAAiBX,GAAG,wBAApB,UAEI,cAACY,EAAA,EAAD,CAAK1D,UAAU,UAAf,SACI,cAAC0D,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAMhB,GAAG,YAAvB,yBAKJ,eAACe,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,CAASrC,MAAM,SAASsC,UAAU,SAASC,OAAK,EAAhD,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUrD,KAAK,kCAAkCN,UAAU,eAA3D,SACQ,cAAC,IAAD,QAGZ,cAAC6D,EAAA,EAAD,CAASrC,MAAM,WAAWsC,UAAU,SAASC,OAAK,EAAlD,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUrD,KAAK,sDAAsDN,UAAU,eAA/E,SACQ,cAAC,IAAD,QAGZ,cAAC6D,EAAA,EAAD,CAASrC,MAAM,0BAA0BsC,UAAU,SAASC,OAAK,EAACC,aAAW,EAA7E,SACI,cAACN,EAAA,EAAIC,KAAL,CAAUrD,KAAK,iCAAiCN,UAAU,eAA1D,SACQ,cAAC,IAAD,QAGZ,cAAC6D,EAAA,EAAD,CAASrC,MAAM,aAAasC,UAAU,SAASC,OAAK,EAApD,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUrD,KAAK,4CAA4CN,UAAU,eAArE,SACQ,cAAC,IAAD,QAGZ,cAAC6D,EAAA,EAAD,CAASrC,MAAM,YAAYsC,UAAU,SAASC,OAAK,EAAnD,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUrD,KAAK,2CAA2CN,UAAU,eAApE,SACQ,cAAC,IAAD,oB,gBC4EjBiE,MA3Hf,SAAkBC,GAAQ,IAAD,EACKlC,mBAASkC,EAAMC,KAAOD,EAAMC,KAAKC,MAAQ,IAD9C,mBACdC,EADc,KACPC,EADO,KAEfC,EAAWC,iBAAO,MAClBC,EAAmB,CACrB,gBACA,kBACA,gBACA,kBACA,eACA,kBAEEC,EAAa,CACf,OACA,SACA,OACA,SACA,MACA,SAjBiB,EAmBqB1C,mBAASkC,EAAMC,KAAKQ,MAAQ,qBAnBjD,mBAmBdC,EAnBc,KAmBCC,EAnBD,OAoBiB7C,oBAAS,GApB1B,mBAoBd8C,EApBc,KAoBDC,EApBC,KAsBrB1D,qBAAU,WACHjB,OAAO4E,YAAc,MACpBT,EAASU,QAAQC,WAKzB,IAAMC,EAAe,SAAAC,GACjBd,EAASc,EAAEC,OAAOjB,QAyClBkB,EAAgB,qBAAKtF,UAAW4E,EAAe3E,QAAS,SAACmF,GAAD,OANrC,SAAAA,GACnB,IAAMG,EAAcH,EAAEC,OAAOrF,UAAUwF,MAAM,KAC7CX,EAAiBJ,GAAkBA,EAAiBgB,QAASF,EAAY,GAAK,IAAMA,EAAY,IAAO,GAAKd,EAAiBiB,QAAW,qBAIzEC,CAAeP,IAAIQ,cAAe,SAACR,GAAD,OAZ5E,SAACA,GACtBA,EAAES,iBACFd,GAAe,GAUyFe,CAAiBV,IAAzG,SACKV,EAAWD,EAAiBgB,QAAQb,EAAcmB,MAAM,GAAI,QAgBrF,OAZGjB,IACCQ,EAAgBb,EAAiB3D,KAAI,SAACd,EAAWe,GAC7C,OACI,qBAAKf,UAAWA,EAAY,oBAA6CC,QAAS,SAACmF,GAAOP,EAAiBO,EAAEC,OAAOrF,WAAY+E,GAAe,IAA/I,SACKL,EAAW3D,IADsC2D,EAAW3D,QAUzE,sBAAMf,UAAU,YAAYgG,SAvDX,SAAAZ,GACjBA,EAAES,iBAEC3B,EAAMC,KAAKrB,GACVoB,EAAM8B,SAAS,CACXlD,GAAIpB,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBrB,KAAM8D,EACNxD,KAAMqD,EAAMC,KAAKtD,KACjB8D,MAAOC,EAAcmB,MAAM,GAAI,MAInC7B,EAAM8B,SAAS,CACXlD,GAAIpB,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBrB,KAAM8D,EACNxD,KAAM,OACN8D,MAAOF,EAAiB/C,KAAKC,MAAMD,KAAKE,SAAW6C,EAAiBiB,WAI5EpB,EAAS,KAmCT,SACCJ,EAAMC,KAAKrB,GACR,gCACI,sBAAK9C,UAAU,YAAf,UACI,uBACI8B,KAAK,OACLmE,YAAY,mBACZ7B,MAAOC,EACPrE,UAAU,aACVkG,SAAUf,EACVgB,IAAK5B,IAET,wBAAQvE,UAAU,mBAAlB,uBAEHsF,KAGL,qCACI,uBACIxD,KAAK,OACLmE,YAAY,aACZ7B,MAAOC,EACPrE,UAAU,aACVkG,SAAUf,EACVgB,IAAK5B,IAET,wBAAQvE,UAAU,cAAlB,4B,wBC7CDoG,MAlEf,YAAyH,IAA1GC,EAAyG,EAAzGA,MAAOC,EAAkG,EAAlGA,WAAYC,EAAsF,EAAtFA,YAAaC,EAAyE,EAAzEA,WAAYC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,qBAAsBC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,cAAgB,EAC5F5E,mBAAS,CAC7Bc,GAAI,KACJsB,MAAO,GACPvD,KAAM,OACN8D,MAAO,KALyG,mBAC7GR,EAD6G,KACvG0C,EADuG,KAkBpH,OAAG1C,EAAKrB,GACG,cAAC,EAAD,CAAUqB,KAAMA,EAAM6B,SAXZ,SAAA5B,GACjBkC,EAAWnC,EAAKrB,GAAIsB,GACpByC,EAAQ,CACJ/D,GAAI,KACJsB,MAAO,GACPvD,KAAM,OACN8D,MAAO,QAQR0B,EAAMvF,KAAI,SAACgG,EAAM/F,GAAP,MAA+B,SAAd+F,EAAKjG,KACnC,sBAAKb,UAAW8G,EAAKnC,MAEjBoC,WAAW,EACXC,YAAa,SAAC5B,GAAD,OAAOqB,EAAWrB,EAAG6B,KAAKC,UAAUJ,KACjDK,UAAW,kBAAMP,GAAc,IAC/BQ,OAAQ,SAAChC,GAAD,OAAOsB,EAAqBtB,EAAG0B,IACvCO,WAAY,SAACjC,GAAD,OAAOuB,EAAUvB,IAC7BkC,cAAe,kBAAMT,EAAQ,CAAE/D,GAAIgE,EAAKhE,GAAIsB,MAAO0C,EAAKvG,KAAMM,KAAM,OAAQ8D,MAAMmC,EAAKnC,SAP3F,UASI,8BACKmC,EAAKvG,MADAuG,EAAKhE,IAGf,sBAAK9C,UAAU,QAAf,UACI,cAAC6D,EAAA,EAAD,CAASrC,MAAM,YAAYsC,UAAU,MAAMC,OAAK,EAAhD,SACI,+BACI,cAAC,IAAD,CACI9D,QAAS,kBAAM4G,EAAQ,CAAE/D,GAAIgE,EAAKhE,GAAIsB,MAAO0C,EAAKvG,KAAMM,KAAM,OAAQ8D,MAAMmC,EAAKnC,SACjF3E,UAAU,kBAKtB,cAAC6D,EAAA,EAAD,CAASrC,MAAM,gBAAgBsC,UAAU,MAAMC,OAAK,EAApD,SACI,+BACI,cAAC,IAAD,CACI9D,QAAS,kBAAMsG,EAAYO,EAAKhE,WAK5C,cAACe,EAAA,EAAD,CAASrC,MAAM,eAAesC,UAAU,MAAMC,OAAK,EAAnD,SACI,+BACI,cAAC,IAAD,CACI9D,QAAS,kBAAMuG,EAAWM,EAAKhE,gBAhC1C/B,GAuCT,SCGOwG,MAlEf,YAAuH,IAAvGlB,EAAsG,EAAtGA,MAAOC,EAA+F,EAA/FA,WAAYkB,EAAmF,EAAnFA,SAAUhB,EAAyE,EAAzEA,WAAYC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,qBAAsBC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,cAAgB,EAC1F5E,mBAAS,CAC7Bc,GAAI,KACJsB,MAAO,GACPvD,KAAM,QACN8D,MAAO,KALuG,mBAC3GR,EAD2G,KACrG0C,EADqG,KAkBlH,OAAG1C,EAAKrB,GACG,cAAC,EAAD,CAAUqB,KAAMA,EAAM6B,SAXZ,SAAA5B,GACjBkC,EAAWnC,EAAKrB,GAAIsB,GACpByC,EAAQ,CACJ/D,GAAI,KACJsB,MAAO,GACPvD,KAAM,QACN8D,MAAO,QAQR0B,EAAMvF,KAAI,SAACgG,EAAM/F,GAAP,MAA+B,UAAd+F,EAAKjG,KACnC,sBAAKb,UAAW8G,EAAKnC,MAEjBoC,WAAW,EACXC,YAAa,SAAC5B,GAAD,OAAOqB,EAAWrB,EAAG6B,KAAKC,UAAUJ,KACjDK,UAAW,kBAAMP,GAAc,IAC/BQ,OAAQ,SAAChC,GAAD,OAAOsB,EAAqBtB,EAAG0B,IACvCO,WAAY,SAACjC,GAAD,OAAOuB,EAAUvB,IAC7BkC,cAAe,kBAAMT,EAAQ,CAAE/D,GAAIgE,EAAKhE,GAAIsB,MAAO0C,EAAKvG,KAAMM,KAAM,QAAS8D,MAAMmC,EAAKnC,SAP5F,UASI,8BACKmC,EAAKvG,MADAuG,EAAKhE,IAGf,sBAAK9C,UAAU,QAAf,UACI,cAAC6D,EAAA,EAAD,CAASrC,MAAM,YAAYsC,UAAU,MAAMC,OAAK,EAAhD,SACI,+BACI,cAAC,IAAD,CACI9D,QAAS,kBAAM4G,EAAQ,CAAE/D,GAAIgE,EAAKhE,GAAIsB,MAAO0C,EAAKvG,KAAMM,KAAM,QAAS8D,MAAMmC,EAAKnC,SAClF3E,UAAU,kBAKtB,cAAC6D,EAAA,EAAD,CAASrC,MAAM,kBAAkBsC,UAAU,MAAMC,OAAK,EAAtD,SACI,+BACI,cAAC,IAAD,CACI9D,QAAS,kBAAMuH,EAASV,EAAKhE,WAKzC,cAACe,EAAA,EAAD,CAASrC,MAAM,eAAesC,UAAU,MAAMC,OAAK,EAAnD,SACI,+BACI,cAAC,IAAD,CACI9D,QAAS,kBAAMuG,EAAWM,EAAKhE,gBAhC1C/B,GAuCT,SCtDO0G,MAdf,YAAkF,IAA3DpB,EAA0D,EAA1DA,MAAOqB,EAAmD,EAAnDA,cAAef,EAAoC,EAApCA,UAAWgB,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAEhE,OAAO,YAAIvB,GAAOwB,QAAO,SAAAf,GAAI,MAAkB,SAAdA,EAAKjG,QAAiB6E,OAAS,GAAKkC,EACjE,wBACI5H,UAAU,oBACVC,QAASyH,EACTL,WAAY,SAACjC,GAAD,OAAOuB,EAAUvB,IAC7BgC,OAAQ,SAAChC,GAAD,OAAOuC,EAAWV,KAAKa,MAAM1C,EAAE2C,aAAaC,QAAQ,SAASlF,KAJzE,yBAQA,M,QC4DOmF,MAlEf,YAAsH,IAAvG5B,EAAsG,EAAtGA,MAAOsB,EAA+F,EAA/FA,WAAYrB,EAAmF,EAAnFA,WAAYkB,EAAuE,EAAvEA,SAAUf,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,qBAAsBC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,cAAgB,EACzF5E,mBAAS,CAC7Bc,GAAI,KACJsB,MAAO,GACPvD,KAAM,OACN8D,MAAO,KALsG,mBAC1GR,EAD0G,KACpG0C,EADoG,KAkBjH,OAAG1C,EAAKrB,GACG,cAAC,EAAD,CAAUqB,KAAMA,EAAM6B,SAXZ,SAAA5B,GACjBkC,EAAWnC,EAAKrB,GAAIsB,GACpByC,EAAQ,CACJ/D,GAAI,KACJsB,MAAO,GACPvD,KAAM,OACN8D,MAAO,QAQR0B,EAAMvF,KAAI,SAACgG,EAAM/F,GAAP,MAA+B,SAAd+F,EAAKjG,KACnC,sBAAKb,UAAW8G,EAAKnC,MAEjBoC,WAAW,EACXC,YAAa,SAAC5B,GAAD,OAAOqB,EAAWrB,EAAG6B,KAAKC,UAAUJ,KACjDK,UAAW,kBAAMP,GAAc,IAC/BQ,OAAQ,SAAChC,GAAD,OAAOsB,EAAqBtB,EAAG0B,IACvCO,WAAY,SAACjC,GAAD,OAAOuB,EAAUvB,IAC7BkC,cAAe,kBAAMT,EAAQ,CAAE/D,GAAIgE,EAAKhE,GAAIsB,MAAO0C,EAAKvG,KAAMM,KAAM,OAAQ8D,MAAMmC,EAAKnC,SAP3F,UASI,8BACKmC,EAAKvG,MADAuG,EAAKhE,IAGf,sBAAK9C,UAAU,QAAf,UACI,cAAC6D,EAAA,EAAD,CAASrC,MAAM,YAAYsC,UAAU,MAAMC,OAAK,EAAhD,SACI,+BACI,cAAC,IAAD,CACI9D,QAAS,kBAAM4G,EAAQ,CAAE/D,GAAIgE,EAAKhE,GAAIsB,MAAO0C,EAAKvG,KAAMM,KAAM,OAAQ8D,MAAMmC,EAAKnC,SACjF3E,UAAU,kBAKtB,cAAC6D,EAAA,EAAD,CAASrC,MAAM,kBAAkBsC,UAAU,MAAMC,OAAK,EAAtD,SACI,+BACI,cAAC,IAAD,CACI9D,QAAS,kBAAMuH,EAASV,EAAKhE,WAKzC,cAACe,EAAA,EAAD,CAASrC,MAAM,eAAesC,UAAU,MAAMC,OAAK,EAAnD,SACI,+BACI,cAAC,IAAD,CACI9D,QAAS,kBAAM0H,EAAWb,EAAKhE,gBAhC1C/B,GAuCT,S,QC6KOmH,MA1Of,WAAqB,IAAD,EACUlG,mBAAUmG,aAAaC,QAAQ,cAAgBnB,KAAKa,MAAMK,aAAaC,QAAQ,eAAiB,IAD1G,mBACT/B,EADS,KACFgC,EADE,OAEoBrG,oBAAS,GAF7B,mBAET4F,EAFS,KAEGhB,EAFH,KAGR0B,EAAoBC,cAApBD,gBAERjH,qBAAU,WAEN8G,aAAaK,QAAQ,aAAcvB,KAAKC,UAAUb,MACnD,CAACA,IAIJhF,qBAAU,WACN,GAA8C,OAA3C8G,aAAaC,QAAQ,kBAA2B,CAE/C,IAAM3D,EAAmB,CACrB,gBACA,kBACA,gBACA,kBACA,eACA,kBAEAgE,EAAW,GACXC,EAAW,GAEfrC,EAAMvF,KAAI,SAAAgG,GAEF4B,EADD5B,EAAK6B,SACO,OAEN7B,EAAK8B,MACC,QAGA,OAGf,IAAItC,EAAa,CACbxD,GAAIgE,EAAKhE,GACTvC,KAAMuG,EAAKvG,KACXM,KAAM6H,EACN/D,MAAOF,EAAiB/C,KAAKC,MAAMD,KAAKE,SAAW6C,EAAiBiB,UAExE+C,EAASI,KAAKvC,MAGlB+B,EAASI,GACTN,aAAaK,QAAQ,iBAAkB,SAE5C,IAGH,IAUMlC,EAAa,SAACwC,EAAQC,GACpBA,EAASxI,OAAQ,QAAQyI,KAAKD,EAASxI,OAI3C8H,GAAS,SAAAY,GAAI,OAAIA,EAAKnI,KAAI,SAAAoI,GAAI,OAAKA,EAAKpG,KAAOgG,EAASC,EAAWG,SAIjEvB,EAAa,SAAA7E,GACf,IAAMqG,EAAY,YAAI9C,GAAOwB,QAAO,SAAAf,GAAI,OAAIA,EAAKhE,KAAOA,KAGxDuF,GAAS,SAAAe,GACL,OAAOf,EAASc,OAKlB3B,EAAW,SAAA1E,GACb,IAAIuG,EAAehD,EAAMvF,KAAI,SAAAgG,GAIzB,OAHGA,EAAKhE,KAAOA,IACXgE,EAAKjG,KAAO,QAETiG,KAEXuB,EAASgB,IAIP9C,EAAc,SAAAzD,GAChB,IAAIuG,EAAehD,EAAMvF,KAAI,SAAAgG,GAIzB,OAHGA,EAAKhE,KAAOA,IACXgE,EAAKjG,KAAO,SAETiG,KAEXuB,EAASgB,IAIP7C,EAAa,SAAA1D,GACf,IAAIuG,EAAehD,EAAMvF,KAAI,SAAAgG,GAIzB,OAHGA,EAAKhE,KAAOA,IACXgE,EAAKjG,KAAO,QAETiG,KAEXwB,EAAgB,kCAAmC,CAC/ClF,QAAS,YAEbiF,EAASgB,IAUP5C,EAAa,SAACrB,EAAG0B,GACnB1B,EAAE2C,aAAauB,QAAQ,OAAQxC,GAC/BF,GAAc,IAyBZF,EAAuB,SAACtB,EAAGmE,GAC7B,IAAIC,EAAavC,KAAKa,MAAM1C,EAAE2C,aAAaC,QAAQ,SACnDwB,EAAW3I,KAAO0I,EAAO1I,KAEzB,IACI4I,EADEhB,EAAW,GAEjB,IAAIgB,EAAI,EAAGA,EAAIpD,EAAMX,OAAQ+D,IAEtBpD,EAAMoD,GAAG3G,KAAO0G,EAAW1G,IAC1B2F,EAASI,KAAKxC,EAAMoD,IAErBpD,EAAMoD,GAAG3G,KAAOyG,EAAOzG,IACtB2F,EAASI,KAAKW,GAGtB5C,GAAc,GAEdyB,GAAS,SAAAY,GACL,OAAOZ,EAASI,OAKlB9B,EAAY,SAACvB,GACfA,EAAES,kBAIN,OACI,qCACA,sBAAK7F,UAAU,WAAWoH,OAAQ,SAAChC,GAAD,OAnDf,SAAAA,GACnB,IAAItC,EAAKmE,KAAKa,MAAM1C,EAAE2C,aAAaC,QAAQ,SAASlF,GACpD0E,EAAS1E,GACT8D,GAAc,GAgD2B8C,CAAetE,IAAIiC,WAAY,SAACjC,GAAD,OAAOuB,EAAUvB,IAAzF,UACI,yCACA,cAAC,EAAD,CAAUY,SAlIF,SAAAc,GACZ,GAAIA,EAAKvG,OAAQ,QAAQyI,KAAKlC,EAAKvG,MAAnC,CAIA,IAAMkI,EAAQ,sBAAOpC,GAAP,CAAcS,IAC5BuB,EAASI,KA4HwBtE,KAAM,CAACQ,MAAO,iBAAkBgF,SAAS,IACtE,cAAC,EAAD,CACItD,MAAOA,EACPC,WAAYA,EACZC,YAAaA,EACbC,WAAYA,EACZC,WAAYA,EACZC,qBAAsBA,EACtBC,UAAWA,EACXC,cAAeA,OAIvB,sBAAK5G,UAAU,WAAWoH,OAAQ,SAAChC,GAAD,OA3Dd,SAAAA,GACpB,IAAItC,EAAKmE,KAAKa,MAAM1C,EAAE2C,aAAaC,QAAQ,SAASlF,GACpDyD,EAAazD,GACb8D,GAAc,GAwD2BgD,CAAgBxE,IAAIiC,WAAY,SAACjC,GAAD,OAAOuB,EAAUvB,IAA1F,UACI,4CACA,cAAC,EAAD,CACIiB,MAAOA,EACPC,WAAYA,EACZkB,SAAUA,EACVhB,WAAYA,EACZC,WAAYA,EACZC,qBAAsBA,EACtBC,UAAWA,EACXC,cAAeA,OAIvB,sBAAK5G,UAAU,yBAAyBoH,OAAQ,SAAChC,GAAD,OAlE7B,SAAAA,GACnB,IAAItC,EAAKmE,KAAKa,MAAM1C,EAAE2C,aAAaC,QAAQ,SAASlF,GACpD0D,EAAY1D,GACZ8D,GAAc,GA+DyCiD,CAAezE,IAAIiC,WAAY,SAACjC,GAAD,OAAOuB,EAAUvB,IAAvG,UACI,0CACA,cAAC,EAAD,CACIiB,MAAOA,EACPsB,WAAYA,EACZrB,WAAYA,EACZkB,SAAUA,EACVf,WAAYA,EACZC,qBAAsBA,EACtBC,UAAWA,EACXC,cAAeA,IAEnB,cAAC,EAAD,CACIP,MAAOA,EACPqB,cA1GU,WAClB,IAAI2B,EAAe,YAAIhD,GAAOwB,QAAO,SAAAf,GAAI,MAAkB,SAAdA,EAAKjG,QAClDwH,EAASgB,IAyGD1C,UAAWA,EACXgB,WAAYA,EACZC,WAAYA,WCnNbkC,MAnBf,WAOE,OALAvI,SAASC,MAAQ,2BACjBH,qBAAU,WACRjB,OAAOkB,SAAS,EAAG,KAClB,IAGD,mCACA,sBAAKtB,UAAU,sBAAf,UACE,cAAC,IAAD,CAAM2C,GAAG,iBAAT,SACE,6CAEF,cAAC,EAAD,U,yBC8ISoH,MA7Jf,YAAoD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,WAAYC,EAAS,EAATA,OAetC9I,qBAAU,WACN,IAAM+I,EAbV,SAAkBC,EAAIC,GAAK,IACnBC,EADkB,mBAEtB,OAAO,SAAAC,GACHC,aAAaF,GACbA,EAAQG,YAAW,SAAAF,GACfD,EAAQ,KACRF,EAAGM,MAAM,EAAMC,KAChBN,IAMuBO,EAAS,WACnCX,GAAW,KACZ,KAEH9J,OAAO0K,iBAAiB,SAAUV,MAItC/I,qBAAU,WACNqJ,YAAW,kBAAMR,GAAW,KAAQ,OACrC,CAACD,IAGJ,IAAMc,EAAa,SAACC,EAAKC,GAAN,OACfD,EAAIlK,KAAI,SAACoK,EAAMC,GACX,OAAY,IAATD,EACIA,IAASf,EAGJ,qBAAKnK,UAAW,kBAAoBiL,EAASG,WAAa,IAAMD,EAAUC,WAAa,YAAvF,SAEKF,GAFoG,IAAMD,EAASG,WAAa,IAAMD,EAAUC,YAQrJ,qBAAKpL,UAAW,kBAAoBiL,EAASG,WAAa,IAAMD,EAAUC,WAA1E,SAEKF,GAFsF,IAAMD,EAASG,WAAa,IAAMD,EAAUC,YAS3I,qBAAKpL,UAAW,kBAAoBiL,EAASG,WAAa,IAAMD,EAAUC,WAAa,gBAAqB,IAAMH,EAASG,WAAa,IAAMD,EAAUC,gBA8FxK,OACI,qBAAKpL,UAAU,iBAAf,SACI,sBAAKA,UAAU,gBAAf,UAvFGgK,EAAKlJ,KAAI,SAACkK,EAAKC,GAAN,OACZ,qBAAKjL,UAAU,OAAf,SACK+K,EAAWC,EAAKC,IADM,IAAMA,EAASG,eAwFrCnB,EAAU,KA9EfD,EAAKlJ,KAAI,SAACkK,EAAKC,GACX,OACID,EAAIlK,KAAI,SAACoK,EAAMC,GACX,GAAY,IAATD,GAAcD,EAAWjB,EAAKtE,OAAS,EAAE,CAGxC,IAAI2F,EAAYF,EACZG,EAAaH,EAAYzJ,KAAK6J,IAAI,EAAGvB,EAAKtE,OAAOuF,EAAS,GAI9D,GAAmC,IAAhCjB,EAAKiB,EAAS,GAAGI,IAAqD,IAAjCrB,EAAKiB,EAAS,GAAGK,GACrD,OACI,qCACA,cAAC,IAAD,CACIE,KAAM,IAAKP,EAAUG,WAAa,IAAMD,EAAUC,WAClDzI,GAAI,KAAKsI,EAAS,GAAGG,WAAa,IAAMC,EAAUD,WAClDK,QApBvB,EAqBuBC,YAAY,uBACZC,YAAa,GAGR,IAAKV,EAAUG,WAAW,IAAID,EAAUC,WAAW,KAAKH,EAAS,GAAGG,WAAW,IAAIC,EAAUD,YAEtG,cAAC,IAAD,CACII,KAAM,IAAKP,EAAUG,WAAa,IAAMD,EAAUC,WAClDzI,GAAI,KAAKsI,EAAS,GAAGG,WAAa,IAAME,EAAWF,WACnDK,QA9BvB,EA+BuBC,YAAY,uBACZC,YAAa,GAGR,IAAKV,EAAUG,WAAW,IAAID,EAAUC,WAAW,KAAKH,EAAS,GAAGG,WAAW,IAAIE,EAAWF,eAK1G,GAAmC,IAAhCpB,EAAKiB,EAAS,GAAGI,GACrB,OACI,cAAC,IAAD,CACIG,KAAM,IAAKP,EAAUG,WAAa,IAAMD,EAAUC,WAClDzI,GAAI,KAAKsI,EAAS,GAAGG,WAAa,IAAMC,EAAUD,WAClDK,QA7CvB,EA8CuBC,YAAY,uBACZC,YAAa,GAGR,IAAKV,EAAUG,WAAW,IAAID,EAAUC,WAAW,KAAKH,EAAS,GAAGG,WAAW,IAAIC,EAAUD,YAIzG,GAAoC,IAAjCpB,EAAKiB,EAAS,GAAGK,GACrB,OACI,cAAC,IAAD,CACIE,KAAM,IAAKP,EAAUG,WAAa,IAAMD,EAAUC,WAClDzI,GAAI,KAAKsI,EAAS,GAAGG,WAAa,IAAME,EAAWF,WACnDK,QA3DvB,EA4DuBC,YAAY,uBACZC,YAAa,GAGR,IAAKV,EAAUG,WAAW,IAAID,EAAUC,WAAW,KAAKH,EAAS,GAAGG,WAAW,IAAIE,EAAWF,yB,gBCsP5HQ,MAvXf,WAAgB,IAAD,EACyB5J,mBAAS,CACzC,CAAC,GACD,CAAC,EAAG,GACJ,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtvX,mBACJ6J,EADI,KACQC,EADR,OAWiB9J,mBAAS,GAX1B,mBAWJ+J,EAXI,KAWIC,EAXJ,OAYahK,mBAAS,IAZtB,mBAYJgI,EAZI,KAYEiC,EAZF,OAamBjK,oBAAS,GAb5B,mBAaJiI,EAbI,KAaKC,EAbL,OAcelI,mBAAS,IAdxB,mBAcJqC,EAdI,KAcGC,EAdH,KAeHgE,EAAoBC,cAApBD,gBAfG,EAgBiBtG,oBAAU,GAhB3B,mBAgBJmI,EAhBI,KAgBI+B,EAhBJ,KAmBX7K,qBAAU,WACN8K,MACD,CAACN,IAGJ,IAAMM,EAAiB,WACnB,IAAI1C,EAAG2C,EAAGC,EACNC,EAAS,GAEb,IAAI7C,EAAI,EAAGA,EAAIsC,EAAQtC,IAAK,CAExB,IAAI8C,EAAoB7K,KAAK6J,IAAI,EAAGQ,EAAOtC,GAAK,EAC5C+C,EAAW,GACf,IAAIJ,EAAI,EAAGA,EAAIP,EAAWpC,GAAG/D,OAAQ0G,IAEjC,GADAI,EAAS3D,KAAKgD,EAAWpC,GAAG2C,IACzBA,EAAIP,EAAWpC,GAAG/D,OAAS,EAC1B,IAAI2G,EAAI,EAAGA,EAAIE,EAAmBF,IAC9BG,EAAS3D,KAAK,GAI1ByD,EAAOzD,KAAK2D,GAEhBP,EAAQK,IAgENG,EAAkB,SAAlBA,EAAmBC,EAAMC,EAAMC,EAAMC,EAAMC,GAW7C,OAVAA,EAAQF,EAAO,GAAQ,EAALC,GAAUC,EAAQJ,EAAO,GAAQ,EAALC,GAC9CG,EAAQJ,EAAO,GAAQ,EAALC,GAAU,EAC5BG,EAAQF,EAAO,GAAQ,EAALC,EAAS,GAAKC,EAAQJ,EAAO,GAAQ,EAALC,EAAS,GAC3DG,EAAQJ,EAAO,GAAQ,EAALC,EAAS,GAAK,EACC,IAA9BG,EAAQF,EAAO,GAAQ,EAALC,KACjBC,EAAUL,EAAgBC,EAAO,EAAQ,EAALC,EAAQC,EAAK,EAAQ,EAALC,EAAQC,IAE3B,IAAlCA,EAAQF,EAAO,GAAQ,EAALC,EAAS,KAC1BC,EAAUL,EAAgBC,EAAO,EAAQ,EAALC,EAAS,EAAGC,EAAK,EAAQ,EAALC,EAAS,EAAGC,IAEjEA,GAILC,EAAiB,SAAjBA,EAAkBC,GAEpB,IAAIvD,EAAG2C,EAAGC,EADVW,EAAOC,SAASD,GAEhB,IAAIF,EAAO,YAAOjB,GAClB,IAAIpC,EAAI,EAAGA,EAAIsC,GAAWtC,EAAI,EAAGA,IAC7B,IAAI2C,EAAI,EAAGA,EAAIU,EAAQrD,GAAG/D,OAAQ0G,IAC9B,GAAGU,EAAQrD,GAAG2C,KAAOY,EAAK,CAItB,GAA2B,IAAxBF,EAAQrD,EAAI,GAAG,EAAE2C,IAAwC,IAA5BU,EAAQrD,EAAI,GAAG,EAAE2C,EAAI,GAAS,CAG1D,IAFAU,EAAQrD,GAAG2C,GAAK,EAChBN,EAAcgB,GACVT,EAAI,EAAGA,EAAIS,EAAQrD,GAAG/D,QACD,IAAlBoH,EAAQrD,GAAG4C,GADgBA,KAalC,OARGA,IAAMS,EAAQrD,GAAG/D,QAChBsG,EAAUvC,SAED,IAAVuD,GACC1E,EAAgB0E,EAAO,oCAAqC,CACxD5J,QAAS,aAOhB,GAA+B,IAA5B0J,EAAQrD,EAAI,GAAG,EAAE2C,EAAI,GASzB,OARAU,EAAQrD,GAAG2C,GAAKU,EAAQrD,EAAE,GAAG,EAAE2C,GAC/BU,EAAUL,EAAgBhD,EAAI,EAAG,EAAE2C,EAAG3C,EAAG2C,EAAGU,GAC5ChB,EAAcgB,SACD,IAAVE,GACC1E,EAAgB0E,EAAO,oCAAqC,CACxD5J,QAAS,aAOhB,GAA2B,IAAxB0J,EAAQrD,EAAI,GAAG,EAAE2C,GASrB,OARAU,EAAQrD,GAAG2C,GAAKU,EAAQrD,EAAE,GAAG,EAAE2C,EAAI,GACnCU,EAAUL,EAAgBhD,EAAI,EAAG,EAAE2C,EAAI,EAAG3C,EAAG2C,EAAGU,GAChDhB,EAAcgB,SACD,IAAVE,GACC1E,EAAgB0E,EAAO,oCAAqC,CACxD5J,QAAS,aAUjB,IAFA,IAAI8J,EAASzD,EAAG,EACZ0D,EAAW,EAAFf,EAAM,IACR,CACP,GAAqC,IAAlCU,EAAQI,EAAS,GAAU,EAAPC,GAQnB,OAPAL,EAAQrD,GAAG2C,GAAKU,EAAQI,GAAQC,GAChCL,EAAQI,GAAQC,IAAW,EAC3BrB,EAAcgB,GACdxE,EAAgB0E,EAAO,oCAAqC,CACxD5J,QAAS,iBAEb2J,GAAgB,GAKhBG,GAAkB,EAClBC,GAAgB,GAQxC,GAAS,IAAN1D,EACC,IAAI2C,EAAI,EAAGA,EAAIU,EAAQrD,GAAG/D,OAAQ0G,IAC9B,GAAGU,EAAQrD,GAAG2C,KAAOY,EAAK,CAEtB,IADAF,EAAQrD,GAAG2C,GAAK,EACZC,EAAI,EAAGA,EAAIS,EAAQrD,GAAG/D,QACD,IAAlBoH,EAAQrD,GAAG4C,GADgBA,KAYlC,OAPGA,IAAMS,EAAQrD,GAAG/D,QAChBsG,EAAUvC,GAEdqC,EAAcgB,QACdxE,EAAgB0E,EAAO,oCAAqC,CACxD5J,QAAS,YAOzBkF,EAAgB0E,EAAO,gBAAiB,CACpC5J,QAAS,WAkDXgK,EAAe,SAAChI,GAClBA,EAAES,iBACF,IAAIwH,EAAYjI,EAAEC,OAAOjB,MAEzB,MAAiB,gBAAdiJ,GACCnB,GAAW,GACX5H,EAAS,SACT4F,GAAW,IAIE,cAAdmD,IAvBAtB,EAAS,GAAK/B,EAAKtE,OAAS,KAE3BoG,EAZU,CACV,CAAC,GACD,CAAC,EAAG,GACJ,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtd1D,EAAgB,uBAAwB,CACpClF,QAAS,YAkBT8I,GAAW,GACX5H,EAAS,SACT4F,GAAW,IAID,KAAX7F,GAAiBA,GAAS,GACzBiE,EAAgB,mBAAoB,CAChClF,QAAS,eAEbkB,EAAS,UAII,WAAd+I,IA/Pc,SAACL,GAClB,IAAMF,EAAO,YAAOjB,GACpB,GAAqB,IAAlBiB,EAAQ,GAAG,GAQV,OAPAA,EAAQ,GAAG,GAAKG,SAASD,GACzBlB,EAAcgB,GACdd,EAAU,QACV1D,EAAgB0E,EAAO,gCAAiC,CACpD5J,QAAS,YAMjB,IAAIqG,EAAG2C,EAAE,EACT,IAAI3C,EAAI,EAAGA,EAAIsC,GAAUtC,EAAI,EAAGA,IAC5B,GAAGuD,EAAOF,EAAQrD,GAAG2C,GAAG,CACpB,GAAyB,IAAtBU,EAAQrD,EAAE,GAAG,EAAE2C,GAQd,OAPAU,EAAQrD,EAAE,GAAG,EAAE2C,GAAKa,SAASD,GAC7BlB,EAAcgB,GACdd,EAAUtK,KAAK4L,IAAIvB,EAAQtC,EAAI,SAC/BnB,EAAgB0E,EAAO,gCAAiC,CACpD5J,QAAS,YAMbgJ,GAAI,MAGP,MAAGY,EAAOF,EAAQrD,GAAG2C,IAmBtB,YAHA9D,EAAgB0E,EAAM,sBAAuB,CACzC5J,QAAS,UAhBb,GAA6B,IAA1B0J,EAAQrD,EAAE,GAAG,EAAE2C,EAAI,GAQlB,OAPAU,EAAQrD,EAAE,GAAG,EAAE2C,EAAI,GAAKa,SAASD,GACjClB,EAAcgB,GACdd,EAAUtK,KAAK4L,IAAIvB,EAAQtC,EAAI,SAC/BnB,EAAgB0E,EAAO,gCAAiC,CACpD5J,QAAS,YAMbgJ,EAAM,EAAFA,EAAM,EAWtB9D,EAAgB,2BAA4B,CACxClF,QAAS,UA0MTmK,CAAalJ,GACbC,EAAS,IACT4F,GAAW,IAEO,WAAdmD,GACJN,EAAe1I,GACfC,EAAS,IACT4F,GAAW,IAEO,WAAdmD,IACJnB,EAAUe,SAAS5I,IAnFN,SAAC2I,GAElB,IAAIvD,EAAG2C,EAEP,IAHAY,EAAOC,SAASD,GAGZvD,EAAI,EAAGA,EAAIsC,GAAWtC,GAAK,EAAGA,IAC9B,IAAI2C,EAAI,EAAGA,EAAIP,EAAWpC,GAAG/D,OAAQ0G,IACjC,GAAGP,EAAWpC,GAAG2C,KAAOY,EAIpB,YAHA1E,EAAgB0E,EAAO,gCAAiC,CACpD5J,QAAS,YAOzB8I,GAAW,GACX5D,EAAgB0E,EAAO,gBAAiB,CACpC5J,QAAS,UAmEToK,CAAanJ,GACbC,EAAS,IACT4F,GAAW,MAWnB,OACI,sBAAKlK,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,uBACI8C,GAAG,YACHhB,KAAK,SACLmE,YAAY,OACZ7B,MAAOC,EACPrE,UAAU,kBACVkG,SAdK,SAAAd,GACjBd,EAASc,EAAEC,OAAOjB,UAeV,wBAAQnE,QAASmN,EAAcpN,UAAU,mBAAmBoE,MAAM,SAAlE,oBACA,wBAAQnE,QAASmN,EAAcpN,UAAU,mBAAmBoE,MAAM,SAAlE,oBACA,wBAAQnE,QAASmN,EAAcpN,UAAU,mBAAmBoE,MAAM,SAAlE,oBAEA,wBACInE,QAASmN,EACTpN,UAAU,kBACVyN,MAAO,CAACC,WAAW,QACnBtJ,MAAM,cAJV,0BAOA,wBACInE,QAASmN,EACTpN,UAAU,kBACVoE,MAAM,YAHV,wBAMA,cAACP,EAAA,EAAD,CAASrC,MAAM,cAAcsC,UAAU,SAASC,OAAK,EAArD,SACI,+BACI,wBAAQ9D,QAAS,WAAOG,OAAOC,SAASC,KAAO,6DAA8DN,UAAU,kBAAvH,SACI,cAAC,IAAD,CAAQyN,MAAO,CAACE,SAAS,gBAIrC,cAAC9J,EAAA,EAAD,CAASrC,MAAM,gBAAgBsC,UAAU,SAASC,OAAK,EAAvD,SACI,+BACI,wBAAQ9D,QAAS,WAAOiK,GAAW,IAAQlK,UAAU,kBAArD,SACI,cAAC,IAAD,CAAkByN,MAAO,CAACE,SAAS,mBAMnD,cAAC,EAAD,CAAM3D,KAAMA,EAAMC,QAASA,EAASC,WAAYA,EAAYC,OAAQA,Q,QC5UjEyD,MAtCf,WAAmB,IAAD,EAC6BrF,cAAnCD,EADM,EACNA,gBAAiBuF,EADX,EACWA,cACzBtM,SAASC,MAAQ,mCAEjB,IAAMsM,EAAS,SAAAC,GAAG,OACd,cAAC,IAAMC,SAAP,UACI,qBAAK/N,QAAS,WAAQ4N,EAAcE,IAAQN,MAAO,CAACQ,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,OAArH,wBAcR,OARA/M,qBAAU,WACNiH,EAAgB,yDAA0D,CACtElF,QAAS,UACTiL,iBAAkB,IAClBP,aAEL,IAGC,gCACI,cAACQ,EAAA,EAAD,UACI,0PAUJ,cAAC,EAAD,QCiRGC,MAlTf,WAAoB,IAAD,EACqBvM,mBAAS,CACzC,CAAC,GACD,CAAC,EAAG,GACJ,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtnX,mBACR6J,EADQ,KACIC,EADJ,OAWa9J,mBAAS,GAXtB,mBAWR+J,EAXQ,KAWAC,EAXA,OAYShK,mBAAS,IAZlB,mBAYRgI,EAZQ,KAYFiC,EAZE,OAaejK,oBAAS,GAbxB,mBAaRiI,EAbQ,KAaCC,EAbD,OAcWlI,mBAAS,IAdpB,mBAcRqC,EAdQ,KAcDC,EAdC,KAePgE,EAAoBC,cAApBD,gBAfO,EAgBatG,oBAAU,GAhBvB,mBAgBRmI,EAhBQ,KAgBA+B,EAhBA,KAmBf7K,qBAAU,WACN8K,MACD,CAACN,IAGJ,IAAMM,EAAiB,WACnB,IAAI1C,EAAG2C,EAAGC,EACNC,EAAS,GAEb,IAAI7C,EAAI,EAAGA,EAAIsC,EAAQtC,IAAK,CAExB,IAAI8C,EAAoB7K,KAAK6J,IAAI,EAAGQ,EAAOtC,GAAK,EAC5C+C,EAAW,GACf,IAAIJ,EAAI,EAAGA,EAAIP,EAAWpC,GAAG/D,OAAQ0G,IAEjC,GADAI,EAAS3D,KAAKgD,EAAWpC,GAAG2C,IACzBA,EAAIP,EAAWpC,GAAG/D,OAAS,EAC1B,IAAI2G,EAAI,EAAGA,EAAIE,EAAmBF,IAC9BG,EAAS3D,KAAK,GAI1ByD,EAAOzD,KAAK2D,GAEhBP,EAAQK,IAINkC,EAAmB,SAAC1B,EAASE,EAAMyB,EAAOC,GAE5C,IADA,IAAIC,EACa,IAAVF,GAAY,CACf,IAAIG,EAAcH,EAAQ,EAAGI,EAAcnN,KAAKC,MAAM+M,EAAS,GAC/D,GAAG5B,EAAQ8B,GAAaC,IAAgB7B,EACpC,MAGJ2B,EAAO7B,EAAQ8B,GAAaC,GAC5B/B,EAAQ8B,GAAaC,GAAe/B,EAAQ2B,GAAOC,GACnD5B,EAAQ2B,GAAOC,GAAYC,EAE3BF,EAAQG,EACRF,EAAWG,EAEf,OAAO/B,GA6ILM,EAAe,SAAChI,GAClBA,EAAES,iBACF,IAAIwH,EAAYjI,EAAEC,OAAOjB,MAEzB,MAAiB,gBAAdiJ,GACCnB,GAAW,GACX5H,EAAS,SACT4F,GAAW,IAIE,cAAdmD,IAvBAtB,EAAS,GAAK/B,EAAKtE,OAAS,KAE3BoG,EAZU,CACV,CAAC,GACD,CAAC,EAAG,GACJ,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtd1D,EAAgB,uBAAwB,CACpClF,QAAS,YAkBT8I,GAAW,GACX5H,EAAS,SACT4F,GAAW,IAIE,WAAdmD,GAnGgB,WACnB,IAAI5D,EAAG2C,EACHU,EAAO,YAAOjB,GAClB,IAAIpC,EAAI,EAAGA,EAAIsC,GAAWtC,EAAI,GACL,IAAlBqD,EAAQrD,GAAG,GADeA,KAOjC,IAAU,KAFVA,GAAQ,GAEI,CACR,IAAI2C,EAAI,EAAGA,EAAIU,EAAQrD,GAAG/D,QACD,IAAlBoH,EAAQrD,GAAG2C,GADgBA,KAelC,OATAA,GAAQ,EACRU,EAAQ,GAAG,GAAKA,EAAQrD,GAAG2C,GAC3BU,EAAQrD,GAAG2C,GAAK,EAEhBU,EAhDiB,SAACA,GAEtB,IADA,IAAsBgC,EAAYH,EAA9B3D,EAAM,EAAG+D,EAAM,EAGXD,EADDhC,EAAQ9B,EAAM,GAAO,EAAJ+D,IAAWjC,EAAQ9B,EAAM,GAAO,EAAJ+D,EAAQ,GACjC,EAANA,EAGO,EAANA,EAAW,EAG1BjC,EAAQ9B,GAAK+D,GAAOjC,EAAQ9B,EAAM,GAAG8D,IACpCH,EAAO7B,EAAQ9B,GAAK+D,GACpBjC,EAAQ9B,GAAK+D,GAAOjC,EAAQ9B,EAAM,GAAG8D,GACrChC,EAAQ9B,EAAM,GAAG8D,GAAcH,EAE/B3D,GAAY,EACZ+D,EAAMD,EAOd,OAAOhC,EAyBOkC,CAAiBlC,GAC3BhB,EAAcgB,QACdxE,EAAgB,kCAAmC,CAC/ClF,QAAS,YAKjBkF,EAAgB,oBAAqB,CACjClF,QAAS,UAsET2J,QACA7C,GAAW,IAID,KAAX7F,GAAiBA,GAAS,GACzBiE,EAAgB,mBAAoB,CAChClF,QAAS,eAEbkB,EAAS,UAII,WAAd+I,IA1Kc,SAACL,GAClB,IAAIF,EAAO,YAAOjB,GAClBmB,EAAOC,SAASD,GAEhB,IAAIvD,EAAG2C,EAAE,EACT,IAAI3C,EAAI,EAAGA,GAAKsC,GAAUtC,GAAK,EAAGA,IAC9B,IAAI2C,EAAI,EAAGA,EAAIU,EAAQrD,GAAG/D,OAAQ0G,IAE9B,GAAqB,IAAlBU,EAAQrD,GAAG2C,GASV,OARAU,EAAQrD,GAAG2C,GAAKY,EAChBF,EAAU0B,EAAiB1B,EAASE,EAAMvD,EAAG2C,GAE7CN,EAAcgB,GACdd,EAAUvC,EAAI,QACdnB,EAAgB0E,EAAO,gCAAiC,CACpD5J,QAAS,YAOzBkF,EAAgB,2BAA4B,CACxClF,QAAS,UAoJTmK,CAAalJ,GACbC,EAAS,IACT4F,GAAW,IAEO,WAAdmD,IACJnB,EAAUe,SAAS5I,IApFN,SAAC2I,GAElB,IAAIvD,EAAG2C,EAEP,IAHAY,EAAOC,SAASD,GAGZvD,EAAI,EAAGA,EAAIsC,GAAWtC,GAAK,EAAGA,IAC9B,IAAI2C,EAAI,EAAGA,EAAIP,EAAWpC,GAAG/D,OAAQ0G,IACjC,GAAGP,EAAWpC,GAAG2C,KAAOY,EAIpB,YAHA1E,EAAgB0E,EAAO,gCAAiC,CACpD5J,QAAS,YAOzB8I,GAAW,GACX5D,EAAgB0E,EAAO,gBAAiB,CACpC5J,QAAS,UAoEToK,CAAanJ,GACbC,EAAS,IACT4F,GAAW,MAWnB,OACI,sBAAKlK,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,wBAAQA,UAAU,kBAAkByN,MAAO,CAACwB,YAAY,QAAxD,sBACA,uBACInM,GAAG,YACHhB,KAAK,SACLmE,YAAY,OACZ7B,MAAOC,EACPrE,UAAU,kBACVkG,SAfK,SAAAd,GACjBd,EAASc,EAAEC,OAAOjB,UAgBV,wBAAQnE,QAASmN,EAAcpN,UAAU,mBAAmBoE,MAAM,SAAlE,oBACA,wBAAQnE,QAASmN,EAAcpN,UAAU,mBAAmBoE,MAAM,SAAlE,oBACA,wBAAQnE,QAASmN,EAAcpN,UAAU,mBAAmByN,MAAO,CAACC,WAAW,QAAUtJ,MAAM,SAA/F,yBAGA,wBACInE,QAASmN,EACTpN,UAAU,kBACVyN,MAAO,CAACC,WAAW,QACnBtJ,MAAM,cAJV,0BAOA,wBACInE,QAASmN,EACTpN,UAAU,kBACVoE,MAAM,YAHV,wBAMA,cAACP,EAAA,EAAD,CAASrC,MAAM,cAAcsC,UAAU,SAASC,OAAK,EAArD,SACI,+BACI,wBAAQ9D,QAAS,WAAOG,OAAOC,SAASC,KAAO,sDAAuDN,UAAU,kBAAhH,SACI,cAAC,IAAD,CAAQyN,MAAO,CAACE,SAAS,gBAIrC,cAAC9J,EAAA,EAAD,CAASrC,MAAM,gBAAgBsC,UAAU,SAASC,OAAK,EAAvD,SACI,+BACI,wBAAQ9D,QAAS,WAAOiK,GAAW,IAAQlK,UAAU,kBAArD,SACI,cAAC,IAAD,CAAkByN,MAAO,CAACE,SAAS,mBAMnD,cAAC,EAAD,CAAM3D,KAAMA,EAAMC,QAASA,EAASC,WAAYA,EAAYC,OAAQA,QCvQjE+E,MAtCf,WAAuB,IAAD,EACyB3G,cAAnCD,EADU,EACVA,gBAAiBuF,EADP,EACOA,cACzBtM,SAASC,MAAQ,wCAEjB,IAAMsM,EAAS,SAAAC,GAAG,OACd,cAAC,IAAMC,SAAP,UACI,qBAAK/N,QAAS,WAAQ4N,EAAcE,IAAQN,MAAO,CAACQ,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,OAArH,wBAcR,OARA/M,qBAAU,WACNiH,EAAgB,yDAA0D,CACtElF,QAAS,UACTiL,iBAAkB,IAClBP,aAEL,IAGC,gCACI,cAACQ,EAAA,EAAD,UACI,0PAUJ,cAAC,EAAD,QC4RGa,MA7Tf,WAAoB,IAAD,EACqBnN,mBAAS,CACzC,CAAC,GACD,CAAC,EAAG,GACJ,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtnX,mBACR6J,EADQ,KACIC,EADJ,OAWa9J,mBAAS,GAXtB,mBAWR+J,EAXQ,KAWAC,EAXA,OAYShK,mBAAS,IAZlB,mBAYRgI,EAZQ,KAYFiC,EAZE,OAaejK,oBAAS,GAbxB,mBAaRiI,EAbQ,KAaCC,EAbD,OAcWlI,mBAAS,IAdpB,mBAcRqC,EAdQ,KAcDC,EAdC,KAePgE,EAAoBC,cAApBD,gBAfO,EAgBatG,oBAAU,GAhBvB,mBAgBRmI,EAhBQ,KAgBA+B,EAhBA,KAmBf7K,qBAAU,WACN8K,MACD,CAACN,IAGJ,IAAMM,EAAiB,WACnB,IAAI1C,EAAG2C,EAAGC,EACNC,EAAS,GAEb,IAAI7C,EAAI,EAAGA,EAAIsC,EAAQtC,IAAK,CAExB,IAAI8C,EAAoB7K,KAAK6J,IAAI,EAAGQ,EAAOtC,GAAK,EAC5C+C,EAAW,GACf,IAAIJ,EAAI,EAAGA,EAAIP,EAAWpC,GAAG/D,OAAQ0G,IAEjC,GADAI,EAAS3D,KAAKgD,EAAWpC,GAAG2C,IACzBA,EAAIP,EAAWpC,GAAG/D,OAAS,EAC1B,IAAI2G,EAAI,EAAGA,EAAIE,EAAmBF,IAC9BG,EAAS3D,KAAK,GAI1ByD,EAAOzD,KAAK2D,GAEhBP,EAAQK,IAINkC,EAAmB,SAAC1B,EAASE,EAAMyB,EAAOC,GAE5C,IADA,IAAIC,EACa,IAAVF,GAAY,CACf,IAAIG,EAAcH,EAAQ,EAAGI,EAAcnN,KAAKC,MAAM+M,EAAS,GAC/D,GAAG5B,EAAQ8B,GAAaC,IAAgB7B,EACpC,MAGJ2B,EAAO7B,EAAQ8B,GAAaC,GAC5B/B,EAAQ8B,GAAaC,GAAe/B,EAAQ2B,GAAOC,GACnD5B,EAAQ2B,GAAOC,GAAYC,EAE3BF,EAAQG,EACRF,EAAWG,EAGf,OAAO/B,GAwJLM,EAAe,SAAChI,GAClBA,EAAES,iBACF,IAAIwH,EAAYjI,EAAEC,OAAOjB,MAEzB,MAAiB,gBAAdiJ,GACCnB,GAAW,GACX5H,EAAS,SACT4F,GAAW,IAIE,cAAdmD,IAtBAtB,EAAS,GAAK/B,EAAKtE,OAAS,KAC3BoG,EAXU,CACV,CAAC,GACD,CAAC,EAAG,GACJ,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtd1D,EAAgB,uBAAwB,CACpClF,QAAS,YAkBT8I,GAAW,GACX5H,EAAS,SACT4F,GAAW,IAIE,WAAdmD,GAlGgB,WACnB,IAAI5D,EAAG2C,EACHU,EAAO,YAAOjB,GAClB,IAAIpC,EAAI,EAAGA,EAAIsC,GAAWtC,EAAI,GACL,IAAlBqD,EAAQrD,GAAG,GADeA,KAOjC,IAAU,KAFVA,GAAQ,GAEI,CACR,IAAI2C,EAAI,EAAGA,EAAIU,EAAQrD,GAAG/D,QACD,IAAlBoH,EAAQrD,GAAG2C,GADgBA,KAelC,OATAA,GAAQ,EACRU,EAAQ,GAAG,GAAKA,EAAQrD,GAAG2C,GAC3BU,EAAQrD,GAAG2C,GAAK,EAEhBU,EA5DiB,SAACA,GAEtB,IADA,IAAsBsC,EAAYT,EAA9B3D,EAAM,EAAG+D,EAAM,GAEiB,IAA7BjC,EAAQ9B,EAAM,GAAO,EAAJ+D,IAAiD,IAAhCjC,EAAQ9B,EAAM,GAAO,EAAJ+D,EAAQ,MAI1DK,EADiC,IAA7BtC,EAAQ9B,EAAM,GAAO,EAAJ+D,GACD,EAANA,EAAW,EAEW,IAAhCjC,EAAQ9B,EAAM,GAAO,EAAJ+D,EAAQ,IAI1BjC,EAAQ9B,EAAM,GAAO,EAAJ+D,IAAWjC,EAAQ9B,EAAM,GAAO,EAAJ+D,EAAQ,GAHpC,EAANA,EAOU,EAANA,EAAW,EAI9BjC,EAAQ9B,GAAK+D,GAAOjC,EAAQ9B,EAAM,GAAGoE,KACpCT,EAAO7B,EAAQ9B,GAAK+D,GACpBjC,EAAQ9B,GAAK+D,GAAOjC,EAAQ9B,EAAM,GAAGoE,GACrCtC,EAAQ9B,EAAM,GAAGoE,GAAcT,EAE/B3D,GAAY,EACZ+D,EAAMK,EAOd,OAAOtC,EA0BOkC,CAAiBlC,GAC3BhB,EAAcgB,QACdxE,EAAgB,kCAAmC,CAC/ClF,QAAS,YAKjBkF,EAAgB,oBAAqB,CACjClF,QAAS,UAqET2J,QACA7C,GAAW,IAID,KAAX7F,GAAiBA,GAAS,GACzBiE,EAAgB,mBAAoB,CAChClF,QAAS,eAEbkB,EAAS,UAII,WAAd+I,IArLc,SAACL,GAClB,IAAIF,EAAO,YAAOjB,GAClBmB,EAAOC,SAASD,GAEhB,IAAIvD,EAAG2C,EAAE,EACT,IAAI3C,EAAI,EAAGA,GAAKsC,GAAUtC,GAAK,EAAGA,IAC9B,IAAI2C,EAAI,EAAGA,EAAIU,EAAQrD,GAAG/D,OAAQ0G,IAE9B,GAAqB,IAAlBU,EAAQrD,GAAG2C,GASV,OARAU,EAAQrD,GAAG2C,GAAKY,EAChBF,EAAU0B,EAAiB1B,EAASE,EAAMvD,EAAG2C,GAE7CN,EAAcgB,GACdd,EAAUvC,EAAI,QACdnB,EAAgB0E,EAAO,gCAAiC,CACpD5J,QAAS,YAOzBkF,EAAgB,2BAA4B,CACxClF,QAAS,UA+JTmK,CAAalJ,GACbC,EAAS,IACT4F,GAAW,IAEO,WAAdmD,IACJnB,EAAUe,SAAS5I,IAnFN,SAAC2I,GAElB,IAAIvD,EAAG2C,EAEP,IAHAY,EAAOC,SAASD,GAGZvD,EAAI,EAAGA,EAAIsC,GAAWtC,GAAK,EAAGA,IAC9B,IAAI2C,EAAI,EAAGA,EAAIP,EAAWpC,GAAG/D,OAAQ0G,IACjC,GAAGP,EAAWpC,GAAG2C,KAAOY,EAIpB,YAHA1E,EAAgB0E,EAAO,gCAAiC,CACpD5J,QAAS,YAOzB8I,GAAW,GACX5D,EAAgB0E,EAAO,gBAAiB,CACpC5J,QAAS,UAmEToK,CAAanJ,GACbC,EAAS,IACT4F,GAAW,MAWnB,OACI,sBAAKlK,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,wBAAQA,UAAU,kBAAkByN,MAAO,CAACwB,YAAY,QAAxD,sBACA,uBACInM,GAAG,YACHhB,KAAK,SACLmE,YAAY,OACZ7B,MAAOC,EACPrE,UAAU,kBACVkG,SAfK,SAAAd,GACjBd,EAASc,EAAEC,OAAOjB,UAgBV,wBAAQnE,QAASmN,EAAcpN,UAAU,mBAAmBoE,MAAM,SAAlE,oBACA,wBAAQnE,QAASmN,EAAcpN,UAAU,mBAAmBoE,MAAM,SAAlE,oBACA,wBAAQnE,QAASmN,EAAcpN,UAAU,mBAAmByN,MAAO,CAACC,WAAW,QAAUtJ,MAAM,SAA/F,yBAEA,wBACInE,QAASmN,EACTpN,UAAU,kBACVyN,MAAO,CAACC,WAAW,QACnBtJ,MAAM,cAJV,0BAOA,wBACInE,QAASmN,EACTpN,UAAU,kBACVoE,MAAM,YAHV,wBAMA,cAACP,EAAA,EAAD,CAASrC,MAAM,cAAcsC,UAAU,SAASC,OAAK,EAArD,SACI,+BACI,wBAAQ9D,QAAS,WAAOG,OAAOC,SAASC,KAAO,sDAAuDN,UAAU,kBAAhH,SACI,cAAC,IAAD,CAAQyN,MAAO,CAACE,SAAS,gBAIrC,cAAC9J,EAAA,EAAD,CAASrC,MAAM,gBAAgBsC,UAAU,SAASC,OAAK,EAAvD,SACI,+BACI,wBAAQ9D,QAAS,WAAOiK,GAAW,IAAQlK,UAAU,kBAArD,SACI,cAAC,IAAD,CAAkByN,MAAO,CAACE,SAAS,mBAMnD,cAAC,EAAD,CAAM3D,KAAMA,EAAMC,QAASA,EAASC,WAAYA,EAAYC,OAAQA,QClRjEkF,MAtCf,WAAuB,IAAD,EACyB9G,cAAnCD,EADU,EACVA,gBAAiBuF,EADP,EACOA,cACzBtM,SAASC,MAAQ,wCAEjB,IAAMsM,EAAS,SAAAC,GAAG,OACd,cAAC,IAAMC,SAAP,UACI,qBAAK/N,QAAS,WAAQ4N,EAAcE,IAAQN,MAAO,CAACQ,WAAW,cAAeC,OAAO,OAAQC,OAAO,UAAWC,MAAM,OAArH,wBAcR,OARA/M,qBAAU,WACNiH,EAAgB,yDAA0D,CACtElF,QAAS,UACTiL,iBAAkB,IAClBP,aAEL,IAGC,gCACI,cAACQ,EAAA,EAAD,UACI,0PAUJ,cAAC,EAAD,QC0BGgB,MAvDf,WAOI,OAJAjO,qBAAU,WACN8G,aAAaoH,WAAW,gBACzB,CAHCC,YAMA,eAAC,IAAD,WACI,cAAC,EAAD,IAEA,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,KAAK,kBAAZ,SACI,cAAC,EAAD,CAAcrO,SAAUa,EAAQ,QAEpC,cAAC,IAAD,CAAOwN,KAAK,kBAAZ,SACI,cAAC,EAAD,CAAcrO,SAAUa,EAAQ,SAEpC,cAAC,IAAD,CAAOwN,KAAK,oBAAZ,SACI,cAAC,EAAD,CAAcrO,SAAUa,EAAQ,SAEpC,cAAC,IAAD,CAAOwN,KAAK,yBAAZ,SACI,cAAC,EAAD,CAAcrO,SAAUa,EAAQ,SAGpC,cAAC,IAAD,CAAOwN,KAAK,YAAZ,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,0BAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,0BAAZ,SACI,cAAC,EAAD,MAIJ,eAAC,IAAD,CAAOA,KAAK,IAAZ,UAEQtH,aAAaC,QAAQ,cAAgB,cAAC,IAAD,CAAUzF,GAAIwF,aAAaC,QAAQ,gBACtE,KAGN,cAAC,EAAD,cC/CL0B,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCAN4F,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CACEC,SAAU,EACVC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd3B,iBAAkB,IANpB,SAQE,cAAC,EAAD,QAGJ9M,SAAS0O,eAAe,U","file":"static/js/main.c0c6b94d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst BlogButton = ({details}) => {\r\n\r\n    const handleClick = (url) => {\r\n        window.location.href = url;\r\n    }\r\n\r\n    return (\r\n        <button className=\"redirect-button\" onClick={() => handleClick(details.click)} >\r\n            {details.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BlogButton\r\n","import React from 'react'\r\n\r\nconst BlogImage = ({details}) => {\r\n    return (\r\n        <div className=\"blog-image-div\" >\r\n            <img src={details.src} className=\"blog-image\" alt={details.alt} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogImage\r\n","import React from 'react'\r\n\r\nconst BlogList = ({details}) => {\r\n\r\n    const makeList = details.list.map(index =>\r\n            <li key={index}>\r\n                {index}\r\n            </li>\r\n    )\r\n\r\n    return (\r\n        <div className=\"blog-list\" >\r\n            <ul className=\"blog-list-ul\">\r\n                {makeList}\r\n            </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogList\r\n","import React from 'react'\r\n\r\nconst BlogPara = ({details}) => {\r\n    return (\r\n        <div className=\"blog-para\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogPara\r\n","import React from 'react'\r\n\r\nconst BlogSubheading = ({details}) => {\r\n    return (\r\n        <div className=\"blog-subheading\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogSubheading\r\n","import React from 'react'\r\n\r\nconst BlogTitle = ({details}) => {\r\n    return (\r\n        <div className=\"blog-title\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTitle\r\n","import React, { useEffect } from 'react'\r\nimport BlogButton from './BlogButton'\r\nimport BlogImage from './BlogImage'\r\nimport BlogList from './BlogList'\r\nimport BlogPara from './BlogPara'\r\nimport BlogSubheading from './BlogSubheading'\r\nimport BlogTitle from './BlogTitle'\r\n\r\nfunction BlogTemplate({blogData}) {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n    document.title = \"Blogs | \" + blogData[0].text + \" | Shlok Zanwar\"\r\n\r\n    const getRandomNumber = () =>{\r\n        return Math.floor(Math.random() * 100000);\r\n    }\r\n\r\n    const blog = blogData.map(index => {\r\n        if(index.type === \"title\"){\r\n            return <BlogTitle details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"paragraph\"){\r\n            return <BlogPara details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"subheading\"){\r\n            return <BlogSubheading details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"button\"){\r\n            return <BlogButton details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"list\"){\r\n            return <BlogList details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"image\"){\r\n            return <BlogImage details={index} key={getRandomNumber()} />\r\n        }\r\n        else{\r\n            return <div className=\"blog-para\"> ------ Could not render ------ </div>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"main-blog-div\">\r\n            {blog}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTemplate\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Masonry from 'react-masonry-css'\r\n\r\nfunction HomeCards() {\r\n    const [cards] = useState(require('./CardDetails.json'))\r\n\r\n    // const handleClickCards = (url) =>{\r\n    //     window.location.href = \r\n    // }\r\n\r\n    const cardType = (type) => {\r\n        if(type === \"Blog\"){\r\n            return (\r\n                <div className=\"card-type green-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n        else if(type === \"App\"){\r\n            return (\r\n                <div className=\"card-type blue-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const breakpoints = {\r\n        default: 5,\r\n        1600: 4,\r\n        1250: 3,\r\n        940: 2,\r\n        700: 1\r\n    };\r\n\r\n    return ( \r\n        <Masonry\r\n            breakpointCols={breakpoints}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n            { cards.map(card =>\r\n            <Link to={card.url} key={card.id}>\r\n                <div key={card.id} className=\"cards-box\">\r\n                    <div className=\"cards-info\">\r\n                        <div className=\"cards-title\">\r\n                            {card.title}\r\n                        </div>\r\n                        <div className=\"cards-description\">\r\n                            {card.description}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-bottom-bar\">\r\n                        <div className=\"card-date \">\r\n                            {card.date}\r\n                        </div>\r\n                        {cardType(card.type)}               \r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            )}\r\n        </Masonry>\r\n    )\r\n}\r\n\r\nexport default HomeCards\r\n","import React, { useEffect } from 'react'\r\nimport HomeCards from './HomeCards'\r\n\r\nfunction Home() {\r\n    \r\n    document.title = \"Home | Shlok Zanwar\"\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <HomeCards />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport {Navbar, Nav} from \"react-bootstrap\"\r\nimport { SiHackerrank, SiGithub, SiInstagram, SiLinkedin, SiGmail } from \"react-icons/si\";\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\n\r\nfunction MyNavbar() {\r\n\r\n    return (\r\n        <>\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-color\" variant=\"dark\" sticky=\"top\">\r\n\r\n            <Navbar.Brand href=\"https://shlok-zanwar.github.io/\" >\r\n                Shlok Zanwar\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/todo-app\">\r\n                            To-Do App\r\n                    </Nav.Link>\r\n                </Nav>\r\n                \r\n                <Nav>\r\n                    <Tooltip title='Github' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://github.com/Shlok-Zanwar\" className=\"navbar-icons\">\r\n                                <SiGithub />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Linkedin' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.linkedin.com/in/shlok-zanwar-0124961ba/\" className=\"navbar-icons\">\r\n                                <SiLinkedin />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='shlokzanwar14@gmail.com' placement='bottom' arrow interactive>\r\n                        <Nav.Link href=\"mailto:shlokzanwar14@gmail.com\" className=\"navbar-icons\">\r\n                                <SiGmail />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Hackerrank' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.hackerrank.com/shlok_21910163\" className=\"navbar-icons\">\r\n                                <SiHackerrank />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Instagram' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.instagram.com/shlok__zanwar/\" className=\"navbar-icons\">\r\n                                <SiInstagram />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    \r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyNavbar","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n    const availableClasses = [\r\n        \"todo-row blue\", \r\n        \"todo-row orange\", \r\n        \"todo-row pink\", \r\n        \"todo-row purple\",\r\n        \"todo-row red\",\r\n        \"todo-row green\"\r\n    ];\r\n    const colorNames = [\r\n        \"Blue\",\r\n        \"Orange\",\r\n        \"Pink\",\r\n        \"Purple\",\r\n        \"Red\",\r\n        \"Green\"\r\n    ]\r\n    const [classSelector, setClassSelector] = useState(props.edit.class + \" color-select-div\");\r\n    const [selectColor, setSelectColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(props.edit.id){\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: props.edit.list,\r\n                class: classSelector.slice(0, -17)\r\n            });\r\n        }\r\n        else{\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: \"todo\",\r\n                class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n            });\r\n        }\r\n\r\n        setInput('');\r\n\r\n    };\r\n\r\n    \r\n    const handleRightClick = (e) => {\r\n        e.preventDefault();\r\n        setSelectColor(true);\r\n    }\r\n\r\n\r\n    const nextClassColor = e => {\r\n        const classesUsed = e.target.className.split(\" \");\r\n        setClassSelector(availableClasses[(availableClasses.indexOf((classesUsed[0] + \" \" + classesUsed[1])) + 1) % availableClasses.length ] + \" color-select-div\");\r\n    }\r\n\r\n\r\n    var colorSelector = <div className={classSelector} onClick={(e) => nextClassColor(e)} onContextMenu={(e) => handleRightClick(e)}>\r\n                            {colorNames[availableClasses.indexOf(classSelector.slice(0, -17))]}\r\n                        </div>\r\n\r\n\r\n    if(selectColor){\r\n        colorSelector = availableClasses.map((className, index) => {\r\n            return(\r\n                <div className={className + \" color-select-div\"} key={colorNames[index]} onClick={(e) => {setClassSelector(e.target.className); setSelectColor(false)}} >\r\n                    {colorNames[index]}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n        {props.edit.id ? (\r\n            <div>\r\n                <div className=\"edit-form\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Update your todo\" \r\n                        value={input}\r\n                        className=\"todo-input\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className=\"todo-button edit\">Update</button>\r\n                </div>\r\n                {colorSelector}\r\n            </div>\r\n            ) : (\r\n            <>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add a todo\" \r\n                    value={input}\r\n                    className=\"todo-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\">Add Todo</button>\r\n            </>\r\n        )}\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Todo({todos, updateTodo, sendToDoing, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"todo\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"todo\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"todo\" ? (\r\n        <div className={todo.class}\r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Doing' placement='top' arrow>\r\n                    <span>\r\n                        <FiSend\r\n                            onClick={() => sendToDoing(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Doing({todos, updateTodo, sendToDo, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"doing\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"doing\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"doing\" ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Doing\r\n","import React from 'react'\r\n\r\nfunction DeleteButton({todos, deleteAllDone, allowDrop, removeTodo, showDelete}) {\r\n    \r\n    return [...todos].filter(todo => todo.list === \"done\").length > 1 || showDelete ? (\r\n        <button \r\n            className=\"delete-all-button\" \r\n            onClick={deleteAllDone} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDrop={(e) => removeTodo(JSON.parse(e.dataTransfer.getData(\"todo\")).id)} \r\n        >\r\n            Delete Done\r\n        </button>\r\n    ) : null\r\n}\r\n\r\nexport default DeleteButton\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Done({todos, removeTodo, updateTodo, sendToDo, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"done\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"done\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"done\"  ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Delete To-do' placement='top' arrow>\r\n                    <span>\r\n                        <RiDeleteBin5Line \r\n                            onClick={() => removeTodo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Done\r\n","import React, {useState, useEffect} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\nimport Doing from './Doing'\r\nimport DeleteButton from './DeleteButton';\r\nimport Done from './Done';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState( localStorage.getItem('savedTodos') ? JSON.parse(localStorage.getItem('savedTodos')) : []);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        // Saving data to local storage every time Todos are updated\r\n        localStorage.setItem('savedTodos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    // Preventing previously created todos from getting destroyed after update\r\n    useEffect(() => {\r\n        if(localStorage.getItem('update_version') !== \"v1\"){\r\n\r\n            const availableClasses = [\r\n                \"todo-row blue\", \r\n                \"todo-row orange\", \r\n                \"todo-row pink\", \r\n                \"todo-row purple\",\r\n                \"todo-row red\",\r\n                \"todo-row green\"\r\n            ];\r\n            var newTodos = [];\r\n            var todoType = \"\";\r\n\r\n            todos.map(todo => {\r\n                if(todo.todoList){\r\n                    todoType = \"todo\";\r\n                }\r\n                else if (todo.doing){\r\n                    todoType = \"doing\";\r\n                }\r\n                else{\r\n                    todoType = \"done\";\r\n                }\r\n\r\n                var updateTodo = {\r\n                    id: todo.id,\r\n                    text: todo.text,\r\n                    list: todoType,\r\n                    class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n                }\r\n                newTodos.push(updateTodo);\r\n            });\r\n            \r\n            setTodos(newTodos);\r\n            localStorage.setItem(\"update_version\", \"v1\"); \r\n        }\r\n    }, [])\r\n\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [...todos, todo];\r\n        setTodos(newTodos)\r\n    }\r\n    \r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(a => {\r\n            return setTodos(removeArr);\r\n        })\r\n    }\r\n\r\n\r\n    const sendToDo = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"todo\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const sendToDoing = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"doing\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n    \r\n\r\n    const sendToDone = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"done\";\r\n            }\r\n            return todo;\r\n        })\r\n        enqueueSnackbar(\"Yayyy !! You completed a todo. \", {\r\n            variant: 'success',\r\n        });\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const deleteAllDone = () => {\r\n        let updatedTodos = [...todos].filter(todo => todo.list !== \"done\")\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const handleDrag = (e, todo) => {\r\n        e.dataTransfer.setData(\"todo\", todo);\r\n        setShowDelete(true);\r\n    }\r\n\r\n\r\n    const handleToDoDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDo(id);\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoingDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDoing((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoneDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDone((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handlePositionChange = (e, onTodo) => {\r\n        var changeTodo = JSON.parse(e.dataTransfer.getData(\"todo\"));\r\n        changeTodo.list = onTodo.list;\r\n\r\n        const newTodos = [];\r\n        var i;\r\n        for(i = 0; i < todos.length; i ++){\r\n            \r\n            if(todos[i].id !== changeTodo.id){\r\n                newTodos.push(todos[i]);\r\n            }\r\n            if(todos[i].id === onTodo.id){\r\n                newTodos.push(changeTodo);\r\n            }\r\n        }\r\n        setShowDelete(false);\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(prev => {\r\n            return setTodos(newTodos);\r\n        });\r\n    }\r\n    \r\n\r\n    const allowDrop = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"todo-app\" onDrop={(e) => handleToDoDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2>To Do's</h2>\r\n            <TodoForm onSubmit={addTodo} edit={{class: \"todo-row blue\"}} newTodo={true}/>\r\n            <Todo \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDoing={sendToDoing} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app\" onDrop={(e) => handleDoingDrop(e)} onDragOver={(e) => allowDrop(e)} >\r\n            <h2>Doing ....</h2>\r\n            <Doing \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag}\r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app extra-padding\" onDrop={(e) => handleDoneDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2>Done !!!</h2>\r\n            <Done \r\n                todos={todos} \r\n                removeTodo={removeTodo} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n            <DeleteButton \r\n                todos={todos}\r\n                deleteAllDone={deleteAllDone} \r\n                allowDrop={allowDrop} \r\n                removeTodo={removeTodo} \r\n                showDelete={showDelete} \r\n            />\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoList\r\n","import './TodoApp.css';\nimport TodoList from './components/TodoList';\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from 'react';\n\nfunction App() {\n\n  document.title = \"To-Do App | Shlok Zanwar\"\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <>\n    <div className=\"main-outer-todo-div\">\n      <Link to=\"blogs/todo-app\">\n        <h1>To-Do App</h1>\n      </Link>\n      <TodoList />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useEffect } from 'react'\r\nimport LineTo from 'react-lineto'\r\n\r\nfunction Grid({grid, loading, setLoading, search}) {\r\n\r\n\r\n    function debounce(fn, ms) {\r\n        let timer\r\n        return _ => {\r\n            clearTimeout(timer)\r\n            timer = setTimeout(_ => {\r\n                timer = null\r\n                fn.apply(this, arguments)\r\n            }, ms)\r\n        };\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const debouncedHandleResize = debounce(function handleResize() {\r\n            setLoading(true);\r\n        }, 500)\r\n        \r\n        window.addEventListener('resize', debouncedHandleResize)\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setLoading(false), 100);\r\n    }, [loading])\r\n\r\n\r\n    const makeOneRow = (row, rowIndex) => \r\n        row.map((cell, cellIndex) => {\r\n            if(cell !== 0){\r\n                if(cell === search){\r\n\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" searched\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString()} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            else{\r\n                return(\r\n                    <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" transparent\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                        {}\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n\r\n    const makeRows = () => {\r\n        return grid.map((row, rowIndex) => (\r\n            <div className=\"rows\" key={\"r\" + rowIndex.toString()}>\r\n                {makeOneRow(row, rowIndex)}\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    \r\n    var zIndex = -1;\r\n    var makeArrows = () => {\r\n        return(\r\n            grid.map((row, rowIndex) => {\r\n                return(\r\n                    row.map((cell, cellIndex) => {\r\n                        if(cell !== 0 && rowIndex < grid.length - 1){\r\n                            // console.log(\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString() + \"   \" + \"r\"+(rowIndex+1).toString() + \"c\" + cellIndex.toString() );\r\n                            \r\n                            var leftChild = cellIndex;\r\n                            var rightChild = cellIndex + Math.pow(2, grid.length-rowIndex-1);\r\n\r\n                            // console.log(rowIndex, \" \", leftChild, \" \" , rightChild);\r\n\r\n                            if(grid[rowIndex+1][leftChild] !== 0 && grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <>\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()} \r\n                                    />\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()} \r\n                                    />\r\n                                    </>\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][leftChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}\r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"   \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"tree-outer-div\">\r\n            <div className=\"tree-main-div\">\r\n                {makeRows()}\r\n                {loading ? null : makeArrows() }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Grid;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\nfunction BST() {\r\n    const [binaryTree, setBinaryTree] = useState([\r\n        [0],\r\n        [0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]);\r\n    const [height, setHeight] = useState(0);\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n    \r\n    useEffect(() => {\r\n        makeVisualTree();\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n\r\n        for(i = 0; i < height; i ++){\r\n            // var noOfElements = Math.pow(2, i);\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        const newTree = [...binaryTree];\r\n        if(newTree[0][0] === 0 ){\r\n            newTree[0][0] = parseInt(data);\r\n            setBinaryTree(newTree);\r\n            setHeight(1);\r\n            enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                variant: 'success',\r\n            });\r\n            // console.log(binaryTree, \" \", height);\r\n            return;\r\n        }\r\n        \r\n        var i, j=0;\r\n        for(i = 0; i < height && i < 6; i++){\r\n            if(data < newTree[i][j]){\r\n                if(newTree[i+1][2*j] === 0){\r\n                    newTree[i+1][2*j] = parseInt(data);\r\n                    setBinaryTree(newTree);\r\n                    setHeight(Math.max(height, i + 2));\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    // console.log(binaryTree, \" \", height);\r\n                    return;\r\n                }\r\n                else{\r\n                    j = 2*j;\r\n                }\r\n            }\r\n            else if(data > newTree[i][j]){\r\n                if(newTree[i+1][2*j + 1] === 0){\r\n                    newTree[i+1][2*j + 1] = parseInt(data);\r\n                    setBinaryTree(newTree);\r\n                    setHeight(Math.max(height, i + 2));\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    // console.log(binaryTree, \" \", height);\r\n                    return;\r\n                }\r\n                else{\r\n                    j = j*2 + 1 \r\n                }\r\n            }\r\n            else{\r\n                enqueueSnackbar(data +\" is already present\", {\r\n                    variant: 'error',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(\"Maximum height reaced :(\", {\r\n            variant: 'error',\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const afterDeletePosi = (oldI, oldJ, newI, newJ, newTree) => {\r\n        newTree[newI + 1][newJ*2] = newTree[oldI + 1][oldJ*2]; \r\n        newTree[oldI + 1][oldJ*2] = 0;\r\n        newTree[newI + 1][newJ*2 + 1] = newTree[oldI + 1][oldJ*2 + 1]; \r\n        newTree[oldI + 1][oldJ*2 + 1] = 0;\r\n        if(newTree[newI + 1][newJ*2] !== 0){\r\n            newTree = afterDeletePosi(oldI + 1, oldJ*2, newI+1, newJ*2, newTree);\r\n        }\r\n        if(newTree[newI + 1][newJ*2 + 1] !== 0){\r\n            newTree = afterDeletePosi(oldI + 1, oldJ*2 + 1, newI+1, newJ*2 + 1, newTree);\r\n        }\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const deleteFromTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j, k;\r\n        var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i < 6; i ++){\r\n            for(j = 0; j < newTree[i].length; j ++){\r\n                if(newTree[i][j] === data){\r\n                    // alert(\"Found\");\r\n\r\n                    // For no left and right\r\n                    if(newTree[i + 1][2*j] === 0 && newTree[i + 1][2*j + 1] === 0){\r\n                        newTree[i][j] = 0;\r\n                        setBinaryTree(newTree);\r\n                        for(k = 0; k < newTree[i].length; k++){\r\n                            if(newTree[i][k] !== 0){\r\n                                break;\r\n                            }\r\n                        }\r\n                        if(k === newTree[i].length){\r\n                            setHeight(i);\r\n                        }\r\n                        if(data !== -1){\r\n                            enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                variant: 'success',\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // If right empty\r\n                    else if(newTree[i + 1][2*j + 1] === 0){\r\n                        newTree[i][j] = newTree[i+1][2*j];\r\n                        newTree = afterDeletePosi(i + 1, 2*j, i, j, newTree);\r\n                        setBinaryTree(newTree);\r\n                        if(data !== -1){\r\n                            enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                variant: 'success',\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // If left empty\r\n                    else if(newTree[i + 1][2*j] === 0){\r\n                        newTree[i][j] = newTree[i+1][2*j + 1];\r\n                        newTree = afterDeletePosi(i + 1, 2*j + 1, i, j, newTree);\r\n                        setBinaryTree(newTree);\r\n                        if(data !== -1){\r\n                            enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                variant: 'success',\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // if both full\r\n                    else{\r\n                        var startI = i +1;\r\n                        var startJ = j*2 + 1;\r\n                        while(true){\r\n                            if(newTree[startI + 1][startJ*2] === 0){\r\n                                newTree[i][j] = newTree[startI][startJ];\r\n                                newTree[startI][startJ] = -1;\r\n                                setBinaryTree(newTree);\r\n                                enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                    variant: 'success',\r\n                                });\r\n                                deleteFromTree(-1);\r\n                                return;\r\n                                \r\n                            }\r\n                            else{\r\n                                startI = startI + 1;\r\n                                startJ = startJ*2;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        if(i === 6){\r\n            for(j = 0; j < newTree[i].length; j++){\r\n                if(newTree[i][j] === data){\r\n                    newTree[i][j] = 0;\r\n                    for(k = 0; k < newTree[i].length; k++){\r\n                        if(newTree[i][k] !== 0){\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(k === newTree[i].length){\r\n                        setHeight(i);\r\n                    }\r\n                    setBinaryTree(newTree);\r\n                    enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j;\r\n        // var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i <= 6; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        setSearch(-2);\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const clearTree = () => {\r\n        var newTree = [\r\n            [0],\r\n            [0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        ];\r\n        if(height > 0 || grid.length > 0){\r\n            // console.log(\"doing\");\r\n            setBinaryTree(newTree);\r\n            setGrid([]);\r\n            setHeight(0);\r\n        }\r\n        enqueueSnackbar(\"Binary Tree Cleared.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            clearTree();\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Delete\"){\r\n            deleteFromTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            setSearch(parseInt(input));\r\n            searchInTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Delete\" >Delete</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"80px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Binary-Tree-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BST\r\n","import './TreeCss.css';\r\nimport BST from './Components/BST';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\n\r\nfunction BSTApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"BST Visualization | Shlok Zanwar\"\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"red\" }}>\r\n                Dismiss\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n            variant: 'warning',\r\n            autoHideDuration: 5000,\r\n            action,\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <BST />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BSTApp;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\nfunction MaxHeap() {\r\n    const [binaryTree, setBinaryTree] = useState([\r\n        [0],\r\n        [0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]);\r\n    const [height, setHeight] = useState(0);\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n    \r\n    useEffect(() => {\r\n        makeVisualTree();\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n\r\n        for(i = 0; i < height; i ++){\r\n            // var noOfElements = Math.pow(2, i);\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const myInsertPosition = (newTree, data, myRow, myColumn) => {\r\n        var temp;\r\n        while (myRow !== 0){\r\n            var myParentRow = myRow - 1, myParentCol = Math.floor(myColumn/2);\r\n            if(newTree[myParentRow][myParentCol] >= data ){\r\n                break;\r\n            }\r\n\r\n            temp = newTree[myParentRow][myParentCol];\r\n            newTree[myParentRow][myParentCol] = newTree[myRow][myColumn];\r\n            newTree[myRow][myColumn] = temp;\r\n\r\n            myRow = myParentRow;\r\n            myColumn = myParentCol;\r\n        }\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        data = parseInt(data);\r\n\r\n        var i, j=0;\r\n        for(i = 0; i <= height && i <= 6; i++){\r\n            for(j = 0; j < newTree[i].length; j++){\r\n\r\n                if(newTree[i][j] === 0){\r\n                    newTree[i][j] = data;\r\n                    newTree = myInsertPosition(newTree, data, i, j);\r\n\r\n                    setBinaryTree(newTree);\r\n                    setHeight(i + 1);\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(\"Maximum height reaced :(\", {\r\n            variant: 'error',\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    const myDeletePosition = (newTree) => {\r\n        var row = 0, col = 0, greaterCol, temp;\r\n        while(true){\r\n            if(newTree[row + 1][col*2 ] >= newTree[row + 1][col*2 + 1] ){\r\n                greaterCol = col * 2;\r\n            }\r\n            else{\r\n                greaterCol = (col * 2) + 1;\r\n            }\r\n\r\n            if(newTree[row][col] < newTree[row + 1][greaterCol] ){\r\n                temp = newTree[row][col];\r\n                newTree[row][col] = newTree[row + 1][greaterCol];\r\n                newTree[row + 1][greaterCol] = temp;\r\n\r\n                row = row + 1;\r\n                col = greaterCol;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n\r\n        }\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        var i, j;\r\n        var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i < 6; i ++){\r\n            if(newTree[i][0] === 0){\r\n                break;\r\n            }\r\n        }\r\n        i = i - 1;\r\n       \r\n        if(i !== -1){\r\n            for(j = 0; j < newTree[i].length; j ++){\r\n                if(newTree[i][j] === 0){\r\n                    break;\r\n                }\r\n            }\r\n\r\n            j = j - 1;\r\n            newTree[0][0] = newTree[i][j];\r\n            newTree[i][j] = 0;\r\n\r\n            newTree = myDeletePosition(newTree);\r\n            setBinaryTree(newTree);\r\n            enqueueSnackbar(\"Deleted root node successfully.\", {\r\n                variant: 'success',\r\n            });\r\n            return;\r\n        }\r\n\r\n        enqueueSnackbar(\"Nothing to delete\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j;\r\n        // var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i <= 6; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        setSearch(-2);\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const clearTree = () => {\r\n        var newTree = [\r\n            [0],\r\n            [0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        ];\r\n        if(height > 0 || grid.length > 0){\r\n            // console.log(\"doing\");\r\n            setBinaryTree(newTree);\r\n            setGrid([]);\r\n            setHeight(0);\r\n        }\r\n        enqueueSnackbar(\"Binary Tree Cleared.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            clearTree();\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            setSearch(parseInt(input));\r\n            searchInTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Max Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n                \r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MaxHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MaxHeap from './Components/MaxHeap';\r\n\r\n\r\nfunction MaxHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Max Heap Visualization | Shlok Zanwar\"\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"red\" }}>\r\n                Dismiss\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n            variant: 'warning',\r\n            autoHideDuration: 5000,\r\n            action,\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MaxHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MaxHeapApp;","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\nfunction MinHeap() {\r\n    const [binaryTree, setBinaryTree] = useState([\r\n        [0],\r\n        [0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]);\r\n    const [height, setHeight] = useState(0);\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n    \r\n    useEffect(() => {\r\n        makeVisualTree();\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n\r\n        for(i = 0; i < height; i ++){\r\n            // var noOfElements = Math.pow(2, i);\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const myInsertPosition = (newTree, data, myRow, myColumn) => {\r\n        var temp;\r\n        while (myRow !== 0){\r\n            var myParentRow = myRow - 1, myParentCol = Math.floor(myColumn/2);\r\n            if(newTree[myParentRow][myParentCol] <= data ){\r\n                break;\r\n            }\r\n\r\n            temp = newTree[myParentRow][myParentCol];\r\n            newTree[myParentRow][myParentCol] = newTree[myRow][myColumn];\r\n            newTree[myRow][myColumn] = temp;\r\n\r\n            myRow = myParentRow;\r\n            myColumn = myParentCol;\r\n        }\r\n\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        data = parseInt(data);\r\n\r\n        var i, j=0;\r\n        for(i = 0; i <= height && i <= 6; i++){\r\n            for(j = 0; j < newTree[i].length; j++){\r\n\r\n                if(newTree[i][j] === 0){\r\n                    newTree[i][j] = data;\r\n                    newTree = myInsertPosition(newTree, data, i, j);\r\n\r\n                    setBinaryTree(newTree);\r\n                    setHeight(i + 1);\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(\"Maximum height reaced :(\", {\r\n            variant: 'error',\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    const myDeletePosition = (newTree) => {\r\n        var row = 0, col = 0, smallerCol, temp;\r\n        while(true){\r\n            if(newTree[row + 1][col*2 ] === 0 && newTree[row + 1][col*2 + 1] === 0 ){\r\n                break;\r\n            }\r\n            else if(newTree[row + 1][col*2 ] === 0){\r\n                smallerCol = (col * 2) + 1;\r\n            }\r\n            else if(newTree[row + 1][col*2 + 1] === 0){\r\n                smallerCol = (col * 2);\r\n            }\r\n            else{\r\n                if(newTree[row + 1][col*2 ] <= newTree[row + 1][col*2 + 1] ){\r\n                    smallerCol = col * 2;\r\n                }\r\n                else{\r\n                    smallerCol = (col * 2) + 1;\r\n                }\r\n            }\r\n\r\n            if(newTree[row][col] > newTree[row + 1][smallerCol] ){\r\n                temp = newTree[row][col];\r\n                newTree[row][col] = newTree[row + 1][smallerCol];\r\n                newTree[row + 1][smallerCol] = temp;\r\n\r\n                row = row + 1;\r\n                col = smallerCol;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n\r\n        return newTree\r\n\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        var i, j;\r\n        var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i < 6; i ++){\r\n            if(newTree[i][0] === 0){\r\n                break;\r\n            }\r\n        }\r\n        i = i - 1;\r\n       \r\n        if(i !== -1){\r\n            for(j = 0; j < newTree[i].length; j ++){\r\n                if(newTree[i][j] === 0){\r\n                    break;\r\n                }\r\n            }\r\n\r\n            j = j - 1;\r\n            newTree[0][0] = newTree[i][j];\r\n            newTree[i][j] = 0;\r\n\r\n            newTree = myDeletePosition(newTree);\r\n            setBinaryTree(newTree);\r\n            enqueueSnackbar(\"Deleted root node successfully.\", {\r\n                variant: 'success',\r\n            });\r\n            return;\r\n        }\r\n\r\n        enqueueSnackbar(\"Nothing to delete\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j;\r\n        // var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i <= 6; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        setSearch(-2);\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const clearTree = () => {\r\n        var newTree = [\r\n            [0],\r\n            [0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        ];\r\n        if(height > 0 || grid.length > 0){\r\n            setBinaryTree(newTree);\r\n            setGrid([]);\r\n            setHeight(0);\r\n        }\r\n        enqueueSnackbar(\"Binary Tree Cleared.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            clearTree();\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            setSearch(parseInt(input));\r\n            searchInTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Min Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MinHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MinHeap from './Components/MinHeap';\r\n\r\n\r\nfunction MinHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Min Heap Visualization | Shlok Zanwar\"\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"red\" }}>\r\n                Dismiss\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n            variant: 'warning',\r\n            autoHideDuration: 5000,\r\n            action,\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MinHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MinHeapApp;","import React, { useEffect } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport BlogTemplate from './BlogTemplates/BlogTemplate';\r\nimport Home from './HomeComponents/Home';\r\nimport MyNavbar from \"./MyNavbar\";\r\nimport TodoApp from \"./TodoAppComponents/TodoApp\"\r\nimport BSTApp from './TreeComponents/BSTApp';\r\nimport MaxHeapApp from './TreeComponents/MaxHeapApp';\r\nimport MinHeapApp from './TreeComponents/MinHeapApp';\r\n\r\n\r\nfunction RoutePaths() {\r\n\r\n    var forUseEffect;\r\n    useEffect(() => {\r\n        localStorage.removeItem(\"redirectTo\");\r\n    }, [forUseEffect])\r\n\r\n    return (\r\n        <Router>\r\n            <MyNavbar />\r\n\r\n            <Switch>\r\n            \r\n                <Route path=\"/blogs/toxicbot\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/ToxicbotBlog.json\")} />\r\n                </Route>\r\n                <Route path=\"/blogs/todo-app\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/TodoBlog.json\")} />\r\n                </Route>\r\n                <Route path=\"/blogs/dock-forms\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/DockFormsBlog.json\")} />\r\n                </Route>\r\n                <Route path=\"/blogs/hotel-managment\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/HotelManagmentBlog.json\")} />\r\n                </Route>\r\n\r\n                <Route path=\"/todo-app\">\r\n                    <TodoApp />\r\n                </Route>\r\n\r\n                <Route path=\"/bst-visualization\">\r\n                    <BSTApp />\r\n                </Route>\r\n                <Route path=\"/max-heap-visualization\">\r\n                    <MaxHeapApp />\r\n                </Route>\r\n                <Route path=\"/min-heap-visualization\">\r\n                    <MinHeapApp />\r\n                </Route>\r\n\r\n\r\n                <Route path=\"/\">\r\n                    {\r\n                        localStorage.getItem('redirectTo') ? <Redirect to={localStorage.getItem('redirectTo')} /> \r\n                        : null\r\n                        \r\n                    }\r\n                    <Home />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RoutePaths\r\n","import './App.css';\nimport RoutePaths  from './RoutePaths'\n\nfunction App() {\n  return (\n    <div>\n      <RoutePaths />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { SnackbarProvider } from 'notistack';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider\n      maxSnack={2}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={3000}\n    >\n      <App />\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}