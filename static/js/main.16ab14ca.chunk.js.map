{"version":3,"sources":["BlogTemplates/BlogButton.js","BlogTemplates/BlogImage.js","BlogTemplates/BlogList.js","BlogTemplates/BlogPara.js","BlogTemplates/BlogSubheading.js","BlogTemplates/BlogTitle.js","BlogTemplates/BlogTemplate.js","HomeComponents/HomeCards.js","HomeComponents/Home.js","MyNavbar.js","PasteBinComponents/PasteBinHome.js","firebase.js","PasteBinComponents/PasteBinApp.js","TodoAppComponents/components/TodoForm.js","TodoAppComponents/components/Todo.js","TodoAppComponents/components/Doing.js","TodoAppComponents/components/DeleteButton.js","TodoAppComponents/components/Done.js","TodoAppComponents/components/TodoList.js","TodoAppComponents/TodoApp.js","TreeComponents/Components/Grid.js","TreeComponents/Components/BST.js","TreeComponents/BSTApp.js","TreeComponents/Components/MaxHeap.js","TreeComponents/MaxHeapApp.js","TreeComponents/Components/MinHeap.js","TreeComponents/MinHeapApp.js","CanvasComponents/CanvasHome.js","CanvasComponents/CanvasApp.js","RoutePaths.js","App.js","index.js"],"names":["BlogButton","details","className","onClick","url","click","window","location","href","text","BlogImage","src","alt","BlogList","makeList","list","map","index","BlogPara","BlogSubheading","BlogTitle","BlogTemplate","blogData","useEffect","scrollTo","document","title","getRandomNumber","Math","floor","random","blog","type","HomeCards","useState","require","cards","breakpointCols","default","1600","1250","940","700","columnClassName","card","to","description","date","id","Home","MyNavbar","Navbar","collapseOnSelect","expand","variant","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","Tooltip","placement","arrow","interactive","PasteBinHome","setUrl","localStorage","getItem","JSON","parse","recentBins","setRecentBins","inputRef","useRef","history","useHistory","loadRecentPasteBins","style","display","cursor","pasteBin","push","removeArr","filter","bin","setItem","stringify","removeRecent","innerWidth","current","focus","Helmet","textAlign","onSubmit","e","preventDefault","path","substring","length","split","marginBottom","placeholder","value","onChange","target","ref","maxWidth","r","toString","generateNewURL","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","this","db","firestore","data","doc","set","get","abc","PasteBinApp","result","setResult","setData","savePath","setSavePath","saved","setSaved","useSnackbar","enqueueSnackbar","closeSnackbar","action","key","Fragment","dontShowSnackbar","background","border","color","paddingRight","textDecoration","fontWeight","pathname","toLowerCase","firebase","getPasteBinData","then","recentPasteBins","pop","saveRecent","autoHideDuration","undefined","addPasteBinData","position","spellCheck","console","log","command","toCopy","temp","createElement","tempMsg","createTextNode","appendChild","body","select","execCommand","removeChild","copyToClipboard","TodoForm","props","edit","input","setInput","availableClasses","colorNames","class","classSelector","setClassSelector","selectColor","setSelectColor","handleChange","colorSelector","classesUsed","indexOf","nextClassColor","onContextMenu","handleRightClick","slice","Todo","todos","updateTodo","sendToDoing","sendToDone","handleDrag","handlePositionChange","allowDrop","setShowDelete","setEdit","todo","draggable","onDragStart","onDragEnd","onDrop","onDragOver","onDoubleClick","Doing","sendToDo","DeleteButton","deleteAllDone","removeTodo","showDelete","dataTransfer","getData","Done","TodoList","setTodos","newTodos","todoType","todoList","doing","todoId","newValue","test","prev","item","a","updatedTodos","onTodo","changeTodo","i","handleToDoDrop","newTodo","handleDoingDrop","handleDoneDrop","App","Grid","grid","loading","setLoading","search","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","makeOneRow","row","rowIndex","cell","cellIndex","leftChild","rightChild","pow","from","zIndex","borderColor","borderWidth","BST","binaryTree","setBinaryTree","height","setHeight","setGrid","setSearch","showAnimation","setShowAnimation","makeVisualTree","j","k","myList","noOfZerosInMiddle","tempList","iForAnimation","createAnimation","compare","afterDeletePosi","oldI","oldJ","newI","newJ","newTree","deleteFromTree","parseInt","startI","startJ","handleSubmit","operation","prevSearch","max","shift","insertToTree","searchInTree","marginLeft","checked","fontSize","BSTApp","MaxHeap","myInsertPosition","myRow","myColumn","myParentRow","myParentCol","greaterCol","col","myDeletePosition","marginRight","MaxHeapApp","MinHeap","smallerCol","MinHeapApp","CanvasHome","loadRecentCanvas","canvas","CanvasApp","brushSize","setBrushSize","hex","setColor","canvasData","setCanvasData","getCanvasData","recentCanvas","addCanvasData","width","onChangeComplete","undo","clear","getSaveData","hideGrid","saveData","backgroundColor","brushColor","brushRadius","lazyRadius","canvasWidth","canvasHeight","RoutePaths","removeItem","forUseEffect","exact","ReactDOM","render","StrictMode","maxSnack","anchorOrigin","vertical","horizontal","getElementById"],"mappings":"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","file":"static/js/main.16ab14ca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst BlogButton = ({details}) => {\r\n\r\n    const handleClick = (url) => {\r\n        window.location.href = url;\r\n    }\r\n\r\n    return (\r\n        <button className=\"redirect-button\" onClick={() => handleClick(details.click)} >\r\n            {details.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BlogButton\r\n","import React from 'react'\r\n\r\nconst BlogImage = ({details}) => {\r\n    return (\r\n        <div className=\"blog-image-div\" >\r\n            <img src={details.src} className=\"blog-image\" alt={details.alt} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogImage\r\n","import React from 'react'\r\n\r\nconst BlogList = ({details}) => {\r\n\r\n    const makeList = details.list.map(index =>\r\n            <li key={index}>\r\n                {index}\r\n            </li>\r\n    )\r\n\r\n    return (\r\n        <div className=\"blog-list\" >\r\n            <ul className=\"blog-list-ul\">\r\n                {makeList}\r\n            </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogList\r\n","import React from 'react'\r\n\r\nconst BlogPara = ({details}) => {\r\n    return (\r\n        <div className=\"blog-para\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogPara\r\n","import React from 'react'\r\n\r\nconst BlogSubheading = ({details}) => {\r\n    return (\r\n        <div className=\"blog-subheading\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogSubheading\r\n","import React from 'react'\r\n\r\nconst BlogTitle = ({details}) => {\r\n    return (\r\n        <div className=\"blog-title\" >\r\n            {details.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTitle\r\n","import React, { useEffect } from 'react'\r\nimport BlogButton from './BlogButton'\r\nimport BlogImage from './BlogImage'\r\nimport BlogList from './BlogList'\r\nimport BlogPara from './BlogPara'\r\nimport BlogSubheading from './BlogSubheading'\r\nimport BlogTitle from './BlogTitle'\r\n\r\nfunction BlogTemplate({blogData}) {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n    document.title = \"Blogs | \" + blogData[0].text + \" | Shlok Zanwar\"\r\n\r\n    const getRandomNumber = () =>{\r\n        return Math.floor(Math.random() * 100000);\r\n    }\r\n\r\n    const blog = blogData.map(index => {\r\n        if(index.type === \"title\"){\r\n            return <BlogTitle details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"paragraph\"){\r\n            return <BlogPara details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"subheading\"){\r\n            return <BlogSubheading details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"button\"){\r\n            return <BlogButton details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"list\"){\r\n            return <BlogList details={index} key={getRandomNumber()} />\r\n        }\r\n        else if(index.type === \"image\"){\r\n            return <BlogImage details={index} key={getRandomNumber()} />\r\n        }\r\n        else{\r\n            return <div className=\"blog-para\"> ------ Could not render ------ </div>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"main-blog-div\">\r\n            {blog}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTemplate\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Masonry from 'react-masonry-css'\r\n\r\nfunction HomeCards() {\r\n    const [cards] = useState(require('./CardDetails.json'))\r\n\r\n    // const handleClickCards = (url) =>{\r\n    //     window.location.href = \r\n    // }\r\n\r\n    const cardType = (type) => {\r\n        if(type === \"Blog\"){\r\n            return (\r\n                <div className=\"card-type green-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n        else if(type === \"App\"){\r\n            return (\r\n                <div className=\"card-type blue-border\">\r\n                    {type}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const breakpoints = {\r\n        default: 5,\r\n        1600: 4,\r\n        1250: 3,\r\n        940: 2,\r\n        700: 1\r\n    };\r\n\r\n    return ( \r\n        <Masonry\r\n            breakpointCols={breakpoints}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n            { cards.map(card =>\r\n            <Link to={card.url} key={card.id}>\r\n                <div key={card.id} className=\"cards-box\">\r\n                    <div className=\"cards-info\">\r\n                        <div className=\"cards-title\">\r\n                            {card.title}\r\n                        </div>\r\n                        <div className=\"cards-description\">\r\n                            {card.description}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-bottom-bar\">\r\n                        <div className=\"card-date \">\r\n                            {card.date}\r\n                        </div>\r\n                        {cardType(card.type)}               \r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            )}\r\n        </Masonry>\r\n    )\r\n}\r\n\r\nexport default HomeCards\r\n","import React, { useEffect } from 'react'\r\nimport HomeCards from './HomeCards'\r\n\r\nfunction Home() {\r\n    \r\n    document.title = \"Home | Shlok Zanwar\"\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <HomeCards />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport {Navbar, Nav} from \"react-bootstrap\"\r\nimport { SiHackerrank, SiGithub, SiInstagram, SiLinkedin, SiGmail, SiCodechef, SiTwitter } from \"react-icons/si\";\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\n\r\nfunction MyNavbar() {\r\n\r\n    return (\r\n        <>\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-color\" variant=\"dark\" sticky=\"top\">\r\n\r\n            <Navbar.Brand href=\"https://shlok-zanwar.github.io/\" >\r\n                Shlok Zanwar\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/todo-app\">\r\n                            To-Do App\r\n                    </Nav.Link>\r\n                </Nav>\r\n                \r\n                <Nav>\r\n                    <Tooltip title='Github' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://github.com/Shlok-Zanwar\" className=\"navbar-icons\">\r\n                                <SiGithub />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Linkedin' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.linkedin.com/in/shlok-zanwar-0124961ba/\" className=\"navbar-icons\">\r\n                                <SiLinkedin />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='shlokzanwar14@gmail.com' placement='bottom' arrow interactive>\r\n                        <Nav.Link href=\"mailto:shlokzanwar14@gmail.com\" className=\"navbar-icons\">\r\n                                <SiGmail />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Hackerrank' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.hackerrank.com/shlok_21910163\" className=\"navbar-icons\">\r\n                                <SiHackerrank />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='CodeChef' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.codechef.com/users/shlok_zanwar\" className=\"navbar-icons\">\r\n                                <SiCodechef />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Instagram' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.instagram.com/shlok__zanwar/\" className=\"navbar-icons\">\r\n                                <SiInstagram />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    <Tooltip title='Twitter' placement='bottom' arrow>\r\n                        <Nav.Link href=\"https://www.twitter.com/zanwar_shlok/\" className=\"navbar-icons\">\r\n                                <SiTwitter />\r\n                        </Nav.Link>\r\n                    </Tooltip>\r\n                    \r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyNavbar","import React, { useEffect, useRef, useState } from 'react'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction PasteBinHome() {\r\n    const [url, setUrl] = useState('');\r\n    const [recentBins, setRecentBins] =  useState(localStorage.getItem('recentPasteBins') ? JSON.parse(localStorage.getItem('recentPasteBins')) : []);\r\n    const inputRef = useRef(null);\r\n    let history = useHistory();\r\n    document.title = \"Paste Bin | Shlok Zanwar\"\r\n\r\n    const generateNewURL = () => {\r\n        let r = Math.random().toString(36).substring(4);\r\n        history.push(\"/pastebin/\" + r);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        var path = url;\r\n        if(url[0] === \"/\"){\r\n            path = path.substring(1, path.length);\r\n        }\r\n        path = path.split(\"/\");\r\n        if(path.length === 1){\r\n            if(path[0] !== \"\"){\r\n                history.push(\"/pastebin/\" + path[0]);\r\n            }\r\n        }\r\n        else{\r\n            if(path[0] === \"pastebin\"){\r\n                if(path[1] !== \"\"){\r\n                    history.push(\"/pastebin/\" + path[1]);\r\n                }\r\n            }\r\n        }\r\n        // console.log(path);\r\n\r\n    }\r\n\r\n    \r\n    const removeRecent = (pasteBin) => {\r\n        const removeArr = [...recentBins].filter(bin => bin !== pasteBin);\r\n        setRecentBins(removeArr);\r\n        localStorage.setItem('recentPasteBins', JSON.stringify(removeArr))\r\n    }\r\n\r\n    \r\n    const gotoRecent = (pasteBin) => {\r\n        history.push(\"/pastebin/\" + pasteBin);\r\n    }\r\n\r\n\r\n    const loadRecentPasteBins = recentBins.map(index => {\r\n            return (\r\n                <div style={{display:\"inline-table\"}} >\r\n                    <div className=\"recent-pastebin\">\r\n                        <div style={{cursor:\"pointer\"}} onClick={() => gotoRecent(index)}>\r\n                            {\"/\" + index}\r\n                        </div>\r\n                        <div className=\"icons\">\r\n                            <Tooltip title='Delete' placement='bottom' arrow>\r\n                                <span>\r\n                                    <RiDeleteBin5Line \r\n                                        onClick={() => removeRecent(index)}\r\n                                    />\r\n                                </span>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    })\r\n    \r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n    return ( \r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"main-blog-di\">\r\n                <div className=\"blog-title\">Paste Bin</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>A pastebin for sharing data without any authentication.</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Go to some URl like \"/pastebin/any\"</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Write anything</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Save</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Share the URL with anyone</div>\r\n                <br />\r\n                <form className=\"todo-form\" onSubmit={handleSubmit} style={{marginBottom:\"6px\"}}>\r\n                    <div className=\"edit-form\" >\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Type any url\" \r\n                                value={url}\r\n                                className=\"todo-input\"\r\n                                onChange={e => setUrl(e.target.value)}\r\n                                ref={inputRef}\r\n                                style={{maxWidth:\"275px\"}}\r\n                            />\r\n                            <button className=\"todo-button edit\">Go</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}} >OR</div> \r\n                <div className=\"redirect-button\" style={{maxWidth:\"230px\"}} onClick={() => generateNewURL()} >Generate random URL</div>\r\n                {recentBins.length > 0 ?\r\n                    <>\r\n                        <br />\r\n                        <div className=\"blog-para\" style={{textAlign:\"center\"}}>Recent Paste Bins</div>\r\n                        <div className=\"recent-pastebin-outer\" style={{maxWidth:\"500px\"}}>\r\n                            {loadRecentPasteBins}\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasteBinHome\r\n","import app from \"firebase/app\";\r\n// import 'firebase/database'\r\n// import 'firebase/auth'\r\nimport 'firebase/firebase-firestore'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA3_2rnMA0F-RcBYObb9v5aKhQdB5rMYdU\",\r\n    authDomain: \"shlok-website.firebaseapp.com\",\r\n    projectId: \"shlok-website\",\r\n    storageBucket: \"shlok-website.appspot.com\",\r\n    messagingSenderId: \"993579237604\", \r\n    appId: \"1:993579237604:web:9f13901ca731fed1f82cf1\",\r\n    measurementId: \"G-CNF32VVWZE\"\r\n};\r\n\r\n\r\nclass Firebase {\r\n\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n        // this.auth = app.auth();\r\n        this.db = app.firestore();\r\n    }\r\n    \r\n \r\n    // login(email, password) {\r\n\t// \treturn this.auth.signInWithEmailAndPassword(email, password)\r\n\t// }\r\n\r\n\r\n    // async register(name, email, password) {\r\n\t// \tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n\t// \treturn this.auth.currentUser.updateProfile({\r\n\t// \t\tdisplayName: name\r\n\t// \t})\r\n\t// }\r\n\r\n\r\n    addPasteBinData (url, data) {\r\n        this.db.doc(`pastebin/${url}`).set({\r\n            data\r\n        })\r\n    }\r\n\r\n\r\n    async getPasteBinData (url) {\r\n        const abc = await this.db.doc(`pastebin/${url}`).get();\r\n        return abc.get('data');\r\n    }\r\n\r\n    addCanvasData (url, data) {\r\n        this.db.doc(`canvas/${url}`).set({\r\n            data\r\n        })\r\n    }\r\n\r\n\r\n    async getCanvasData (url) {\r\n        const abc = await this.db.doc(`canvas/${url}`).get();\r\n        return abc.get('data');\r\n    }\r\n\r\n}\r\n\r\nexport default new Firebase()","import React, { useEffect, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport firebase from '../firebase';\r\nimport { useSnackbar } from 'notistack';\r\nimport { FaShare } from \"react-icons/fa\";\r\n\r\n\r\nfunction PasteBinApp() {\r\n    const [result, setResult] = useState('');\r\n    const [data, setData] = useState('Write and Share');\r\n    const [savePath, setSavePath] = useState(\"\")\r\n    const [saved, setSaved] = useState(true);\r\n\r\n\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = command;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Paste Bin | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowPastebinSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n\r\n\r\n    const saveRecent = (path) => {\r\n        var recentPasteBins = localStorage.getItem('recentPasteBins') ? JSON.parse(localStorage.getItem('recentPasteBins')) : [];\r\n        recentPasteBins = [...recentPasteBins].filter(pasteBin => pasteBin !== path);\r\n        recentPasteBins = [path, ...recentPasteBins];\r\n        if(recentPasteBins.length > 6){\r\n            recentPasteBins.pop();\r\n        }\r\n        localStorage.setItem('recentPasteBins', JSON.stringify(recentPasteBins));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(window.location.pathname);\r\n        var path = window.location.pathname;\r\n        // console.log(path[path.length - 1]);\r\n\r\n        if(path[path.length - 1] === \"/\"){\r\n            path = path.substring(0, path.length - 1);\r\n            window.location.pathname = path;\r\n        }\r\n        path = path.substring(1, path.length);\r\n        // console.log(path)\r\n        path = path.split(\"/\");\r\n        // console.log(path)\r\n\r\n        if(path.length > 2){\r\n            window.location.pathname = \"/\" + path[0] + \"/\" + path[1];\r\n        }\r\n\r\n        if(path[0].toLowerCase() === \"pastebin\"){\r\n            setSavePath(path[1].toLowerCase());\r\n            firebase.getPasteBinData(path[1].toLowerCase()).then(setResult, saveRecent(path[1]));\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowPastebinSnack\")){\r\n            enqueueSnackbar(\"Paste bin is publically visible.\\nPlease do not share private information.\", {\r\n                variant: 'info',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(result === undefined){\r\n            firebase.addPasteBinData(savePath, \"Write and Share\");\r\n            setData(\"Write and Share\");\r\n        }\r\n        else{\r\n          setData(result);\r\n        }\r\n    }, [result])\r\n\r\n\r\n    const saveData = () => {\r\n        if(!saved){\r\n            firebase.addPasteBinData(savePath, data);\r\n            setSaved(true);\r\n            console.log(\"Saving\");\r\n        }\r\n        enqueueSnackbar(\"Details saved successfully\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{display:\"flex\", position:\"relative\"}}>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <textarea \r\n                className=\"pastebin-text\" \r\n                spellCheck=\"false\" \r\n                value={data} \r\n                onChange={e => {setData(e.target.value); setSaved(false)}}\r\n            >\r\n            </textarea>\r\n            <div className=\"pastebin-controls\"> \r\n                    <button className=\"save-share-pastebin\" onClick={() => saveData()}>\r\n                        &nbsp;&nbsp; Save &nbsp;&nbsp; \r\n                    </button>\r\n                    <button className=\"save-share-pastebin\" onClick={() => {copyToClipboard(window.location.href)}}>\r\n                        <FaShare /> \r\n                    </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasteBinApp\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n    const availableClasses = [\r\n        \"todo-row blue\", \r\n        \"todo-row orange\", \r\n        \"todo-row pink\", \r\n        \"todo-row purple\",\r\n        \"todo-row red\",\r\n        \"todo-row green\"\r\n    ];\r\n    const colorNames = [\r\n        \"Blue\",\r\n        \"Orange\",\r\n        \"Pink\",\r\n        \"Purple\",\r\n        \"Red\",\r\n        \"Green\"\r\n    ]\r\n    const [classSelector, setClassSelector] = useState(props.edit.class + \" color-select-div\");\r\n    const [selectColor, setSelectColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(props.edit.id){\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: props.edit.list,\r\n                class: classSelector.slice(0, -17)\r\n            });\r\n        }\r\n        else{\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                list: \"todo\",\r\n                class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n            });\r\n        }\r\n\r\n        setInput('');\r\n\r\n    };\r\n\r\n    \r\n    const handleRightClick = (e) => {\r\n        e.preventDefault();\r\n        setSelectColor(true);\r\n    }\r\n\r\n\r\n    const nextClassColor = e => {\r\n        const classesUsed = e.target.className.split(\" \");\r\n        setClassSelector(availableClasses[(availableClasses.indexOf((classesUsed[0] + \" \" + classesUsed[1])) + 1) % availableClasses.length ] + \" color-select-div\");\r\n    }\r\n\r\n\r\n    var colorSelector = <div className={classSelector} onClick={(e) => nextClassColor(e)} onContextMenu={(e) => handleRightClick(e)}>\r\n                            {colorNames[availableClasses.indexOf(classSelector.slice(0, -17))]}\r\n                        </div>\r\n\r\n\r\n    if(selectColor){\r\n        colorSelector = availableClasses.map((className, index) => {\r\n            return(\r\n                <div className={className + \" color-select-div\"} key={colorNames[index]} onClick={(e) => {setClassSelector(e.target.className); setSelectColor(false)}} >\r\n                    {colorNames[index]}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n        {props.edit.id ? (\r\n            <div onClick={() => {setSelectColor(false);}}>\r\n                <div className=\"edit-form\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Update your todo\" \r\n                        value={input}\r\n                        className=\"todo-input\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className=\"todo-button edit\">Update</button>\r\n                </div>\r\n                {colorSelector}\r\n            </div>\r\n            ) : (\r\n            <>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add a todo\" \r\n                    value={input}\r\n                    className=\"todo-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\">Add Todo</button>\r\n            </>\r\n        )}\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Todo({todos, updateTodo, sendToDoing, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"todo\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"todo\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"todo\" ? (\r\n        <div className={todo.class}\r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"todo\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Doing' placement='top' arrow>\r\n                    <span>\r\n                        <FiSend\r\n                            onClick={() => sendToDoing(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Doing({todos, updateTodo, sendToDo, sendToDone, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"doing\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"doing\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"doing\" ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"doing\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Send to Done' placement='top' arrow>\r\n                    <span>\r\n                        <MdDoneAll\r\n                            onClick={() => sendToDone(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Doing\r\n","import React from 'react'\r\n\r\nfunction DeleteButton({todos, deleteAllDone, allowDrop, removeTodo, showDelete}) {\r\n    \r\n    return [...todos].filter(todo => todo.list === \"done\").length > 1 || showDelete ? (\r\n        <button \r\n            className=\"delete-all-button\" \r\n            onClick={deleteAllDone} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDrop={(e) => removeTodo(JSON.parse(e.dataTransfer.getData(\"todo\")).id)} \r\n        >\r\n            Delete Done\r\n        </button>\r\n    ) : null\r\n}\r\n\r\nexport default DeleteButton\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction Done({todos, removeTodo, updateTodo, sendToDo, handleDrag, handlePositionChange, allowDrop, setShowDelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        list: \"done\",\r\n        class: \"\"\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            list: \"done\",\r\n            class: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.list === \"done\"  ? (\r\n        <div className={todo.class} \r\n            key={index} \r\n            draggable={true} \r\n            onDragStart={(e) => handleDrag(e, JSON.stringify(todo))} \r\n            onDragEnd={() => setShowDelete(false)}\r\n            onDrop={(e) => handlePositionChange(e, todo)} \r\n            onDragOver={(e) => allowDrop(e)} \r\n            onDoubleClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n        >\r\n            <div key={todo.id}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Tooltip title='Edit Text' placement='top' arrow>\r\n                    <span>\r\n                        <TiEdit \r\n                            onClick={() => setEdit({ id: todo.id, value: todo.text, list: \"done\", class:todo.class })}\r\n                            className='edit-icon'\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Send to To-Do's\" placement='top' arrow>\r\n                    <span>\r\n                        <MdArrowBack\r\n                            onClick={() => sendToDo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Delete To-do' placement='top' arrow>\r\n                    <span>\r\n                        <RiDeleteBin5Line \r\n                            onClick={() => removeTodo(todo.id)}\r\n                        />\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n        </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Done\r\n","import React, {useState, useEffect} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\nimport Doing from './Doing'\r\nimport DeleteButton from './DeleteButton';\r\nimport Done from './Done';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState( localStorage.getItem('savedTodos') ? JSON.parse(localStorage.getItem('savedTodos')) : []);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        // Saving data to local storage every time Todos are updated\r\n        localStorage.setItem('savedTodos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    // Preventing previously created todos from getting destroyed after update\r\n    useEffect(() => {\r\n        if(localStorage.getItem('update_version') !== \"v1\"){\r\n\r\n            const availableClasses = [\r\n                \"todo-row blue\", \r\n                \"todo-row orange\", \r\n                \"todo-row pink\", \r\n                \"todo-row purple\",\r\n                \"todo-row red\",\r\n                \"todo-row green\"\r\n            ];\r\n            var newTodos = [];\r\n            var todoType = \"\";\r\n\r\n            todos.map(todo => {\r\n                if(todo.todoList){\r\n                    todoType = \"todo\";\r\n                }\r\n                else if (todo.doing){\r\n                    todoType = \"doing\";\r\n                }\r\n                else{\r\n                    todoType = \"done\";\r\n                }\r\n\r\n                var updateTodo = {\r\n                    id: todo.id,\r\n                    text: todo.text,\r\n                    list: todoType,\r\n                    class: availableClasses[Math.floor(Math.random() * availableClasses.length)]\r\n                }\r\n                newTodos.push(updateTodo);\r\n            });\r\n            \r\n            setTodos(newTodos);\r\n            localStorage.setItem(\"update_version\", \"v1\"); \r\n        }\r\n    }, [])\r\n\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos)\r\n    }\r\n    \r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(a => {\r\n            return setTodos(removeArr);\r\n        })\r\n    }\r\n\r\n\r\n    const sendToDo = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"todo\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const sendToDoing = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"doing\";\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n    \r\n\r\n    const sendToDone = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.list = \"done\";\r\n            }\r\n            return todo;\r\n        })\r\n        enqueueSnackbar(\"Yayyy !! You completed a todo. \", {\r\n            variant: 'success',\r\n        });\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const deleteAllDone = () => {\r\n        let updatedTodos = [...todos].filter(todo => todo.list !== \"done\")\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    const handleDrag = (e, todo) => {\r\n        e.dataTransfer.setData(\"todo\", todo);\r\n        setShowDelete(true);\r\n    }\r\n\r\n\r\n    const handleToDoDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDo(id);\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoingDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDoing((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handleDoneDrop = e => {\r\n        let id = JSON.parse(e.dataTransfer.getData(\"todo\")).id;\r\n        sendToDone((id));\r\n        setShowDelete(false);\r\n    }\r\n\r\n\r\n    const handlePositionChange = (e, onTodo) => {\r\n        var changeTodo = JSON.parse(e.dataTransfer.getData(\"todo\"));\r\n        changeTodo.list = onTodo.list;\r\n\r\n        const newTodos = [];\r\n        var i;\r\n        for(i = 0; i < todos.length; i ++){\r\n            \r\n            if(todos[i].id !== changeTodo.id){\r\n                newTodos.push(todos[i]);\r\n            }\r\n            if(todos[i].id === onTodo.id){\r\n                newTodos.push(changeTodo);\r\n            }\r\n        }\r\n        setShowDelete(false);\r\n        // For setting todo, Cause useState hook normally not working for functions\r\n        setTodos(prev => {\r\n            return setTodos(newTodos);\r\n        });\r\n    }\r\n    \r\n\r\n    const allowDrop = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"todo-app\" onDrop={(e) => handleToDoDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2>To Do's</h2>\r\n            <TodoForm onSubmit={addTodo} edit={{class: \"todo-row blue\"}} newTodo={true}/>\r\n            <Todo \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDoing={sendToDoing} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app\" onDrop={(e) => handleDoingDrop(e)} onDragOver={(e) => allowDrop(e)} >\r\n            <h2>Doing ....</h2>\r\n            <Doing \r\n                todos={todos} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                sendToDone={sendToDone} \r\n                handleDrag={handleDrag}\r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"todo-app extra-padding\" onDrop={(e) => handleDoneDrop(e)} onDragOver={(e) => allowDrop(e)}>\r\n            <h2>Done !!!</h2>\r\n            <Done \r\n                todos={todos} \r\n                removeTodo={removeTodo} \r\n                updateTodo={updateTodo} \r\n                sendToDo={sendToDo} \r\n                handleDrag={handleDrag} \r\n                handlePositionChange={handlePositionChange} \r\n                allowDrop={allowDrop} \r\n                setShowDelete={setShowDelete}\r\n            />\r\n            <DeleteButton \r\n                todos={todos}\r\n                deleteAllDone={deleteAllDone} \r\n                allowDrop={allowDrop} \r\n                removeTodo={removeTodo} \r\n                showDelete={showDelete} \r\n            />\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoList\r\n","import './TodoApp.css';\nimport TodoList from './components/TodoList';\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from 'react';\n\nfunction App() {\n\n  document.title = \"To-Do App | Shlok Zanwar\"\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <>\n    <div className=\"main-outer-todo-div\">\n      <Link to=\"blogs/todo-app\">\n        <h1>To-Do App</h1>\n      </Link>\n      <TodoList />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useEffect } from 'react'\r\nimport LineTo from 'react-lineto'\r\n\r\nfunction Grid({grid, loading, setLoading, search}) {\r\n\r\n\r\n    function debounce(fn, ms) {\r\n        let timer\r\n        return _ => {\r\n            clearTimeout(timer)\r\n            timer = setTimeout(_ => {\r\n                timer = null\r\n                fn.apply(this, arguments)\r\n            }, ms)\r\n        };\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const debouncedHandleResize = debounce(function handleResize() {\r\n            setLoading(true);\r\n        }, 500)\r\n        \r\n        window.addEventListener('resize', debouncedHandleResize)\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setLoading(false), 100);\r\n    }, [loading])\r\n\r\n\r\n    const makeOneRow = (row, rowIndex) => \r\n        row.map((cell, cellIndex) => {\r\n            if(cell !== 0){\r\n                if(cell === search){\r\n\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" searched\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString()} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                            {/* {rowIndex.toString() + \" \" + cellIndex.toString()} */}\r\n                            {cell}\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            else{\r\n                return(\r\n                    <div className={\"tree-node-div r\" + rowIndex.toString() + \"c\" + cellIndex.toString() + \" transparent\"} key={\"r\" + rowIndex.toString() + \"c\" + cellIndex.toString()}>\r\n                        {}\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n\r\n    const makeRows = () => {\r\n        return grid.map((row, rowIndex) => (\r\n            <div className=\"rows\" key={\"r\" + rowIndex.toString()}>\r\n                {makeOneRow(row, rowIndex)}\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    \r\n    var zIndex = -1;\r\n    var makeArrows = () => {\r\n        return(\r\n            grid.map((row, rowIndex) => {\r\n                return(\r\n                    row.map((cell, cellIndex) => {\r\n                        if(cell !== 0 && rowIndex < grid.length - 1){\r\n                            // console.log(\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString() + \"   \" + \"r\"+(rowIndex+1).toString() + \"c\" + cellIndex.toString() );\r\n                            \r\n                            var leftChild = cellIndex;\r\n                            var rightChild = cellIndex + Math.pow(2, grid.length-rowIndex-1);\r\n\r\n                            // console.log(rowIndex, \" \", leftChild, \" \" , rightChild);\r\n\r\n                            if(grid[rowIndex+1][leftChild] !== 0 && grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <>\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()} \r\n                                    />\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()} \r\n                                    />\r\n                                    </>\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][leftChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + leftChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}\r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"  \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+leftChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n                            else if(grid[rowIndex+1][rightChild] !== 0){\r\n                                return(\r\n                                    <LineTo \r\n                                        from={\"r\"+(rowIndex).toString() + \"c\" + cellIndex.toString()} \r\n                                        to={\"r\"+(rowIndex+1).toString() + \"c\" + rightChild.toString()} \r\n                                        zIndex={zIndex}\r\n                                        borderColor=\"rgba(255, 84, 17, 1)\" \r\n                                        borderWidth={5}  \r\n                                        // fromAnchor=\"bottom center\" \r\n                                        // toAnchor=\"top center\"   \r\n                                        key={\"r\"+(rowIndex).toString()+\"c\"+cellIndex.toString()+\"r\"+(rowIndex+1).toString()+\"c\"+rightChild.toString()}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"tree-outer-div\">\r\n            <div className=\"tree-main-div\">\r\n                {makeRows()}\r\n                {loading ? null : makeArrows() }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Grid;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\nfunction BST() {\r\n    const [binaryTree, setBinaryTree] = useState([\r\n        [0],\r\n        [0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]);\r\n    const [height, setHeight] = useState(0);\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n    const [showAnimation, setShowAnimation] = useState(true);\r\n\r\n    \r\n    useEffect(() => {\r\n        makeVisualTree();\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n\r\n        for(i = 0; i < height; i ++){\r\n            // var noOfElements = Math.pow(2, i);\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n    var iForAnimation = 0; \r\n    const createAnimation = (compare) => {\r\n        if(showAnimation){\r\n            setTimeout(function() { \r\n                // console.log('hello');   \r\n                setSearch(compare[iForAnimation]);\r\n                iForAnimation ++;                   \r\n                if (iForAnimation < compare.length) {          \r\n                createAnimation(compare);             \r\n                }               \r\n            }, 1000)\r\n        }\r\n        else{\r\n            setSearch(compare[compare.length - 1]);\r\n        }\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        const newTree = [...binaryTree];\r\n        var compare = [];\r\n        const prevSearch = search;\r\n\r\n        if(newTree[0][0] === 0 ){\r\n            newTree[0][0] = parseInt(data);\r\n            setBinaryTree(newTree);\r\n            setHeight(1);\r\n            enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                variant: 'success',\r\n            });\r\n            // console.log(binaryTree, \" \", height);\r\n            return;\r\n        }\r\n        \r\n        var i, j=0;\r\n        for(i = 0; i < height && i < 6; i++){\r\n            if(data < newTree[i][j]){\r\n                if(newTree[i+1][2*j] === 0){\r\n                    newTree[i+1][2*j] = parseInt(data);\r\n                    setBinaryTree(newTree);\r\n                    setHeight(Math.max(height, i + 2));\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    // console.log(binaryTree, \" \", height);\r\n                    compare.push(newTree[i][j]);\r\n                    compare.push(parseInt(data));\r\n                    compare.push(prevSearch);\r\n                    setSearch(compare[0]);\r\n                    compare.shift();\r\n                    iForAnimation = 0;\r\n                    createAnimation(compare);\r\n                    return;\r\n                }\r\n                else{\r\n                    compare.push(newTree[i][j]);\r\n                    j = 2*j;\r\n                }\r\n            }\r\n            else if(data > newTree[i][j]){\r\n                if(newTree[i+1][2*j + 1] === 0){\r\n                    newTree[i+1][2*j + 1] = parseInt(data);\r\n                    setBinaryTree(newTree);\r\n                    setHeight(Math.max(height, i + 2));\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    // console.log(binaryTree, \" \", height);\r\n                    compare.push(newTree[i][j]);\r\n                    compare.push(parseInt(data));\r\n                    compare.push(prevSearch);\r\n                    setSearch(compare[0]);\r\n                    compare.shift();\r\n                    iForAnimation = 0;\r\n                    createAnimation(compare);\r\n                    return;\r\n                }\r\n                else{\r\n                    compare.push(newTree[i][j]);\r\n                    j = j*2 + 1 \r\n                }\r\n            }\r\n            else{\r\n                enqueueSnackbar(data +\" is already present\", {\r\n                    variant: 'error',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(\"Maximum height reaced :(\", {\r\n            variant: 'error',\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const afterDeletePosi = (oldI, oldJ, newI, newJ, newTree) => {\r\n        newTree[newI + 1][newJ*2] = newTree[oldI + 1][oldJ*2]; \r\n        newTree[oldI + 1][oldJ*2] = 0;\r\n        newTree[newI + 1][newJ*2 + 1] = newTree[oldI + 1][oldJ*2 + 1]; \r\n        newTree[oldI + 1][oldJ*2 + 1] = 0;\r\n        if(newTree[newI + 1][newJ*2] !== 0){\r\n            newTree = afterDeletePosi(oldI + 1, oldJ*2, newI+1, newJ*2, newTree);\r\n        }\r\n        if(newTree[newI + 1][newJ*2 + 1] !== 0){\r\n            newTree = afterDeletePosi(oldI + 1, oldJ*2 + 1, newI+1, newJ*2 + 1, newTree);\r\n        }\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const deleteFromTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j, k;\r\n        var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i < 6; i ++){\r\n            for(j = 0; j < newTree[i].length; j ++){\r\n                if(newTree[i][j] === data){\r\n                    // alert(\"Found\");\r\n\r\n                    // For no left and right\r\n                    if(newTree[i + 1][2*j] === 0 && newTree[i + 1][2*j + 1] === 0){\r\n                        newTree[i][j] = 0;\r\n                        setBinaryTree(newTree);\r\n                        for(k = 0; k < newTree[i].length; k++){\r\n                            if(newTree[i][k] !== 0){\r\n                                break;\r\n                            }\r\n                        }\r\n                        if(k === newTree[i].length){\r\n                            setHeight(i);\r\n                        }\r\n                        if(data !== -1){\r\n                            enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                variant: 'success',\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // If right empty\r\n                    else if(newTree[i + 1][2*j + 1] === 0){\r\n                        newTree[i][j] = newTree[i+1][2*j];\r\n                        newTree = afterDeletePosi(i + 1, 2*j, i, j, newTree);\r\n                        setBinaryTree(newTree);\r\n                        if(data !== -1){\r\n                            enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                variant: 'success',\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // If left empty\r\n                    else if(newTree[i + 1][2*j] === 0){\r\n                        newTree[i][j] = newTree[i+1][2*j + 1];\r\n                        newTree = afterDeletePosi(i + 1, 2*j + 1, i, j, newTree);\r\n                        setBinaryTree(newTree);\r\n                        if(data !== -1){\r\n                            enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                variant: 'success',\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // if both full\r\n                    else{\r\n                        var startI = i +1;\r\n                        var startJ = j*2 + 1;\r\n                        while(true){\r\n                            if(newTree[startI + 1][startJ*2] === 0){\r\n                                newTree[i][j] = newTree[startI][startJ];\r\n                                newTree[startI][startJ] = -1;\r\n                                setBinaryTree(newTree);\r\n                                enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                                    variant: 'success',\r\n                                });\r\n                                deleteFromTree(-1);\r\n                                return;\r\n                                \r\n                            }\r\n                            else{\r\n                                startI = startI + 1;\r\n                                startJ = startJ*2;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        if(i === 6){\r\n            for(j = 0; j < newTree[i].length; j++){\r\n                if(newTree[i][j] === data){\r\n                    newTree[i][j] = 0;\r\n                    for(k = 0; k < newTree[i].length; k++){\r\n                        if(newTree[i][k] !== 0){\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(k === newTree[i].length){\r\n                        setHeight(i);\r\n                    }\r\n                    setBinaryTree(newTree);\r\n                    enqueueSnackbar(data + \" deleted from binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j;\r\n        // var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i <= 6; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        setSearch(-2);\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const clearTree = () => {\r\n        var newTree = [\r\n            [0],\r\n            [0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        ];\r\n        if(height > 0 || grid.length > 0){\r\n            // console.log(\"doing\");\r\n            setBinaryTree(newTree);\r\n            setGrid([]);\r\n            setHeight(0);\r\n        }\r\n        enqueueSnackbar(\"Binary Tree Cleared.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            clearTree();\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Delete\"){\r\n            deleteFromTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            setSearch(parseInt(input));\r\n            searchInTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Delete\" >Delete</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"80px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                \r\n                <span><Tooltip title='Show Animation' placement='bottom' arrow>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" checked={showAnimation} onChange={() => {setShowAnimation(!showAnimation)}} />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </Tooltip></span>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Binary-Tree-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BST\r\n","import './TreeCss.css';\r\nimport BST from './Components/BST';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\n\r\nfunction BSTApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"BST Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <BST />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BSTApp;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\nfunction MaxHeap() {\r\n    const [binaryTree, setBinaryTree] = useState([\r\n        [0],\r\n        [0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]);\r\n    const [height, setHeight] = useState(0);\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n    \r\n    useEffect(() => {\r\n        makeVisualTree();\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n\r\n        for(i = 0; i < height; i ++){\r\n            // var noOfElements = Math.pow(2, i);\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const myInsertPosition = (newTree, data, myRow, myColumn) => {\r\n        var temp;\r\n        while (myRow !== 0){\r\n            var myParentRow = myRow - 1, myParentCol = Math.floor(myColumn/2);\r\n            if(newTree[myParentRow][myParentCol] >= data ){\r\n                break;\r\n            }\r\n\r\n            temp = newTree[myParentRow][myParentCol];\r\n            newTree[myParentRow][myParentCol] = newTree[myRow][myColumn];\r\n            newTree[myRow][myColumn] = temp;\r\n\r\n            myRow = myParentRow;\r\n            myColumn = myParentCol;\r\n        }\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        data = parseInt(data);\r\n\r\n        var i, j=0;\r\n        for(i = 0; i <= height && i <= 6; i++){\r\n            for(j = 0; j < newTree[i].length; j++){\r\n\r\n                if(newTree[i][j] === 0){\r\n                    newTree[i][j] = data;\r\n                    newTree = myInsertPosition(newTree, data, i, j);\r\n\r\n                    setBinaryTree(newTree);\r\n                    setHeight(i + 1);\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(\"Maximum height reaced :(\", {\r\n            variant: 'error',\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    const myDeletePosition = (newTree) => {\r\n        var row = 0, col = 0, greaterCol, temp;\r\n        while(true){\r\n            if(newTree[row + 1][col*2 ] >= newTree[row + 1][col*2 + 1] ){\r\n                greaterCol = col * 2;\r\n            }\r\n            else{\r\n                greaterCol = (col * 2) + 1;\r\n            }\r\n\r\n            if(newTree[row][col] < newTree[row + 1][greaterCol] ){\r\n                temp = newTree[row][col];\r\n                newTree[row][col] = newTree[row + 1][greaterCol];\r\n                newTree[row + 1][greaterCol] = temp;\r\n\r\n                row = row + 1;\r\n                col = greaterCol;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n\r\n        }\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        var i, j;\r\n        var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i < 6; i ++){\r\n            if(newTree[i][0] === 0){\r\n                break;\r\n            }\r\n        }\r\n        i = i - 1;\r\n       \r\n        if(i !== -1){\r\n            for(j = 0; j < newTree[i].length; j ++){\r\n                if(newTree[i][j] === 0){\r\n                    break;\r\n                }\r\n            }\r\n\r\n            j = j - 1;\r\n            newTree[0][0] = newTree[i][j];\r\n            newTree[i][j] = 0;\r\n\r\n            newTree = myDeletePosition(newTree);\r\n            setBinaryTree(newTree);\r\n            enqueueSnackbar(\"Deleted root node successfully.\", {\r\n                variant: 'success',\r\n            });\r\n            return;\r\n        }\r\n\r\n        enqueueSnackbar(\"Nothing to delete\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j;\r\n        // var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i <= 6; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        setSearch(-2);\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const clearTree = () => {\r\n        var newTree = [\r\n            [0],\r\n            [0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        ];\r\n        if(height > 0 || grid.length > 0){\r\n            // console.log(\"doing\");\r\n            setBinaryTree(newTree);\r\n            setGrid([]);\r\n            setHeight(0);\r\n        }\r\n        enqueueSnackbar(\"Binary Tree Cleared.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            clearTree();\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            setSearch(parseInt(input));\r\n            searchInTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Max Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n                \r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MaxHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MaxHeap from './Components/MaxHeap';\r\n\r\n\r\nfunction MaxHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Max Heap Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MaxHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MaxHeapApp;","import React, { useEffect, useState } from 'react'\r\nimport Grid from './Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { FaCode }from 'react-icons/fa'\r\nimport { HiOutlineRefresh }from 'react-icons/hi'\r\n\r\nfunction MinHeap() {\r\n    const [binaryTree, setBinaryTree] = useState([\r\n        [0],\r\n        [0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]);\r\n    const [height, setHeight] = useState(0);\r\n    const [grid, setGrid] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [search, setSearch] = useState(-2);\r\n\r\n    \r\n    useEffect(() => {\r\n        makeVisualTree();\r\n    }, [binaryTree])\r\n\r\n    \r\n    const makeVisualTree = () => {\r\n        var i, j, k;\r\n        var myList = [];\r\n\r\n        for(i = 0; i < height; i ++){\r\n            // var noOfElements = Math.pow(2, i);\r\n            var noOfZerosInMiddle = Math.pow(2, height-i) - 1;\r\n            var tempList = [];\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                tempList.push(binaryTree[i][j]);\r\n                if(j < binaryTree[i].length - 1){\r\n                    for(k = 0; k < noOfZerosInMiddle; k++ ){\r\n                        tempList.push(0);\r\n                    }\r\n                }\r\n            }\r\n            myList.push(tempList);\r\n        }\r\n        setGrid(myList)\r\n    }\r\n\r\n\r\n    const myInsertPosition = (newTree, data, myRow, myColumn) => {\r\n        var temp;\r\n        while (myRow !== 0){\r\n            var myParentRow = myRow - 1, myParentCol = Math.floor(myColumn/2);\r\n            if(newTree[myParentRow][myParentCol] <= data ){\r\n                break;\r\n            }\r\n\r\n            temp = newTree[myParentRow][myParentCol];\r\n            newTree[myParentRow][myParentCol] = newTree[myRow][myColumn];\r\n            newTree[myRow][myColumn] = temp;\r\n\r\n            myRow = myParentRow;\r\n            myColumn = myParentCol;\r\n        }\r\n\r\n        return newTree;\r\n    }\r\n\r\n\r\n    const insertToTree = (data) => {\r\n        var newTree = [...binaryTree];\r\n        data = parseInt(data);\r\n\r\n        var i, j=0;\r\n        for(i = 0; i <= height && i <= 6; i++){\r\n            for(j = 0; j < newTree[i].length; j++){\r\n\r\n                if(newTree[i][j] === 0){\r\n                    newTree[i][j] = data;\r\n                    newTree = myInsertPosition(newTree, data, i, j);\r\n\r\n                    setBinaryTree(newTree);\r\n                    setHeight(i + 1);\r\n                    enqueueSnackbar(data + \" added to binary search tree.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        enqueueSnackbar(\"Maximum height reaced :(\", {\r\n            variant: 'error',\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    const myDeletePosition = (newTree) => {\r\n        var row = 0, col = 0, smallerCol, temp;\r\n        while(true){\r\n            if(newTree[row + 1][col*2 ] === 0 && newTree[row + 1][col*2 + 1] === 0 ){\r\n                break;\r\n            }\r\n            else if(newTree[row + 1][col*2 ] === 0){\r\n                smallerCol = (col * 2) + 1;\r\n            }\r\n            else if(newTree[row + 1][col*2 + 1] === 0){\r\n                smallerCol = (col * 2);\r\n            }\r\n            else{\r\n                if(newTree[row + 1][col*2 ] <= newTree[row + 1][col*2 + 1] ){\r\n                    smallerCol = col * 2;\r\n                }\r\n                else{\r\n                    smallerCol = (col * 2) + 1;\r\n                }\r\n            }\r\n\r\n            if(newTree[row][col] > newTree[row + 1][smallerCol] ){\r\n                temp = newTree[row][col];\r\n                newTree[row][col] = newTree[row + 1][smallerCol];\r\n                newTree[row + 1][smallerCol] = temp;\r\n\r\n                row = row + 1;\r\n                col = smallerCol;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n\r\n        return newTree\r\n\r\n    }\r\n\r\n\r\n    const deleteFromTree = () => {\r\n        var i, j;\r\n        var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i < 6; i ++){\r\n            if(newTree[i][0] === 0){\r\n                break;\r\n            }\r\n        }\r\n        i = i - 1;\r\n       \r\n        if(i !== -1){\r\n            for(j = 0; j < newTree[i].length; j ++){\r\n                if(newTree[i][j] === 0){\r\n                    break;\r\n                }\r\n            }\r\n\r\n            j = j - 1;\r\n            newTree[0][0] = newTree[i][j];\r\n            newTree[i][j] = 0;\r\n\r\n            newTree = myDeletePosition(newTree);\r\n            setBinaryTree(newTree);\r\n            enqueueSnackbar(\"Deleted root node successfully.\", {\r\n                variant: 'success',\r\n            });\r\n            return;\r\n        }\r\n\r\n        enqueueSnackbar(\"Nothing to delete\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const searchInTree = (data) => {\r\n        data = parseInt(data);\r\n        var i, j;\r\n        // var newTree = [...binaryTree];\r\n        for(i = 0; i < height  && i <= 6; i ++){\r\n            for(j = 0; j < binaryTree[i].length; j ++){\r\n                if(binaryTree[i][j] === data){\r\n                    enqueueSnackbar(data + \" found. Highlighted in green.\", {\r\n                        variant: 'success',\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        setSearch(-2);\r\n        enqueueSnackbar(data + \" not found !!\", {\r\n            variant: 'error',\r\n        });\r\n    }\r\n\r\n\r\n    const clearTree = () => {\r\n        var newTree = [\r\n            [0],\r\n            [0, 0],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        ];\r\n        if(height > 0 || grid.length > 0){\r\n            setBinaryTree(newTree);\r\n            setGrid([]);\r\n            setHeight(0);\r\n        }\r\n        enqueueSnackbar(\"Binary Tree Cleared.\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        var operation = e.target.value;\r\n\r\n        if(operation === \"ClearSearch\"){\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"ClearTree\"){\r\n            clearTree();\r\n            setSearch(-2);\r\n            setInput('');\r\n            setLoading(true);\r\n            return\r\n        }\r\n\r\n        if(operation === \"Delete\"){\r\n            deleteFromTree();\r\n            setLoading(true);\r\n            return;\r\n        }\r\n\r\n        if(input ===  '' || input <= 0){\r\n            enqueueSnackbar(\"Invalid input !!\", {\r\n                variant: 'error',\r\n            });\r\n            setInput('');\r\n            return;\r\n        }\r\n        // return;\r\n        if(operation === \"Insert\"){\r\n            insertToTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        else if(operation === \"Search\"){\r\n            setSearch(parseInt(input));\r\n            searchInTree(input);\r\n            setInput('');\r\n            setLoading(true);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-outer-div\">\r\n            <div className=\"form-div\">\r\n                <button className=\"function-button\" style={{marginRight:\"40px\"}} >Min Heap</button>\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Data\" \r\n                    value={input}\r\n                    className=\"operation-input\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Insert\" >Insert</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" value=\"Search\" >Search</button>\r\n                <button onClick={handleSubmit} className=\"operation-button\" style={{marginLeft:\"40px\"}}  value=\"Delete\" >Delete Root</button>\r\n\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    style={{marginLeft:\"40px\"}} \r\n                    value=\"ClearSearch\" >\r\n                        Clear Search\r\n                </button>\r\n                <button \r\n                    onClick={handleSubmit} \r\n                    className=\"function-button\" \r\n                    value=\"ClearTree\" >\r\n                        Clear Tree\r\n                </button>\r\n                <Tooltip title='Source Code' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {window.location.href = \"https://github.com/Shlok-Zanwar/Heap-Visualization\"}} className=\"function-button\">\r\n                            <FaCode style={{fontSize:\"21px\"}} />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Tooltip title='Refresh lines' placement='bottom' arrow>\r\n                    <span>\r\n                        <button onClick={() => {setLoading(true)}} className=\"function-button\">\r\n                            <HiOutlineRefresh style={{fontSize:\"21px\"}}  />\r\n                        </button>\r\n                    </span>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <Grid grid={grid} loading={loading} setLoading={setLoading} search={search} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MinHeap\r\n","import './TreeCss.css';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MinHeap from './Components/MinHeap';\r\n\r\n\r\nfunction MinHeapApp() {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Min Heap Visualization | Shlok Zanwar\"\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowTreeSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowTreeSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <MinHeap />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MinHeapApp;","import React, { useEffect, useRef, useState } from 'react'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction CanvasHome() {\r\n    const [url, setUrl] = useState('');\r\n    const [recentBins, setRecentBins] =  useState(localStorage.getItem('recentCanvas') ? JSON.parse(localStorage.getItem('recentCanvas')) : []);\r\n    const inputRef = useRef(null);\r\n    let history = useHistory();\r\n\r\n    const generateNewURL = () => {\r\n        let r = Math.random().toString(36).substring(4);\r\n        history.push(\"/canvas/\" + r);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        var path = url;\r\n        if(url[0] === \"/\"){\r\n            path = path.substring(1, path.length);\r\n        }\r\n        path = path.split(\"/\");\r\n        if(path.length === 1){\r\n            if(path[0] !== \"\"){\r\n                history.push(\"/canvas/\" + path[0]);\r\n            }\r\n        }\r\n        else{\r\n            if(path[0] === \"canvas\"){\r\n                if(path[1] !== \"\"){\r\n                    history.push(\"/canvas/\" + path[1]);\r\n                }\r\n            }\r\n        }\r\n        // console.log(path);\r\n\r\n    }\r\n\r\n    \r\n    const removeRecent = (canvas) => {\r\n        const removeArr = [...recentBins].filter(bin => bin !== canvas);\r\n        setRecentBins(removeArr);\r\n        localStorage.setItem('recentCanvas', JSON.stringify(removeArr))\r\n    }\r\n\r\n    \r\n    const gotoRecent = (canvas) => {\r\n        history.push(\"/canvas/\" + canvas);\r\n    }\r\n\r\n\r\n    const loadRecentCanvas = recentBins.map(index => {\r\n            return (\r\n                <div style={{display:\"inline-table\"}} >\r\n                    <div className=\"recent-pastebin\">\r\n                        <div style={{cursor:\"pointer\"}} onClick={() => gotoRecent(index)}>\r\n                            {\"/\" + index}\r\n                        </div>\r\n                        <div className=\"icons\">\r\n                            <Tooltip title='Delete' placement='bottom' arrow>\r\n                                <span>\r\n                                    <RiDeleteBin5Line \r\n                                        onClick={() => removeRecent(index)}\r\n                                    />\r\n                                </span>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    })\r\n    \r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth >= 1350){\r\n            inputRef.current.focus()\r\n        }\r\n    })\r\n\r\n    return ( \r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"main-blog-di\">\r\n                <div className=\"blog-title\">Draw Bin</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>A canvas for sharing drawings without any authentication.</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Go to some URl like \"/canvas/any\"</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Draw anything</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Save</div>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}}>Share the URL with anyone</div>\r\n                <br />\r\n                <form className=\"todo-form\" onSubmit={handleSubmit} style={{marginBottom:\"6px\"}}>\r\n                    <div className=\"edit-form\" >\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Type any url\" \r\n                                value={url}\r\n                                className=\"todo-input\"\r\n                                onChange={e => setUrl(e.target.value)}\r\n                                ref={inputRef}\r\n                                style={{maxWidth:\"275px\"}}\r\n                            />\r\n                            <button className=\"todo-button edit\">Go</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"blog-para\" style={{textAlign:\"center\"}} >OR</div> \r\n                <div className=\"redirect-button\" style={{maxWidth:\"230px\"}} onClick={() => generateNewURL()} >Generate random URL</div>\r\n                {recentBins.length > 0 ?\r\n                    <>\r\n                        <br />\r\n                        <div className=\"blog-para\" style={{textAlign:\"center\"}}>Recent Paste Bins</div>\r\n                        <div className=\"recent-pastebin-outer\" style={{maxWidth:\"500px\"}}>\r\n                            {loadRecentCanvas}\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasHome\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport firebase from '../firebase';\r\nimport { useSnackbar } from 'notistack';\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport CanvasDraw from 'react-canvas-draw';\r\nimport { SliderPicker } from 'react-color';\r\n\r\nfunction CanvasApp() {\r\n    const canvas = useRef();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    document.title = \"Paste Bin | Shlok Zanwar\";\r\n\r\n    const dontShowSnackbar = (key) =>{\r\n        localStorage.setItem(\"dontShowCanvasSnack\", true);\r\n        closeSnackbar(key);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { dontShowSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dont show again\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"dontShowCanvasSnack\")){\r\n            enqueueSnackbar(\"This page is recommended to be used on desktop screen.\", {\r\n                variant: 'warning',\r\n                autoHideDuration: 5000,\r\n                action,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    const [brushSize, setBrushSize] = useState(3);\r\n    const [savePath, setSavePath] = useState(\"\");\r\n    const [result, setResult] = useState('');\r\n    const [color, setColor] = useState({hex: \"#52BF23\"});\r\n    const [canvasData, setCanvasData] = useState(null);\r\n\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = command;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    \r\n    const handleColorChange = color => setColor(color);\r\n\r\n\r\n    const handleBrushSize = e => {\r\n        if(e.target.value > 10){\r\n            setBrushSize(10);\r\n        }\r\n        else{\r\n            setBrushSize(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n    const saveRecent = (path) => {\r\n        var recentCanvas = localStorage.getItem('recentCanvas') ? JSON.parse(localStorage.getItem('recentCanvas')) : [];\r\n        recentCanvas = [...recentCanvas].filter(canvas => canvas !== path);\r\n        recentCanvas = [path, ...recentCanvas];\r\n        if(recentCanvas.length > 6){\r\n            recentCanvas.pop();\r\n        }\r\n        localStorage.setItem('recentCanvas', JSON.stringify(recentCanvas));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(window.location.pathname);\r\n        var path = window.location.pathname;\r\n        // console.log(path[path.length - 1]);\r\n\r\n        if(path[path.length - 1] === \"/\"){\r\n            path = path.substring(0, path.length - 1);\r\n            window.location.pathname = path;\r\n        }\r\n        path = path.substring(1, path.length);\r\n        // console.log(path)\r\n        path = path.split(\"/\");\r\n        // console.log(path)\r\n\r\n        if(path.length > 2){\r\n            window.location.pathname = \"/\" + path[0] + \"/\" + path[1];\r\n        }\r\n\r\n        if(path[0].toLowerCase() === \"canvas\"){\r\n            setSavePath(path[1].toLowerCase());\r\n            firebase.getCanvasData(path[1].toLowerCase()).then(setResult, saveRecent(path[1]));\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(result === undefined){\r\n            firebase.addCanvasData(savePath, {\"lines\":[],\"width\":\"100%\",\"height\":\"100%\"});\r\n            setCanvasData({\"lines\":[],\"width\":\"100%\",\"height\":\"100%\"});\r\n        }\r\n        else{\r\n          setCanvasData(result);\r\n        //   console.log(result);\r\n        }\r\n    }, [result])\r\n\r\n\r\n    const saveCanvas = e => {\r\n        firebase.addCanvasData(savePath, canvas.current.getSaveData());\r\n        console.log(\"Saving\");\r\n        enqueueSnackbar(\"Details saved successfully\", {\r\n            variant: 'success',\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>\r\n                {`            \r\n                    body {\r\n                    text-align: center;\r\n                    background-color: #161a2b;\r\n                    background-image: none;\r\n                }\r\n                `}\r\n                </style>\r\n            </Helmet>\r\n            <div className=\"canvas-controls\">\r\n                <input \r\n                    id=\"input_box\"\r\n                    type=\"number\" \r\n                    placeholder=\"Size\" \r\n                    value={brushSize}\r\n                    className=\"canvas-brush-size\"\r\n                    onChange={handleBrushSize}\r\n                />\r\n\r\n                <div style={{width:\"210px\", paddingRight:\"10px\"}}>\r\n                    <SliderPicker color={color} onChangeComplete={handleColorChange} />\r\n                </div>\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={() => {canvas.current.undo()}}\r\n                >\r\n                    &nbsp;&nbsp; Undo &nbsp;&nbsp; \r\n                </button>\r\n\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={() => {canvas.current.clear()}}\r\n                >\r\n                    &nbsp;&nbsp; Clear &nbsp;&nbsp; \r\n                </button>\r\n\r\n                <button \r\n                    className=\"save-share-pastebin\" \r\n                    onClick={saveCanvas}\r\n                >\r\n                    &nbsp;&nbsp; Save &nbsp;&nbsp; \r\n                </button>\r\n                <button className=\"save-share-pastebin\" onClick={() => {copyToClipboard(window.location.href)}} >\r\n                    <FaShare /> \r\n                </button>\r\n            </div >\r\n            <div className=\"canvas-div\">\r\n            {canvasData ? \r\n                <CanvasDraw\r\n                    ref={canvas}\r\n                    hideGrid\r\n                    saveData={canvasData}\r\n                    backgroundColor={\"transparent\"}\r\n                    brushColor={color.hex}\r\n                    brushRadius={brushSize}\r\n                    lazyRadius={0}\r\n                    canvasWidth={\"1500px\"}\r\n                    canvasHeight={\"790px\"}\r\n                /> : <div style={{color: \"rgb(82, 192, 31)\"}}>Loading ...</div> \r\n            }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasApp\r\n\r\n","import React, { useEffect } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport BlogTemplate from './BlogTemplates/BlogTemplate';\r\nimport Home from './HomeComponents/Home';\r\nimport MyNavbar from \"./MyNavbar\";\r\nimport PasteBinHome from './PasteBinComponents/PasteBinHome';\r\nimport PasteBinApp from './PasteBinComponents/PasteBinApp';\r\nimport TodoApp from \"./TodoAppComponents/TodoApp\"\r\nimport BSTApp from './TreeComponents/BSTApp';\r\nimport MaxHeapApp from './TreeComponents/MaxHeapApp';\r\nimport MinHeapApp from './TreeComponents/MinHeapApp';\r\nimport CanvasHome from './CanvasComponents/CanvasHome';\r\nimport CanvasApp from './CanvasComponents/CanvasApp';\r\n\r\n\r\nfunction RoutePaths() {\r\n\r\n    var forUseEffect;\r\n    useEffect(() => {\r\n        localStorage.removeItem(\"redirectTo\");\r\n    }, [forUseEffect])\r\n\r\n    return (\r\n        <Router>\r\n            <MyNavbar />\r\n\r\n            <Switch>\r\n            \r\n                <Route path=\"/blogs/toxicbot\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/ToxicbotBlog.json\")} />\r\n                </Route>\r\n                <Route path=\"/blogs/todo-app\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/TodoBlog.json\")} />\r\n                </Route>\r\n                <Route path=\"/blogs/dock-forms\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/DockFormsBlog.json\")} />\r\n                </Route>\r\n                <Route path=\"/blogs/hotel-managment\">\r\n                    <BlogTemplate blogData={require(\"./BlogJsons/HotelManagmentBlog.json\")} />\r\n                </Route>\r\n\r\n                <Route path=\"/todo-app\">\r\n                    <TodoApp />\r\n                </Route>\r\n\r\n                <Route exact path=\"/pastebin\">\r\n                    <PasteBinHome />\r\n                </Route>\r\n                <Route path=\"/pastebin/\">\r\n                    <PasteBinApp />\r\n                </Route>\r\n\r\n                <Route exact path=\"/canvas\">\r\n                    <CanvasHome />\r\n                </Route>\r\n                <Route path=\"/canvas/\">\r\n                    <CanvasApp />\r\n                </Route>\r\n\r\n                <Route path=\"/bst-visualization\">\r\n                    <BSTApp />\r\n                </Route>\r\n                <Route path=\"/max-heap-visualization\">\r\n                    <MaxHeapApp />\r\n                </Route>\r\n                <Route path=\"/min-heap-visualization\">\r\n                    <MinHeapApp />\r\n                </Route>\r\n\r\n\r\n                <Route path=\"/\">\r\n                    {\r\n                        localStorage.getItem('redirectTo') ? <Redirect to={localStorage.getItem('redirectTo')} /> \r\n                        : null\r\n                        \r\n                    }\r\n                    <Home />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RoutePaths\r\n","import './App.css';\nimport RoutePaths  from './RoutePaths'\n\nfunction App() {\n  return (\n    <div>\n      <RoutePaths />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { SnackbarProvider } from 'notistack';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider\n      maxSnack={2}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      autoHideDuration={3000}\n    >\n      <App />\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}