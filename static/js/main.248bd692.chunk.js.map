{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/Doing.js","components/Done.js","components/SendDone.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","todoList","doing","done","type","placeholder","onChange","ref","Todo","todos","updateTodo","removeTodo","sendToDoing","sendToDo","sendToDone","setEdit","map","todo","index","onClick","Doing","Done","SendDone","deleteAllDone","filter","length","TodoList","localStorage","getItem","JSON","parse","setTodos","setItem","stringify","todoId","newValue","test","prev","item","removeArr","updatedTodos","newTodos","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.248bd692.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(props.edit){\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                todoList: props.edit.todoList,\r\n                doing: props.edit.doing,\r\n                done: props.edit.done,\r\n            });\r\n        }\r\n        else{\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 100000),\r\n                text: input,\r\n                todoList: true,\r\n                doing: false,\r\n                done: false,\r\n            });\r\n        }\r\n\r\n        setInput('');\r\n\r\n    };\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n        {props.edit ? (\r\n            <>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Update your todo\" \r\n                value={input}\r\n                className=\"todo-input\"\r\n                onChange={handleChange}\r\n                ref={inputRef}\r\n            />\r\n            <button className=\"todo-button edit\">Update Todo</button>\r\n            </>\r\n            ) : (\r\n            <>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Add a todo\" \r\n                value={input}\r\n                className=\"todo-input\"\r\n                onChange={handleChange}\r\n                ref={inputRef}\r\n            />\r\n            <button className=\"todo-button\">Add Todo</button>\r\n            </>\r\n        )}\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\n// import TodoList from './TodoList'\r\n// import { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\n\r\nfunction Todo({todos, removeTodo, updateTodo, sendToDo , sendToDoing, sendToDone}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        todoList: true,\r\n        doing: false,\r\n        done:false,\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            todoList: true,\r\n            doing: false,\r\n            done:false,\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.todoList ? (\r\n            <div className={'todo-row'} key={index} >\r\n                <div key={todo.id}>\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <TiEdit \r\n                        onClick={() => setEdit({ id: todo.id, value: todo.text, todoList:true, doing:false, done:false })}\r\n                        className='edit-icon'\r\n                    />\r\n                    <FiSend\r\n                        onClick={() => sendToDoing(todo.id)}\r\n                    />\r\n                    <MdDoneAll\r\n                        onClick={() => sendToDone(todo.id)}\r\n                    />\r\n                    {/* <RiDeleteBin5Line \r\n                        onClick={() => removeTodo(todo.id)}\r\n                        \r\n                    /> */}\r\n                </div>\r\n            </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\n// import TodoList from './TodoList'\r\n// import { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\n// import { FiSend } from 'react-icons/fi'\r\nimport { MdArrowBack } from 'react-icons/md'\r\n\r\nfunction Doing({todos, removeTodo, updateTodo, sendToDo, sendToDoing, sendToDone}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        todoList: false,\r\n        doing: true,\r\n        done:false,\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            todoList: false,\r\n            doing: true,\r\n            done:false,\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.doing ? (\r\n            <div className={'todo-row'} key={index} >\r\n                <div key={todo.id}>\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <TiEdit \r\n                        onClick={() => setEdit({ id: todo.id, value: todo.text, todoList:false, doing:true, done:false })}\r\n                        className='edit-icon'\r\n                    />\r\n                    <MdArrowBack\r\n                        onClick={() => sendToDo(todo.id)}\r\n                    />\r\n                    <MdDoneAll\r\n                        onClick={() => sendToDone(todo.id)}\r\n                    />\r\n                    {/* <RiDeleteBin5Line \r\n                        onClick={() => removeTodo(todo.id)}\r\n                        \r\n                    /> */}\r\n                </div>\r\n            </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Doing\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\n// import TodoList from './TodoList'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n// import { MdDoneAll } from 'react-icons/md'\r\n// import { FiSend } from 'react-icons/fi'\r\nimport { MdArrowBack } from 'react-icons/md'\r\n\r\nfunction Done({todos, removeTodo, updateTodo, sendToDo, sendToDoing, sendToDone}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        todoList: false,\r\n        doing: false,\r\n        done: true,\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            todoList: false,\r\n            doing: false,\r\n            done: true,\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.done ? (\r\n            <div className={'todo-row'} key={index} >\r\n                <div key={todo.id}>\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <TiEdit \r\n                        onClick={() => setEdit({ id: todo.id, value: todo.text, todoList:false, doing:false, done:true })}\r\n                        className='edit-icon'\r\n                    />\r\n                    <MdArrowBack\r\n                        onClick={() => sendToDo(todo.id)}\r\n                    />\r\n                    <RiDeleteBin5Line \r\n                        onClick={() => removeTodo(todo.id)}\r\n                    />\r\n                </div>\r\n            </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Done\r\n","import React from 'react'\r\nimport Done from './Done'\r\n\r\nfunction SendDone({todos, deleteAllDone, removeTodo, updateTodo, sendToDo, sendToDoing, sendToDone}) {\r\n\r\n    return [...todos].filter(todo => todo.done).length < 2 ? (\r\n        <div className=\"todo-app\">\r\n            <h2>Done !!!</h2>\r\n            <Done todos={todos} removeTodo={removeTodo} updateTodo={updateTodo} sendToDo={sendToDo} sendToDoing={sendToDoing} sendToDone={sendToDone} />\r\n        </div>\r\n    ) : (\r\n        <div className=\"todo-app\">\r\n            <h2>Done !!!</h2>\r\n            <Done todos={todos} removeTodo={removeTodo} updateTodo={updateTodo} sendToDo={sendToDo} sendToDoing={sendToDoing} sendToDone={sendToDone} />\r\n            <button className=\"delete-all-button\" onClick={deleteAllDone}>Delete Done</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendDone\r\n","import React, {useState, useEffect} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\nimport Doing from './Doing'\r\n// import Done from './Done'\r\nimport SendDone from './SendDone';\r\n\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState( localStorage.getItem('savedTodos') ? JSON.parse(localStorage.getItem('savedTodos')) : [])\r\n\r\n    const saveToLocalStorage = () => (\r\n        localStorage.setItem('savedTodos', JSON.stringify(todos))\r\n    )\r\n\r\n    useEffect(() => {\r\n        saveToLocalStorage();\r\n        // getNumOfDone();\r\n    }, [todos])\r\n\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos)\r\n    }\r\n    \r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removeArr)\r\n    }\r\n\r\n    const sendToDo = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.todoList = true;\r\n                todo.doing = false;\r\n                todo.done = false;\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    const sendToDoing = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.todoList = false;\r\n                todo.doing = true;\r\n                todo.done = false;\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n    \r\n    const sendToDone = id =>{\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.todoList = false;\r\n                todo.doing = false;\r\n                todo.done = true;\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    const deleteAllDone = () => {\r\n        let updatedTodos = [...todos].filter(todo => !todo.done)\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"todo-app\">\r\n            <h2>To Do's</h2>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo todos={todos} removeTodo={removeTodo} updateTodo={updateTodo} sendToDo={sendToDo} sendToDoing={sendToDoing} sendToDone={sendToDone} />\r\n        </div>\r\n        <div className=\"todo-app\">\r\n            <h2>Doing ....</h2>\r\n            <Doing todos={todos} removeTodo={removeTodo} updateTodo={updateTodo} sendToDo={sendToDo} sendToDoing={sendToDoing} sendToDone={sendToDone} />\r\n        </div>\r\n        <SendDone todos={todos} deleteAllDone={deleteAllDone} removeTodo={removeTodo} updateTodo={updateTodo} sendToDo={sendToDo} sendToDoing={sendToDoing} sendToDone={sendToDone}  />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoList\r\n","import './App.css';\n// import TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <>\n    <div>\n    <h1>To-Do App - Shlok Zanwar !!</h1>\n      <TodoList />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}